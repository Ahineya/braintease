#include "titlepic-loader.bfm"
#include "palette-loader.bfm"

#define SCREEN_WIDTH 160
#define SCREEN_HEIGHT 100

@proc(resolve_titlepic_colors,
  @set(s0, 0) // i
  @set(s1, 63999)
  @set(s3, #TITLEPIC_MEMORY_BANK)

  @while(@ne(s0, s1),
    @set(t0, #PALETTE_MEMORY_BANK)
    @peek(s2, s3, s0) // Now s2 contains the pixel value
    @peek(s2, t0, s2) // Get the RGB565 value from the palette
    @poke(s2, s3, s0) // Write the RGB
    @inc(s0)
  )
)

@proc(get_titlepic_pixel,
  @mov(s0, @arg1)        // x
  @mov(s1, @arg2)        // y

  @set(t0, 200)          // titlepic height
  @mul(t2, s0, t0)       // x * 200
  @add(t2, t2, s1)       // + y

  @set(sc, #TITLEPIC_MEMORY_BANK)
  @peek(s2, sc, t2)      // read pixel (word)
  @retval(s2, r0)
)

@proc(main, 
  @call(iwad)
  @call(load_titlepic)
  @call(load_palette)
  @call(resolve_titlepic_colors)

  // And now it is time to do some graphics.
  @call2(graphics_init, @imm, 160, @imm, 100)

  @loop(
    @call1(clear_screen, @imm, 0xffff)

    // Here we need to traverse the screen buffer and set the pixels
    // The thing is that screen size is 160x100, but the titlepic is 320x200.
    /*
      for (unsigned short y = 0; y < 100; y++) {
          for (unsigned short x = 0; x < 160; x++) {
              set_pixel(x, y, get_image_byte(x, y));
          }
      }
    */

    @set(s0, 0) // y
    @set(s1, #SCREEN_HEIGHT) // display height
    @set(s2, 0) // x
    @set(s3, #SCREEN_WIDTH) // display width

    @while(@lt(s0, s1),
      @set(s2, 0) // Reset x for each row
      @while(@lt(s2, s3),
        @muli(x0, s2, 2)
        @muli(x1, s0, 2)
        @let(t0, @call2(get_titlepic_pixel, @reg, x0, @reg, x1))
        @call3(set_pixel, @reg, s2, @reg, s0, @reg, t0)
        @inc(s2)
      )
      @inc(s0)
    )


    @call(graphics_flush)
  )
)
