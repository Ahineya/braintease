#include "lib/program.bfm"
#include "lib/stdio.bfm"

@proc(get_titlepic_table_pos,
  @mov(s2, @arg1) @com("Lump count")
  @set(s3, 0)
  
  @let2(s0, s1, @call2(storage_read_u32_le, @imm, 0, @imm, 8))
  @call2(print_hex32, @reg, s0, @reg, s1)

  @set(t0, 8)

  @while(@ne(s2, s3),
    @muli(t1, s3, 16)
    @addi(t0, t1, 8)
    @add(t0, t0, s1)

    @let(x0, @call2(storage_read_at, @reg, s0, @reg, t0))
    @inc(t0)
    @let(x1, @call2(storage_read_at, @reg, s0, @reg, t0))

    @xori(x0, x0, 'T') @a({:; if (x0 == 'T' && x1 == 'I') })
    @xori(x1, x1, 'I')
    @or(x0, x0, x1)
    @jz(x0, {label end})

    @inc(s3)
  )

  {label end}:
  @addi(t0, t0, -5)
  @retval(s0, t0)
)

@proc(get_titlepic_header_pos,
  @mov(s0, @arg1)
  @mov(s1, @arg2)

  @addi(s1, s1, -4)

  @let2(s0, s1, @call2(storage_read_u32_le, @reg, s0, @reg, s1))

  @retval(s0, s1)
)

@proc(iwad,
  @call2(storage_read_at, @imm, 0, @imm, 0)
  @call1(putchar, @reg, rv0)

  @call2(storage_read_at, @imm, 0, @imm, 1)
  @call1(putchar, @reg, rv0)

  @call2(storage_read_at, @imm, 0, @imm, 2)
  @call1(putchar, @reg, rv0)

  @call2(storage_read_at, @imm, 0, @imm, 3)
  @call1(putchar, @reg, rv0)

  @lbrk
)

@proc(get_image_size,
  @mov(s0, @arg1)
  @mov(s1, @arg2)

  @let(x0, @read_u16(s0, s1))
  
  @addi(s1, s1, 2)
  @let(x1, @read_u16(s0, s1))

  @retval(x0, x1)
)

// #define pack(reg1, reg2, dst) {
//   @slli(reg1, reg1, 8)
//   @or(dst, reg1, reg2)
// }

// #define load_locals {
//   @local_load_i(s0, %TITLEPIC_HEADER_BANK)
//   @local_load_i(s1, %TITLEPIC_HEADER_ADDR)
//   @local_load_i(s2, %TITLEPIC_HEADER_BANK_OFFSET)
//   @local_load_i(s3, %TITLEPIC_HEADER_ADDR_OFFSET)
// }

// @proc(save_col,
//   @mov(s0, @arg1) @com("Header bank")
//   @mov(s1, @arg2) @com("Header addr")
//   {local %TITLEPIC_HEADER_BANK}
//   {local %TITLEPIC_HEADER_ADDR}
//   {local %TITLEPIC_HEADER_BANK_OFFSET}
//   {local %TITLEPIC_HEADER_ADDR_OFFSET}
//   {local %POST_Y}
//   {local %POST_LENGTH}

//   @local_store_i(%TITLEPIC_HEADER_BANK, s0)
//   @local_store_i(%TITLEPIC_HEADER_ADDR, s1)

//   @mov(s2, @arg3) @com("Local offset from header: bank")
//   @local_store_i(%TITLEPIC_HEADER_BANK_OFFSET, s2)
//   @mov(s3, @arg4) @com("Local offset from header: addr")
//   @local_store_i(%TITLEPIC_HEADER_ADDR_OFFSET, s3)

//   @set(t5, 0xFF)
//   @loop(
//     @load_locals

//     @let2(s0, s1, @call3(to_file_offset_words, @reg, s0, @reg, s1, @reg, s3))
//     @let2(s0, s1, @call2(storage_read_at_le_unpack, @reg, s0, @reg, s1))
    
//     @mov(t4, s0)
//     @call1(print_hex16, @reg, t4)
//     @call1(print_hex16, @reg, t5)
//     @jeq(t4, t5, {label c_end})

//     @local_store_i(%POST_Y, s0)
//     @local_store_i(%POST_LENGTH, s1)

//     @local_load_i(x0, %POST_LENGTH)

//     @addi(x0, x0, 2)
//     @set(x1, 0)

//     @while(@ne(x1, x0),
//       @addi(x1, x1, 2)

//       @load_locals

//       @add(s3, s3, x1)

//       @let2(s0, s1, @call3(to_file_offset_words, @reg, s0, @reg, s1, @reg, s3))
//       @let2(s0, s1, @call2(storage_read_at_le_unpack, @reg, s0, @reg, s1))
//       @pack(s0, s1, s0)
//       @call1(print_hex16, @reg, s0)

//       @com("Here we will copy this shit to bank 3")
//     )    

//     @local_load_i(s3, %TITLEPIC_HEADER_ADDR_OFFSET)
//     @addi(x1, x1, 2)
//     @add(s3, s3, x1)
//     @local_store_i(%TITLEPIC_HEADER_ADDR_OFFSET, s3)
//   )

//   {label c_end}: {br}
// )

@proc(add_u32,
  {local %A_HI}
  {local %A_LO}
  {local %B_HI}
  {local %B_LO}

  @setlocal(%A_HI, @arg1)
  @setlocal(%A_LO, @arg2)
  @setlocal(%B_HI, @arg3)
  @setlocal(%B_LO, @arg4)

  @add(rv1, @arg2, @arg4)
  @sltu(sc, rv1, @arg2)

  @add(rv0, @arg1, @arg3)
  @add(rv0, rv0, sc)

  @retval(rv0, rv1)
)

@proc(read_column,
  {local %TITLEPIC_HEADER_HI}
  {local %TITLEPIC_HEADER_LO}
  {local %TITLEPIC_OFFS_HI}
  {local %TITLEPIC_OFFS_LO}
  @setlocal(%TITLEPIC_HEADER_HI, @arg1)
  @setlocal(%TITLEPIC_HEADER_LO, @arg2)
  @setlocal(%TITLEPIC_OFFS_HI, @arg3)
  @setlocal(%TITLEPIC_OFFS_LO, @arg4)

  @let2(s0, s1, @call4(add_u32, @reg, @arg1, @reg, @arg2, @reg, @arg3, @reg, @arg4))

  {local %TITLEPIC_COL_BANK}
  {local %TITLEPIC_COL_ADDR}
  @setlocal(%TITLEPIC_COL_BANK, s0)
  @setlocal(%TITLEPIC_COL_ADDR, s1)

  {local %post_length}

  /*
    while (post_header != 0x00FF) {
      // Read post
    }
  */
  {local %post_y}
  {local %eoc_marker}
  @set(x0, 0x00FF)
  @setlocal(%eoc_marker, x0)
  @setlocal(%post_y, r0)
  
  @loop(
    @let(s2, @read_byte(s0, s1))
    @setlocal(%post_y, s2)
    @getlocal(t0, %eoc_marker)
    @jeq(s2, t0, {label endloop})

    @inc(s1)
    @let(s2, @read_byte(s0, s1))
    @setlocal(%post_length, s2)
    @call1(print_uint, @reg, s2) @lbrk
    @inc(s1)
    @inc(s1) @com("skip padding byte")

    /*
      Now we read %post_length bytes of data
    */

    @set(s3, 0)

    @while(@ne(s3, s2),
      @let(t0, @read_byte(s0, s1))
      @call1(print_hex16, @reg, t0) 
      @inc(s1)
      @inc(s3)
    )

    @inc(s1) @com("skip padding byte")
  )

  {label endloop}:
)

@proc(main, 
  @call(iwad)

  @debug("Lump count: ")
  @let2(s0, s1, @call2(storage_read_u32_le, @imm, 0, @imm, 4))

  {local %LUMP_COUNT}
  @local_store_i(%LUMP_COUNT, s1)
  @call1(print_uint, @reg, s1) @lbrk

  @local_load_i(s2, %LUMP_COUNT)
  @let2(s0, s1, @call1(get_titlepic_table_pos, @reg, s2))

  @call2(print_hex32, @reg, s0, @reg, s1)

  @let2(s0, s1, @call2(get_titlepic_header_pos, @reg, s0, @reg, s1))
  @call2(print_hex32, @reg, s0, @reg, s1)

  {local %TITLEPIC_HEADER_BANK}
  {local %TITLEPIC_HEADER_ADDR}
  @local_store_i(%TITLEPIC_HEADER_BANK, s0)
  @local_store_i(%TITLEPIC_HEADER_ADDR, s1)

  @lbrk

  @debug("Titlepic size:")
  @let2(x0, x1, @call2(get_image_size, @reg, s0, @reg, s1))

  {local %TITLEPIC_WIDTH}
  {local %TITLEPIC_HEIGHT}
  @local_store_i(%TITLEPIC_WIDTH, x0)
  @local_store_i(%TITLEPIC_HEIGHT, x1)

  @call1(print_uint, @reg, x0)
  @call1(putchar, @imm, 'x')
  @call1(print_uint, @reg, x1)
  @lbrk
  
  {local %i}
  @setlocal(%i, r0)

  @getlocal(t0, %i)
  @getlocal(t1, %TITLEPIC_WIDTH)
  @getlocal(s0, %TITLEPIC_HEADER_BANK)
  @getlocal(s1, %TITLEPIC_HEADER_ADDR)

  @while(@ne(t0, t1),
    @debug("Column: ") 
    @call1(print_uint, @reg, t0)
    @lbrk

    @muli(t2, t0, 4)
    @addi(t2, t2, 8)
    @add(t2, t2, s1)
    
    @let2(s2, s3, @call2(storage_read_u32_le, @reg, s0, @reg, t2))

    @call4(read_column, @reg, s0, @reg, s1, @reg, s2, @reg, s3)

    @getlocal(t0, %i)
    @getlocal(t1, %TITLEPIC_WIDTH)
    @inc(t0)
    @setlocal(%i, t0)
  )
)
