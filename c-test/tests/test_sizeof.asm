; Generated by Ripple C99 Compiler (rcc)

_init_globals:
    RET
main:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 25 slots for locals
    ADDI SP, SP, 25
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    ADD S3, FP, R0
    LI S2, 1
    STORE S2, SB, S3
    ADD S1, FP, R0
    ADDI S1, S1, 1
    LI S0, 2
    STORE S0, SB, S1
    ADD T7, FP, R0
    ADDI T7, T7, 2
    LI T6, 4
    STORE T6, SB, T7
    ADD T5, FP, R0
    ADDI T5, T5, 3
    LI T4, 4
    STORE T4, SB, T5
    ADD T3, FP, R0
    ADDI T3, T3, 4
    LI T2, 42
    STORE T2, SB, T3
    ADD T1, FP, R0
    ADDI T1, T1, 5
    ADD T0, FP, R0
    ADDI T0, T0, 15
    LI S2, 2
    STORE S2, SB, T0
    ADD S0, FP, R0
    ADDI S0, S0, 16
    LI T6, 20
    STORE T6, SB, S0
    LOAD T4, SB, S3
    LI T2, 1
    XOR S2, T4, T2
    LI T6, 1
    SLTU T4, S2, T6
    BEQ T4, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI S2, 49
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function putchar
    CALL putchar
; Scalar return value for t10
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI T6, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function putchar
    CALL putchar
; Scalar return value for t11
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
    LOAD T2, SB, S1
    LI T4, 2
; Initialize SB as stack bank (1)
    LI SB, 1
; Spill t2 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T7, SB, SC
    XOR T7, T2, T4
; Spill t3 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T5, SB, SC
    LI T5, 1
    SLTU T2, T7, T5
    BEQ T2, R0, L_main_5
; Branch to L_main_5 if condition is false
    BEQ R0, R0, L_main_4
; Unconditional branch to L_main_4 (condition was true)
L_main_4:
    LI T7, 50
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t14
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_5:
    LI T5, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function putchar
    CALL putchar
; Scalar return value for t15
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_6:
; Reload t2 from slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    LOAD T4, SB, SC
    LOAD T2, SB, T4
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T3, SB, SC
    LI T3, 4
; Spill t5 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T1, SB, SC
    XOR T1, T2, T3
; Spill t6 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T0, SB, SC
    LI T0, 1
    SLTU T2, T1, T0
    BEQ T2, R0, L_main_8
; Branch to L_main_8 if condition is false
    BEQ R0, R0, L_main_7
; Unconditional branch to L_main_7 (condition was true)
L_main_7:
    LI T1, 51
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t18
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_8:
    LI T0, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t19
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_9:
; Reload t3 from slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    LOAD T3, SB, SC
    LOAD T2, SB, T3
; Spill t7 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE S0, SB, SC
    LI S0, 4
; Spill t0 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S3, SB, SC
    XOR S3, T2, S0
; Spill const_f0_op10_49 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE S2, SB, SC
    LI S2, 1
    SLTU T2, S3, S2
    BEQ T2, R0, L_main_11
; Branch to L_main_11 if condition is false
    BEQ R0, R0, L_main_10
; Unconditional branch to L_main_10 (condition was true)
L_main_10:
    LI S3, 52
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t22
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_11:
    LI S2, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function putchar
    CALL putchar
; Scalar return value for t23
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_12:
; Reload t6 from slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    LOAD S0, SB, SC
    LOAD T2, SB, S0
; Spill const_f0_op11_88 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T6, SB, SC
    LI T6, 2
; Spill t1 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S1, SB, SC
    XOR S1, T2, T6
; Spill const_f0_op15_50 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T7, SB, SC
    LI T7, 1
    SLTU T2, S1, T7
    BEQ T2, R0, L_main_14
; Branch to L_main_14 if condition is false
    BEQ R0, R0, L_main_13
; Unconditional branch to L_main_13 (condition was true)
L_main_13:
    LI S1, 53
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t26
    BEQ R0, R0, L_main_15
; Unconditional branch to L_main_15
L_main_14:
    LI T7, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t27
    BEQ R0, R0, L_main_15
; Unconditional branch to L_main_15
L_main_15:
; Reload t7 from slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    LOAD T6, SB, SC
    LOAD T2, SB, T6
; Spill const_f0_op16_88 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T5, SB, SC
    LI T5, 20
; Spill t2 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T4, SB, SC
    XOR T4, T2, T5
; Spill const_f0_op20_51 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T1, SB, SC
    LI T1, 1
    SLTU T2, T4, T1
    BEQ T2, R0, L_main_17
; Branch to L_main_17 if condition is false
    BEQ R0, R0, L_main_16
; Unconditional branch to L_main_16 (condition was true)
L_main_16:
    LI T4, 54
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function putchar
    CALL putchar
; Scalar return value for t30
    BEQ R0, R0, L_main_18
; Unconditional branch to L_main_18
L_main_17:
    LI T1, 88
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t31
    BEQ R0, R0, L_main_18
; Unconditional branch to L_main_18
L_main_18:
    LI T5, 10
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function putchar
    CALL putchar
; Scalar return value for t32
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
