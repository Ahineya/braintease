; Generated by Ripple C99 Compiler (rcc)

_init_globals:
; String data "HELLO" at address 0
    LI T0, 72
    LI T1, 0
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 1
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 3
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 4
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 5
    STORE T0, GP, T1
; String data "WORLD" at address 2
    LI T0, 87
    LI T1, 2
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 3
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 4
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 5
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 6
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 7
    STORE T0, GP, T1
; String data "POINTER" at address 4
    LI T0, 80
    LI T1, 4
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 5
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 6
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 7
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 8
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 9
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 10
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 11
    STORE T0, GP, T1
; Uninitialized global global_ptr
; String data "Testing global strings:" at address 14
    LI T0, 84
    LI T1, 14
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 15
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 16
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 17
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 18
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 19
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 20
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 21
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 22
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 23
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 24
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 25
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 26
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 27
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 28
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 29
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 30
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 31
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 32
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 33
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 34
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 35
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 36
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 37
    STORE T0, GP, T1
; String data "T1: global_str1:" at address 38
    LI T0, 84
    LI T1, 38
    STORE T0, GP, T1
    LI T0, 49
    LI T1, 39
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 40
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 41
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 42
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 43
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 44
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 45
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 46
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 47
    STORE T0, GP, T1
    LI T0, 95
    LI T1, 48
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 49
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 50
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 51
    STORE T0, GP, T1
    LI T0, 49
    LI T1, 52
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 53
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 54
    STORE T0, GP, T1
; String data "T2: global_str2:" at address 55
    LI T0, 84
    LI T1, 55
    STORE T0, GP, T1
    LI T0, 50
    LI T1, 56
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 57
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 58
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 59
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 60
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 61
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 62
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 63
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 64
    STORE T0, GP, T1
    LI T0, 95
    LI T1, 65
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 66
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 67
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 68
    STORE T0, GP, T1
    LI T0, 50
    LI T1, 69
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 70
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 71
    STORE T0, GP, T1
; String data "T3: global_ptr:" at address 72
    LI T0, 84
    LI T1, 72
    STORE T0, GP, T1
    LI T0, 51
    LI T1, 73
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 74
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 75
    STORE T0, GP, T1
    LI T0, 103
    LI T1, 76
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 77
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 78
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 79
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 80
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 81
    STORE T0, GP, T1
    LI T0, 95
    LI T1, 82
    STORE T0, GP, T1
    LI T0, 112
    LI T1, 83
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 84
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 85
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 86
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 87
    STORE T0, GP, T1
; String data "T4: Char by char:" at address 88
    LI T0, 84
    LI T1, 88
    STORE T0, GP, T1
    LI T0, 52
    LI T1, 89
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 90
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 91
    STORE T0, GP, T1
    LI T0, 67
    LI T1, 92
    STORE T0, GP, T1
    LI T0, 104
    LI T1, 93
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 94
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 95
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 96
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 97
    STORE T0, GP, T1
    LI T0, 121
    LI T1, 98
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 99
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 100
    STORE T0, GP, T1
    LI T0, 104
    LI T1, 101
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 102
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 103
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 104
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 105
    STORE T0, GP, T1
; String data "T5: Check null:" at address 106
    LI T0, 84
    LI T1, 106
    STORE T0, GP, T1
    LI T0, 53
    LI T1, 107
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 108
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 109
    STORE T0, GP, T1
    LI T0, 67
    LI T1, 110
    STORE T0, GP, T1
    LI T0, 104
    LI T1, 111
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 112
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 113
    STORE T0, GP, T1
    LI T0, 107
    LI T1, 114
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 115
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 116
    STORE T0, GP, T1
    LI T0, 117
    LI T1, 117
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 118
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 119
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 120
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 121
    STORE T0, GP, T1
; String data "YES - null terminated" at address 122
    LI T0, 89
    LI T1, 122
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 123
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 124
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 125
    STORE T0, GP, T1
    LI T0, 45
    LI T1, 126
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 127
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 128
    STORE T0, GP, T1
    LI T0, 117
    LI T1, 129
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 130
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 131
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 132
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 133
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 134
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 135
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 136
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 137
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 138
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 139
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 140
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 141
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 142
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 143
    STORE T0, GP, T1
; String data "NO - not null terminated!" at address 144
    LI T0, 78
    LI T1, 144
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 145
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 146
    STORE T0, GP, T1
    LI T0, 45
    LI T1, 147
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 148
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 149
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 150
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 151
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 152
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 153
    STORE T0, GP, T1
    LI T0, 117
    LI T1, 154
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 155
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 156
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 157
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 158
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 159
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 160
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 161
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 162
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 163
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 164
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 165
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 166
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 167
    STORE T0, GP, T1
    LI T0, 33
    LI T1, 168
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 169
    STORE T0, GP, T1
    RET
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 8 slots for locals
    ADDI SP, SP, 8
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    LI S3, 14
; Spill live registers before call
; Spill const_f0_op0_14 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 8
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t0
    LI S2, 38
; Spill live registers before call
; Spill t0 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 9
    STORE RV0, SB, SC
; Spill const_f0_op1_38 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 10
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t1
    LI S1, 0
    LOAD S0, GP, S1
    ADDI T7, S1, 1
    LOAD T6, GP, T7
; Spill live registers before call
; Spill t1 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 11
    STORE RV0, SB, SC
; Spill load_f0_op2_t2_addr to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE S1, SB, SC
; Spill t2 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE S0, SB, SC
; Spill load_f0_op5_t2_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T6, R0
; Call function puts
    CALL puts
; Scalar return value for t3
    LI T5, 55
; Spill live registers before call
; Spill t3 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE RV0, SB, SC
; Spill const_f0_op6_55 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t4
    LI T4, 2
    LOAD T3, GP, T4
    ADDI T2, T4, 1
    LOAD T1, GP, T2
; Spill live registers before call
; Spill t4 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE RV0, SB, SC
; Spill load_f0_op7_t5_addr to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T4, SB, SC
; Spill t5 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T3, SB, SC
; Spill load_f0_op10_t5_bank_val to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, T1, R0
; Call function puts
    CALL puts
; Scalar return value for t6
    LI T0, 72
; Spill live registers before call
; Spill t6 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE RV0, SB, SC
; Spill const_f0_op11_72 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t7
    LI S3, 12
    LOAD S2, GP, S3
    ADDI T7, S3, 1
    LOAD S1, GP, T7
; Spill live registers before call
; Spill t7 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE RV0, SB, SC
; Spill load_f0_op12_t8_addr to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S3, SB, SC
; Spill t8 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S2, SB, SC
; Spill load_f0_op15_t8_bank_val to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, S1, R0
; Call function puts
    CALL puts
; Scalar return value for t9
    LI S0, 88
; Spill live registers before call
; Spill t9 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE RV0, SB, SC
; Spill const_f0_op16_88 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t10
    LI T6, 0
    LOAD T5, GP, T6
    ADDI T2, T6, 1
    LOAD T4, GP, T2
    ADD T3, T5, R0
    LOAD T1, T4, T3
; Spill live registers before call
; Spill t10 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE RV0, SB, SC
; Spill load_f0_op17_t11_addr to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T6, SB, SC
; Spill t12 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE T3, SB, SC
; Spill load_f0_op20_t11_bank_val to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T4, SB, SC
; Spill t13 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t14
    LI T0, 0
    LOAD T7, GP, T0
    ADDI S3, T0, 1
    LOAD S2, GP, S3
    ADDI S1, T7, 1
    LOAD S0, S2, S1
; Spill live registers before call
; Spill t14 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE RV0, SB, SC
; Spill load_f0_op21_t15_addr to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T0, SB, SC
; Spill t16 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S1, SB, SC
; Spill load_f0_op24_t15_bank_val to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE S2, SB, SC
; Spill t17 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t18
    LI T2, 0
    LOAD T5, GP, T2
    ADDI T6, T2, 1
    LOAD T3, GP, T6
    ADDI T4, T5, 2
    LOAD T1, T3, T4
; Spill live registers before call
; Spill t18 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE RV0, SB, SC
; Spill load_f0_op25_t19_addr to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T2, SB, SC
; Spill t20 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T4, SB, SC
; Spill load_f0_op28_t19_bank_val to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T3, SB, SC
; Spill t21 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t22
    LI S3, 0
    LOAD T7, GP, S3
    ADDI T0, S3, 1
    LOAD S1, GP, T0
    ADDI S2, T7, 3
    LOAD S0, S1, S2
; Spill live registers before call
; Spill t22 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE RV0, SB, SC
; Spill load_f0_op29_t23_addr to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE S3, SB, SC
; Spill t24 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE S2, SB, SC
; Spill load_f0_op32_t23_bank_val to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE S1, SB, SC
; Spill t25 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t26
    LI T6, 0
    LOAD T5, GP, T6
    ADDI T2, T6, 1
    LOAD T4, GP, T2
    ADDI T3, T5, 4
    LOAD T1, T4, T3
; Spill live registers before call
; Spill t26 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE RV0, SB, SC
; Spill load_f0_op33_t27_addr to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T6, SB, SC
; Spill t28 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T3, SB, SC
; Spill load_f0_op36_t27_bank_val to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T4, SB, SC
; Spill t29 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t30
    LI T0, 10
; Spill live registers before call
; Spill t30 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE RV0, SB, SC
; Spill const_f0_op37_10 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t31
    LI T7, 106
; Spill live registers before call
; Spill t31 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE RV0, SB, SC
; Spill const_f0_op38_106 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t32
    LI S3, 0
    LOAD S2, GP, S3
    ADDI S1, S3, 1
    LOAD S0, GP, S1
    ADDI T2, S2, 5
    LOAD T5, S0, T2
    LI T6, 0
    XOR T3, T5, T6
    LI T4, 1
    SLTU T5, T3, T4
    BEQ T5, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI T1, 122
; Spill live registers before call
; Spill t32 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE RV0, SB, SC
; Spill load_f0_op39_t33_addr to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE S3, SB, SC
; Spill t34 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE T2, SB, SC
; Spill load_f0_op42_t33_bank_val to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE S0, SB, SC
; Spill const_f0_op45_122 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T1, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t37
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI T0, 144
; Spill live registers before call
; Spill t37 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE RV0, SB, SC
; Spill const_f0_op46_144 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, GP, R0
; Call function puts
    CALL puts
; Scalar return value for t38
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
