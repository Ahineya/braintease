; Generated by Ripple C99 Compiler (rcc)

_init_globals:
; Uninitialized global global_evil
    RET
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 25 slots for locals
    ADDI SP, SP, 25
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    ADD S3, FP, R0
    ADD S2, FP, R0
    ADDI S2, S2, 11
    ADD S1, FP, R0
    ADDI S1, S1, 13
    LI S0, 42
    STORE S0, SB, S1
    ADD T7, FP, R0
    ADDI T7, T7, 14
    ADD T6, FP, R0
    ADDI T6, T6, 15
    ADD T5, S3, R0
    LI T4, 10
    STORE T4, SB, T5
; Recompute alloca t0 at FP+0
    ADD T3, FP, R0
    ADDI T2, T3, 1
    ADD T1, T2, R0
    LI T0, 20
    STORE T0, SB, T1
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    ADDI S3, S0, 1
    ADDI T4, S3, 1
    LI T3, 30
    STORE T3, SB, T4
; Recompute alloca t0 at FP+0
    ADD T2, FP, R0
    ADDI T0, T2, 3
    ADD S0, SB, R0
    STORE S1, SB, T0
    ADDI S3, T0, 1
    STORE S0, SB, S3
; Recompute alloca t0 at FP+0
    ADD T3, FP, R0
    ADDI T2, T3, 5
    ADD S3, T2, R0
    LI S0, 100
    STORE S0, SB, S3
; Recompute alloca t0 at FP+0
    ADD S1, FP, R0
    ADDI T3, S1, 5
    ADDI T2, T3, 1
    LI S0, 200
    STORE S0, SB, T2
; Recompute alloca t0 at FP+0
    ADD S1, FP, R0
    ADDI T3, S1, 5
    ADDI S0, T3, 2
    LI S1, 300
    STORE S1, SB, S0
    ADD T3, T6, R0
    LI S1, 1000
    STORE S1, SB, T3
; Recompute alloca t4 at FP+15
    ADD T6, FP, R0
    ADDI T6, T6, 15
    ADDI S1, T6, 1
    LI T6, 2000
    STORE T6, SB, S1
; Recompute alloca t0 at FP+0
    ADD T6, FP, R0
    ADDI S2, T6, 16
; Recompute alloca t4 at FP+15
    ADD T6, FP, R0
    ADDI T6, T6, 15
    ADD T7, SB, R0
    STORE T6, SB, S2
; Spill t5 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T5, SB, SC
    ADDI T5, S2, 1
    STORE T7, SB, T5
; Recompute alloca t0 at FP+0
    ADD T5, FP, R0
    ADDI T7, T5, 10
    LI T6, 40
    STORE T6, SB, T7
; Recompute alloca t0 at FP+0
    ADD T5, FP, R0
    ADD T6, T5, R0
    LOAD T5, SB, T6
; Spill t7 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T1, SB, SC
    LI T1, 10
; Spill t9 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T4, SB, SC
    XOR T4, T5, T1
; Spill t10 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T0, SB, SC
    LI T0, 1
    SLTU T5, T4, T0
; Recompute alloca t0 at FP+0
    ADD T4, FP, R0
    ADDI T0, T4, 10
    LOAD T1, SB, T0
    LI T4, 40
; Spill t12 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE S3, SB, SC
    XOR S3, T1, T4
; Spill t14 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T2, SB, SC
    LI T2, 1
    SLTU T1, S3, T2
    AND T5, T5, T1
    BEQ T5, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI S3, 49
; Spill live registers before call
; Spill t16 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S0, SB, SC
; Spill t17 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T3, SB, SC
; Spill t18 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE S1, SB, SC
; Spill t19 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE S2, SB, SC
; Spill t20 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T7, SB, SC
; Spill t21 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE T6, SB, SC
; Spill t24 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T0, SB, SC
; Spill const_f0_op20_49 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t28
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI T2, 78
; Spill live registers before call
; Spill t28 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE RV0, SB, SC
; Spill const_f0_op21_78 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function putchar
    CALL putchar
; Scalar return value for t29
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
; Recompute alloca t0 at FP+0
    ADD T4, FP, R0
    ADDI T1, T4, 1
    ADD T5, T1, R0
    LOAD S0, SB, T5
    LI T3, 20
    XOR S1, S0, T3
    LI S2, 1
    SLTU S0, S1, S2
; Recompute alloca t0 at FP+0
    ADD T7, FP, R0
    ADDI T6, T7, 1
    ADDI T0, T6, 1
    LOAD S3, SB, T0
    LI T2, 30
    XOR T4, S3, T2
    LI T1, 1
    SLTU S3, T4, T1
    AND S0, S0, S3
    BEQ S0, R0, L_main_5
; Branch to L_main_5 if condition is false
    BEQ R0, R0, L_main_4
; Unconditional branch to L_main_4 (condition was true)
L_main_4:
    LI S1, 50
; Spill live registers before call
; Spill t29 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE RV0, SB, SC
; Spill t31 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T5, SB, SC
; Spill t35 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE T0, SB, SC
; Spill const_f0_op28_50 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t39
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_5:
    LI S2, 78
; Spill live registers before call
; Spill t39 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE RV0, SB, SC
; Spill const_f0_op29_78 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function putchar
    CALL putchar
; Scalar return value for t40
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_6:
; Recompute alloca t0 at FP+0
    ADD T3, FP, R0
    ADDI T7, T3, 3
    LOAD T6, SB, T7
    ADDI T4, T7, 1
    LOAD T1, SB, T4
    LOAD T2, T1, T6
    LI S3, 42
    XOR S0, T2, S3
    LI T5, 1
    SLTU T2, S0, T5
    BEQ T2, R0, L_main_8
; Branch to L_main_8 if condition is false
    BEQ R0, R0, L_main_7
; Unconditional branch to L_main_7 (condition was true)
L_main_7:
    LI T0, 51
; Spill live registers before call
; Spill t40 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE RV0, SB, SC
; Spill t41 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T7, SB, SC
; Spill t42 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T6, SB, SC
; Spill load_f0_op32_t42_bank_val to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T1, SB, SC
; Spill const_f0_op35_51 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t45
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_8:
    LI S1, 78
; Spill live registers before call
; Spill t45 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE RV0, SB, SC
; Spill const_f0_op36_78 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t46
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_9:
; Recompute alloca t0 at FP+0
    ADD S2, FP, R0
    ADDI T3, S2, 5
    ADD T4, T3, R0
    LOAD S0, SB, T4
; Recompute alloca t0 at FP+0
    ADD T5, FP, R0
    ADDI S3, T5, 5
    ADDI T2, S3, 1
    LOAD T7, SB, T2
    ADD S0, S0, T7
; Recompute alloca t0 at FP+0
    ADD T6, FP, R0
    ADDI T1, T6, 5
    ADDI T0, T1, 2
    LOAD S1, SB, T0
    ADD S0, S0, S1
    LI S2, 600
    XOR T3, S0, S2
    LI T5, 1
    SLTU S0, T3, T5
    BEQ S0, R0, L_main_11
; Branch to L_main_11 if condition is false
    BEQ R0, R0, L_main_10
; Unconditional branch to L_main_10 (condition was true)
L_main_10:
    LI S3, 52
; Spill live registers before call
; Spill t46 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE RV0, SB, SC
; Spill t48 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE T4, SB, SC
; Spill t51 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE T2, SB, SC
; Spill t55 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T0, SB, SC
; Spill const_f0_op42_52 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t59
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_11:
    LI T7, 78
; Spill live registers before call
; Spill t59 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE RV0, SB, SC
; Spill const_f0_op43_78 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t60
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_12:
; Recompute alloca t0 at FP+0
    ADD T6, FP, R0
    ADDI T1, T6, 16
    LOAD S1, SB, T1
    ADDI T3, T1, 1
    LOAD T5, SB, T3
    ADD S2, S1, R0
    LOAD S0, T5, S2
    LI T4, 1000
    XOR T2, S0, T4
    LI T0, 1
    SLTU S0, T2, T0
    BEQ S0, R0, L_main_14
; Branch to L_main_14 if condition is false
    BEQ R0, R0, L_main_13
; Unconditional branch to L_main_13 (condition was true)
L_main_13:
    LI S3, 53
; Spill live registers before call
; Spill t60 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE RV0, SB, SC
; Spill t61 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T1, SB, SC
; Spill t63 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE S2, SB, SC
; Spill load_f0_op46_t62_bank_val to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE T5, SB, SC
; Spill const_f0_op49_53 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t66
    BEQ R0, R0, L_main_15
; Unconditional branch to L_main_15
L_main_14:
    LI T7, 78
; Spill live registers before call
; Spill t66 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE RV0, SB, SC
; Spill const_f0_op50_78 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t67
    BEQ R0, R0, L_main_15
; Unconditional branch to L_main_15
L_main_15:
    LI T6, 0
    ADD T3, T6, R0
    LI S1, 77
    STORE S1, GP, T3
    LI T2, 0
    ADDI T0, T2, 1
    ADD T4, T0, R0
    LI S0, 88
    STORE S0, GP, T4
    LI T1, 0
    ADD S2, T1, R0
    LOAD T5, GP, S2
    LI S3, 77
    XOR T7, T5, S3
    LI T6, 1
    SLTU T5, T7, T6
    LI S1, 0
    ADDI T2, S1, 1
    ADD T0, T2, R0
    LOAD S0, GP, T0
    LI T1, 88
    XOR T7, S0, T1
    LI T6, 1
    SLTU S0, T7, T6
    AND T5, T5, S0
    BEQ T5, R0, L_main_17
; Branch to L_main_17 if condition is false
    BEQ R0, R0, L_main_16
; Unconditional branch to L_main_16 (condition was true)
L_main_16:
    LI S3, 54
; Spill live registers before call
; Spill t67 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE RV0, SB, SC
; Spill t68 to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE T3, SB, SC
; Spill t70 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE T4, SB, SC
; Spill t71 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE S2, SB, SC
; Spill t75 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE T0, SB, SC
; Spill const_f0_op63_54 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t79
    BEQ R0, R0, L_main_18
; Unconditional branch to L_main_18
L_main_17:
    LI S1, 78
; Spill live registers before call
; Spill t79 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE RV0, SB, SC
; Spill const_f0_op64_78 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t80
    BEQ R0, R0, L_main_18
; Unconditional branch to L_main_18
L_main_18:
; Recompute alloca t0 at FP+0
    ADD T2, FP, R0
    ADD T7, SB, R0
; Recompute alloca t1 at FP+11
    ADD T6, FP, R0
    ADDI T6, T6, 11
    STORE T2, SB, T6
    ADDI T1, T6, 1
    STORE T7, SB, T1
    LOAD S0, SB, T6
    ADDI T5, T6, 1
    LOAD T3, SB, T5
    ADDI T4, S0, 1
    ADD S2, T4, R0
    LI T0, 99
    STORE T0, T3, S2
; Recompute alloca t0 at FP+0
    ADD S3, FP, R0
    ADDI S1, S3, 1
    ADD T1, S1, R0
    LOAD T7, SB, T1
    LI T2, 99
    XOR T5, T7, T2
    LI S0, 1
    SLTU T7, T5, S0
    BEQ T7, R0, L_main_20
; Branch to L_main_20 if condition is false
    BEQ R0, R0, L_main_19
; Unconditional branch to L_main_19 (condition was true)
L_main_19:
    LI T4, 55
; Spill live registers before call
; Spill t80 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE RV0, SB, SC
; Spill t83 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE S2, SB, SC
; Spill load_f0_op69_t81_bank_val to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE T3, SB, SC
; Spill t85 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE T1, SB, SC
; Spill const_f0_op74_55 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function putchar
    CALL putchar
; Scalar return value for t88
    BEQ R0, R0, L_main_21
; Unconditional branch to L_main_21
L_main_20:
    LI T0, 78
; Spill live registers before call
; Spill t88 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE RV0, SB, SC
; Spill const_f0_op75_78 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t89
    BEQ R0, R0, L_main_21
; Unconditional branch to L_main_21
L_main_21:
; Recompute alloca t1 at FP+11
    ADD S3, FP, R0
    ADDI S3, S3, 11
    LOAD S1, SB, S3
    ADDI T5, S3, 1
    LOAD S0, SB, T5
    ADDI T2, S1, 5
    ADDI T7, T2, 1
    LI T6, 777
    STORE T6, S0, T7
; Recompute alloca t0 at FP+0
    ADD S2, FP, R0
    ADDI T3, S2, 5
    ADDI T1, T3, 1
    LOAD T4, SB, T1
    LI T0, 777
    XOR T5, T4, T0
    LI S1, 1
    SLTU T4, T5, S1
    BEQ T4, R0, L_main_23
; Branch to L_main_23 if condition is false
    BEQ R0, R0, L_main_22
; Unconditional branch to L_main_22 (condition was true)
L_main_22:
    LI T2, 56
; Spill live registers before call
; Spill t89 to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE RV0, SB, SC
; Spill t92 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T7, SB, SC
; Spill load_f0_op78_t90_bank_val to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE S0, SB, SC
; Spill t94 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE T1, SB, SC
; Spill const_f0_op83_56 to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function putchar
    CALL putchar
; Scalar return value for t97
    BEQ R0, R0, L_main_24
; Unconditional branch to L_main_24
L_main_23:
    LI T6, 78
; Spill live registers before call
; Spill t97 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE RV0, SB, SC
; Spill const_f0_op84_78 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function putchar
    CALL putchar
; Scalar return value for t98
    BEQ R0, R0, L_main_24
; Unconditional branch to L_main_24
L_main_24:
; Recompute alloca t1 at FP+11
    ADD S2, FP, R0
    ADDI S2, S2, 11
    LOAD T3, SB, S2
    ADDI T5, S2, 1
    LOAD S1, SB, T5
    ADDI T0, T3, 16
    LOAD T4, S1, T0
    ADDI S3, T0, 1
    LOAD T7, S1, S3
    ADDI S0, T4, 1
    LOAD T1, T7, S0
    LI T2, 2000
    XOR T6, T1, T2
    LI T5, 1
    SLTU T1, T6, T5
    BEQ T1, R0, L_main_26
; Branch to L_main_26 if condition is false
    BEQ R0, R0, L_main_25
; Unconditional branch to L_main_25 (condition was true)
L_main_25:
    LI T3, 57
; Spill live registers before call
; Spill t98 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE RV0, SB, SC
; Spill t100 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE T0, SB, SC
; Spill load_f0_op87_t99_bank_val to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE S1, SB, SC
; Spill t102 to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE S0, SB, SC
; Spill load_f0_op89_t101_bank_val to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE T7, SB, SC
; Spill const_f0_op92_57 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t105
    BEQ R0, R0, L_main_27
; Unconditional branch to L_main_27
L_main_26:
    LI S3, 78
; Spill live registers before call
; Spill t105 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE RV0, SB, SC
; Spill const_f0_op93_78 to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t106
    BEQ R0, R0, L_main_27
; Unconditional branch to L_main_27
L_main_27:
; Recompute alloca t1 at FP+11
    ADD T4, FP, R0
    ADDI T4, T4, 11
    LOAD T6, SB, T4
    ADDI T5, T4, 1
    LOAD T2, SB, T5
    ADDI T1, T6, 16
    LOAD S2, T2, T1
    ADDI T0, T1, 1
    LOAD S1, T2, T0
    ADDI S0, S2, 1
    LI T7, 3000
    STORE T7, S1, S0
; Recompute alloca t4 at FP+15
    ADD T3, FP, R0
    ADDI T3, T3, 15
    ADDI S3, T3, 1
    LOAD T5, SB, S3
    LI T6, 3000
    XOR T0, T5, T6
    LI S2, 1
    SLTU T5, T0, S2
    BEQ T5, R0, L_main_29
; Branch to L_main_29 if condition is false
    BEQ R0, R0, L_main_28
; Unconditional branch to L_main_28 (condition was true)
L_main_28:
    LI T7, 65
; Spill live registers before call
; Spill t106 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE RV0, SB, SC
; Spill t108 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE T1, SB, SC
; Spill load_f0_op96_t107_bank_val to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 100
    STORE T2, SB, SC
; Spill t110 to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 101
    STORE S0, SB, SC
; Spill load_f0_op98_t109_bank_val to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 102
    STORE S1, SB, SC
; Spill t111 to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 103
    STORE S3, SB, SC
; Spill const_f0_op103_65 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 104
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t114
    BEQ R0, R0, L_main_30
; Unconditional branch to L_main_30
L_main_29:
    LI T3, 78
; Spill live registers before call
; Spill t114 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 105
    STORE RV0, SB, SC
; Spill const_f0_op104_78 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 106
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t115
    BEQ R0, R0, L_main_30
; Unconditional branch to L_main_30
L_main_30:
; Recompute alloca t0 at FP+0
    ADD T0, FP, R0
    ADD S2, T0, R0
; Recompute alloca t0 at FP+0
    ADD T6, FP, R0
    ADDI T5, T6, 1
    ADD T4, T5, R0
    LOAD T1, SB, T4
; Recompute alloca t0 at FP+0
    ADD T2, FP, R0
    ADDI S0, T2, 1
    ADDI S1, S0, 1
    LOAD S3, SB, S1
    ADD T1, T1, S3
    STORE T1, SB, S2
; Recompute alloca t0 at FP+0
    ADD T7, FP, R0
    ADD T3, T7, R0
    LOAD T0, SB, T3
    LI T6, 129
    XOR T5, T0, T6
    LI T2, 1
    SLTU T0, T5, T2
    BEQ T0, R0, L_main_32
; Branch to L_main_32 if condition is false
    BEQ R0, R0, L_main_31
; Unconditional branch to L_main_31 (condition was true)
L_main_31:
    LI S0, 66
; Spill live registers before call
; Spill t115 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 107
    STORE RV0, SB, SC
; Spill t118 to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 108
    STORE T4, SB, SC
; Spill t121 to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 109
    STORE S1, SB, SC
; Spill t123 to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 110
    STORE T1, SB, SC
; Spill t116 to slot 86
    ADD SC, FP, R0
    ADDI SC, SC, 111
    STORE S2, SB, SC
; Spill t124 to slot 87
    ADD SC, FP, R0
    ADDI SC, SC, 112
    STORE T3, SB, SC
; Spill const_f0_op110_66 to slot 88
    ADD SC, FP, R0
    ADDI SC, SC, 113
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t127
    BEQ R0, R0, L_main_33
; Unconditional branch to L_main_33
L_main_32:
    LI S3, 78
; Spill live registers before call
; Spill t127 to slot 89
    ADD SC, FP, R0
    ADDI SC, SC, 114
    STORE RV0, SB, SC
; Spill const_f0_op111_78 to slot 90
    ADD SC, FP, R0
    ADDI SC, SC, 115
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t128
    BEQ R0, R0, L_main_33
; Unconditional branch to L_main_33
L_main_33:
    LI T7, 0
    ADDI T5, T7, 3
; Recompute alloca t0 at FP+0
    ADD T2, FP, R0
    ADD T6, T2, R0
    ADD T0, SB, R0
    STORE T6, GP, T5
    ADDI T4, T5, 1
    STORE T0, GP, T4
    LI S1, 0
    ADDI T1, S1, 3
    LOAD S2, GP, T1
    ADDI T3, T1, 1
    LOAD S0, GP, T3
    LI S3, 555
    STORE S3, S0, S2
; Recompute alloca t0 at FP+0
    ADD T7, FP, R0
    ADD T2, T7, R0
    LOAD T4, SB, T2
    LI T0, 555
    XOR T6, T4, T0
    LI S1, 1
    SLTU T4, T6, S1
    BEQ T4, R0, L_main_35
; Branch to L_main_35 if condition is false
    BEQ R0, R0, L_main_34
; Unconditional branch to L_main_34 (condition was true)
L_main_34:
    LI T3, 67
; Spill live registers before call
; Spill t128 to slot 91
    ADD SC, FP, R0
    ADDI SC, SC, 116
    STORE RV0, SB, SC
; Spill t129 to slot 92
    ADD SC, FP, R0
    ADDI SC, SC, 117
    STORE T5, SB, SC
; Spill t131 to slot 93
    ADD SC, FP, R0
    ADDI SC, SC, 118
    STORE T1, SB, SC
; Spill t132 to slot 94
    ADD SC, FP, R0
    ADDI SC, SC, 119
    STORE S2, SB, SC
; Spill load_f0_op118_t132_bank_val to slot 95
    ADD SC, FP, R0
    ADDI SC, SC, 120
    STORE S0, SB, SC
; Spill t133 to slot 96
    ADD SC, FP, R0
    ADDI SC, SC, 121
    STORE T2, SB, SC
; Spill const_f0_op123_67 to slot 97
    ADD SC, FP, R0
    ADDI SC, SC, 122
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t136
    BEQ R0, R0, L_main_36
; Unconditional branch to L_main_36
L_main_35:
    LI S3, 78
; Spill live registers before call
; Spill t136 to slot 98
    ADD SC, FP, R0
    ADDI SC, SC, 123
    STORE RV0, SB, SC
; Spill const_f0_op124_78 to slot 99
    ADD SC, FP, R0
    ADDI SC, SC, 124
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t137
    BEQ R0, R0, L_main_36
; Unconditional branch to L_main_36
L_main_36:
    LI T7, 10
; Spill live registers before call
; Spill t137 to slot 100
    ADD SC, FP, R0
    ADDI SC, SC, 125
    STORE RV0, SB, SC
; Spill const_f0_op125_10 to slot 101
    ADD SC, FP, R0
    ADDI SC, SC, 126
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t138
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
