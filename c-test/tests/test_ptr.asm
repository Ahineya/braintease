; Generated by Ripple C99 Compiler (rcc)

; Function: test
test:
; === Processing instruction #0: Binary { result: 1, op: Add, lhs: Temp(0), rhs: Constant(1), result_type: I16 } ===
; === Processing Binary t1 ===
; Binary: need(lhs)=1, need(rhs)=1
; Getting register for temp t0
; Looking for t0 in registers
;   R3 contains t0
;   R4 contains param_0_bank
; t0 found in R3
;   t0 is now in R3
; get_reg for 'const_1_0'
;   Allocated free register for const_1_0
    LI R5, 1
; Reusing R3 for result t1
    ADD R3, R3, R5
; Freeing right operand register R5
; === Processing instruction #1: Return(Some(Temp(1))) ===
; Getting register for temp t1
; Looking for t1 in registers
;   R3 contains t1
;   R4 contains param_0_bank
; t1 found in R3
;   t1 is now in R3
    RET
test_L1:
; === Processing instruction #0: Return(None) ===
    RET
