; Generated by Ripple C99 Compiler (rcc)

_init_globals:
    RET
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 12 slots for locals
    ADDI SP, SP, 12
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    ADD S3, FP, R0
    ADD S2, S3, R0
    LI S1, 10
    STORE S1, SB, S2
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    ADDI T7, S0, 1
    LI T6, 20
    STORE T6, SB, T7
    ADD T5, FP, R0
    ADDI T5, T5, 2
; Recompute alloca t0 at FP+0
    ADD T4, FP, R0
    LOAD T3, SB, T4
    STORE T3, SB, T5
    ADD T2, T5, R0
    LOAD T1, SB, T2
    LI T0, 10
    XOR S3, T1, T0
    LI S1, 1
    SLTU T1, S3, S1
; Recompute alloca t3 at FP+2
    ADD S0, FP, R0
    ADDI S0, S0, 2
    ADDI T6, S0, 1
    LOAD T5, SB, T6
    LI S3, 20
    XOR S1, T5, S3
    LI T0, 1
    SLTU T5, S1, T0
    AND T1, T1, T5
    BEQ T1, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI S0, 89
; Spill live registers before call
; Spill t1 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE S2, SB, SC
; Spill t2 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T7, SB, SC
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T3, SB, SC
; Spill t5 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T2, SB, SC
; Spill t8 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T6, SB, SC
; Spill const_f0_op9_89 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI S1, 78
; Spill live registers before call
; Spill const_f0_op10_78 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
    LI T0, 10
; Spill live registers before call
; Spill const_f0_op11_10 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
