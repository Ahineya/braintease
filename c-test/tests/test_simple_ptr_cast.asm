; Generated by Ripple C99 Compiler (rcc)

_init_globals:
    RET
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 13 slots for locals
    ADDI SP, SP, 13
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    ADD S3, FP, R0
    LI S2, 16706
    STORE S2, SB, S3
    ADD S1, FP, R0
    ADDI S1, S1, 1
    ADD S0, SB, R0
    STORE S3, SB, S1
    ADDI T7, S1, 1
    STORE S0, SB, T7
    LOAD T6, SB, S1
    ADDI T5, S1, 1
    LOAD T4, SB, T5
    LI T2, 1
    SLL T3, T6, T2
; Spill live registers before call
; Spill t2 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T6, SB, SC
; Spill load_f0_op5_t2_bank_val to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T4, SB, SC
; Spill load_f0_op6_t3_byte_addr to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T3, SB, SC
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Arg 1 (scalar) to A1
    ADD A1, T3, R0
; Call function __ld8
    CALL __ld8
; Scalar return value for t3
; Spill live registers before call
; Spill t3 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function putchar
    CALL putchar
    ADD T1, FP, R0
    ADDI T1, T1, 3
; Recompute alloca t1 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    LOAD S2, SB, T0
    ADDI T7, T0, 1
    LOAD S0, SB, T7
    ADDI S3, S2, 1
    STORE S3, SB, T1
    ADDI T5, T1, 1
    STORE S0, SB, T5
    LOAD T2, SB, T1
    ADDI S1, T1, 1
    LOAD T6, SB, S1
    LI T3, 1
    SLL T4, T2, T3
; Spill live registers before call
; Spill load_f0_op10_t5_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S0, SB, SC
; Spill t7 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T2, SB, SC
; Spill load_f0_op14_t7_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T6, SB, SC
; Spill load_f0_op15_t8_byte_addr to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Arg 1 (scalar) to A1
    ADD A1, T4, R0
; Call function __ld8
    CALL __ld8
; Scalar return value for t8
; Spill live registers before call
; Spill t8 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function putchar
    CALL putchar
    LI T7, 10
; Spill live registers before call
; Spill const_f0_op17_10 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
