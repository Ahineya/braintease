; Generated by Ripple C99 Compiler (rcc)

_init_globals:
    RET
main:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 10 slots for locals
    ADDI SP, SP, 10
    ADDI SP, SP, -1
    MOVE S3, SP
    LI S2, 1
    STORE S2, SB, S3
    ADDI SP, SP, -1
    MOVE S1, SP
    LI S0, 1
    STORE S0, SB, S1
    LOAD T7, SB, S3
    LI T6, 1
    XOR T5, T7, T6
    LI T4, 1
    SLTU T7, T5, T4
    BEQ T7, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI T3, 49
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Initialize SB as stack bank (1)
    LI SB, 1
; Spill t1 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S1, SB, SC
; Spill t0 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S3, SB, SC
; Spill const_f0_op4_49 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T3, SB, SC
; Call function putchar
    CALL putchar
; Clean up 1 words from stack
    ADDI SP, SP, -1
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI T2, 78
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Spill const_f0_op5_78 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T2, SB, SC
; Call function putchar
    CALL putchar
; Clean up 1 words from stack
    ADDI SP, SP, -1
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
; Reload t0 from slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    LOAD T1, SB, SC
    LOAD T0, SB, T1
    LI S2, 1
    XOR S0, T0, S2
    LI T5, 1
    SLTU T0, S0, T5
; Reload t1 from slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    LOAD T4, SB, SC
    LOAD T6, SB, T4
    LI T7, 1
    XOR S1, T6, T7
    LI S3, 1
    SLTU T6, S1, S3
    AND T0, T0, T6
    BEQ T0, R0, L_main_5
; Branch to L_main_5 if condition is false
    BEQ R0, R0, L_main_4
; Unconditional branch to L_main_4 (condition was true)
L_main_4:
    LI T3, 50
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Spill t0 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T1, SB, SC
; Spill t1 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T4, SB, SC
; Spill const_f0_op10_50 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T3, SB, SC
; Call function putchar
    CALL putchar
; Clean up 1 words from stack
    ADDI SP, SP, -1
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_5:
    LI T2, 78
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Spill const_f0_op11_78 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T2, SB, SC
; Call function putchar
    CALL putchar
; Clean up 1 words from stack
    ADDI SP, SP, -1
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_6:
    LI S0, 10
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Spill const_f0_op12_10 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S0, SB, SC
; Call function putchar
    CALL putchar
; Clean up 1 words from stack
    ADDI SP, SP, -1
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
