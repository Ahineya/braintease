; Generated by Ripple C99 Compiler (rcc)

_init_globals:
    RET
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 20 slots for locals
    ADDI SP, SP, 20
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
    ADD S3, FP, R0
    ADD S2, FP, R0
    ADDI S2, S2, 6
    ADD S1, FP, R0
    ADDI S1, S1, 8
    ADD S0, S2, R0
    LI T7, 10
    STORE T7, SB, S0
; Recompute alloca t1 at FP+6
    ADD T6, FP, R0
    ADDI T6, T6, 6
    ADDI T5, T6, 1
    LI T4, 20
    STORE T4, SB, T5
    ADD T3, S1, R0
    ADD T2, T3, R0
    LI T1, 30
    STORE T1, SB, T2
; Recompute alloca t2 at FP+8
    ADD T0, FP, R0
    ADDI T0, T0, 8
    ADD S2, T0, R0
    ADDI T7, S2, 1
    LI T6, 40
    STORE T6, SB, T7
; Recompute alloca t2 at FP+8
    ADD T4, FP, R0
    ADDI T4, T4, 8
    ADDI S1, T4, 4
; Recompute alloca t1 at FP+6
    ADD T3, FP, R0
    ADDI T3, T3, 6
    ADD T1, SB, R0
    STORE T3, SB, S1
    ADDI T0, S1, 1
    STORE T1, SB, T0
    ADD S2, S3, R0
; Recompute alloca t2 at FP+8
    ADD T6, FP, R0
    ADDI T6, T6, 8
    LOAD T4, SB, T6
    STORE T4, SB, S2
; Recompute alloca t0 at FP+0
    ADD T0, FP, R0
    ADDI T1, T0, 16
    ADD T3, SB, R0
    STORE T6, SB, T1
    ADDI S3, T1, 1
    STORE T3, SB, S3
; Recompute alloca t0 at FP+0
    ADD T0, FP, R0
    ADD S3, T0, R0
    ADD T3, S3, R0
    ADD T6, T3, R0
    LOAD T0, SB, T6
    LI S3, 30
    XOR T3, T0, S3
; Spill t3 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE S0, SB, SC
    LI S0, 1
    SLTU T0, T3, S0
    BEQ T0, R0, L_main_2
; Branch to L_main_2 if condition is false
    BEQ R0, R0, L_main_1
; Unconditional branch to L_main_1 (condition was true)
L_main_1:
    LI T3, 49
; Spill live registers before call
; Spill t4 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T5, SB, SC
; Spill t6 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T2, SB, SC
; Spill t8 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T7, SB, SC
; Spill t9 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S1, SB, SC
; Spill t11 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T4, SB, SC
; Spill t10 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S2, SB, SC
; Spill t12 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T1, SB, SC
; Spill t15 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T6, SB, SC
; Spill const_f0_op12_49 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t18
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_2:
    LI S0, 78
; Spill live registers before call
; Spill t18 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE RV0, SB, SC
; Spill const_f0_op13_78 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t19
    BEQ R0, R0, L_main_3
; Unconditional branch to L_main_3
L_main_3:
; Recompute alloca t0 at FP+0
    ADD S3, FP, R0
    ADD T0, S3, R0
    ADDI T5, T0, 4
    LOAD T2, SB, T5
    ADDI T7, T5, 1
    LOAD S1, SB, T7
    ADDI T4, T2, 1
    LOAD S2, S1, T4
    LI T1, 20
    XOR T6, S2, T1
    LI T3, 1
    SLTU S2, T6, T3
    BEQ S2, R0, L_main_5
; Branch to L_main_5 if condition is false
    BEQ R0, R0, L_main_4
; Unconditional branch to L_main_4 (condition was true)
L_main_4:
    LI S0, 50
; Spill live registers before call
; Spill t19 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE RV0, SB, SC
; Spill t21 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T5, SB, SC
; Spill t23 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T4, SB, SC
; Spill load_f0_op16_t22_bank_val to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE S1, SB, SC
; Spill const_f0_op19_50 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t26
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_5:
    LI S3, 78
; Spill live registers before call
; Spill t26 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE RV0, SB, SC
; Spill const_f0_op20_78 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t27
    BEQ R0, R0, L_main_6
; Unconditional branch to L_main_6
L_main_6:
; Recompute alloca t0 at FP+0
    ADD T0, FP, R0
    ADDI T7, T0, 16
    LOAD T2, SB, T7
    ADDI T6, T7, 1
    LOAD T3, SB, T6
    ADD T1, T2, R0
    ADDI S2, T1, 1
    LOAD T5, T3, S2
    LI T4, 40
    XOR S1, T5, T4
    LI S0, 1
    SLTU T5, S1, S0
    BEQ T5, R0, L_main_8
; Branch to L_main_8 if condition is false
    BEQ R0, R0, L_main_7
; Unconditional branch to L_main_7 (condition was true)
L_main_7:
    LI S3, 51
; Spill live registers before call
; Spill t27 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE RV0, SB, SC
; Spill t28 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T7, SB, SC
; Spill t31 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE S2, SB, SC
; Spill load_f0_op23_t29_bank_val to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T3, SB, SC
; Spill const_f0_op26_51 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function putchar
    CALL putchar
; Scalar return value for t34
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_8:
    LI T0, 78
; Spill live registers before call
; Spill t34 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE RV0, SB, SC
; Spill const_f0_op27_78 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function putchar
    CALL putchar
; Scalar return value for t35
    BEQ R0, R0, L_main_9
; Unconditional branch to L_main_9
L_main_9:
; Recompute alloca t0 at FP+0
    ADD T6, FP, R0
    ADDI T2, T6, 16
    LOAD T1, SB, T2
    ADDI S1, T2, 1
    LOAD S0, SB, S1
    ADDI T4, T1, 4
    LOAD T5, S0, T4
    ADDI T7, T4, 1
    LOAD S2, S0, T7
    ADD T3, T5, R0
    LOAD S3, S2, T3
    LI T0, 10
    XOR T6, S3, T0
    LI S1, 1
    SLTU S3, T6, S1
    BEQ S3, R0, L_main_11
; Branch to L_main_11 if condition is false
    BEQ R0, R0, L_main_10
; Unconditional branch to L_main_10 (condition was true)
L_main_10:
    LI T1, 52
; Spill live registers before call
; Spill t35 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE RV0, SB, SC
; Spill t36 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T2, SB, SC
; Spill t38 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T4, SB, SC
; Spill load_f0_op30_t37_bank_val to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE S0, SB, SC
; Spill t40 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T3, SB, SC
; Spill load_f0_op32_t39_bank_val to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE S2, SB, SC
; Spill const_f0_op35_52 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t43
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_11:
    LI T7, 78
; Spill live registers before call
; Spill t43 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE RV0, SB, SC
; Spill const_f0_op36_78 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Scalar return value for t44
    BEQ R0, R0, L_main_12
; Unconditional branch to L_main_12
L_main_12:
    LI T5, 10
; Spill live registers before call
; Spill t44 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE RV0, SB, SC
; Spill const_f0_op37_10 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function putchar
    CALL putchar
; Scalar return value for t45
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
