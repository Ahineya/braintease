; Generated by Ripple C99 Compiler (rcc)

_init_globals:
; Uninitialized global stack
; Global variable: sp at address 100
    LI T0, 0
    LI T1, 100
    STORE T0, GP, T1
; Uninitialized global rstack
; Global variable: rsp at address 151
    LI T0, 0
    LI T1, 151
    STORE T0, GP, T1
; Uninitialized global dict_names
; Uninitialized global dict_is_prim
; Uninitialized global dict_code_start
; Global variable: dict_count at address 1852
    LI T0, 0
    LI T1, 1852
    STORE T0, GP, T1
; Uninitialized global code
; Global variable: here at address 2353
    LI T0, 0
    LI T1, 2353
    STORE T0, GP, T1
; Global variable: compile_mode at address 2354
    LI T0, 0
    LI T1, 2354
    STORE T0, GP, T1
; Global variable: running at address 2355
    LI T0, 1
    LI T1, 2355
    STORE T0, GP, T1
; Global variable: ip_current at address 2356
    LI T0, 0
    LI T1, 2356
    STORE T0, GP, T1
; Uninitialized global global_word
; String data "+" at address 2389
    LI T0, 43
    LI T1, 2389
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2390
    STORE T0, GP, T1
; String data "-" at address 2391
    LI T0, 45
    LI T1, 2391
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2392
    STORE T0, GP, T1
; String data "*" at address 2393
    LI T0, 42
    LI T1, 2393
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2394
    STORE T0, GP, T1
; String data "/" at address 2395
    LI T0, 47
    LI T1, 2395
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2396
    STORE T0, GP, T1
; String data "MOD" at address 2397
    LI T0, 77
    LI T1, 2397
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2398
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2399
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2400
    STORE T0, GP, T1
; String data "=" at address 2401
    LI T0, 61
    LI T1, 2401
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2402
    STORE T0, GP, T1
; String data "<" at address 2403
    LI T0, 60
    LI T1, 2403
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2404
    STORE T0, GP, T1
; String data ">" at address 2405
    LI T0, 62
    LI T1, 2405
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2406
    STORE T0, GP, T1
; String data "DUP" at address 2407
    LI T0, 68
    LI T1, 2407
    STORE T0, GP, T1
    LI T0, 85
    LI T1, 2408
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2409
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2410
    STORE T0, GP, T1
; String data "DROP" at address 2411
    LI T0, 68
    LI T1, 2411
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2412
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2413
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2414
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2415
    STORE T0, GP, T1
; String data "SWAP" at address 2416
    LI T0, 83
    LI T1, 2416
    STORE T0, GP, T1
    LI T0, 87
    LI T1, 2417
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2418
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2419
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2420
    STORE T0, GP, T1
; String data "OVER" at address 2421
    LI T0, 79
    LI T1, 2421
    STORE T0, GP, T1
    LI T0, 86
    LI T1, 2422
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2423
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2424
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2425
    STORE T0, GP, T1
; String data "ROT" at address 2426
    LI T0, 82
    LI T1, 2426
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2427
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2428
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2429
    STORE T0, GP, T1
; String data "2DUP" at address 2430
    LI T0, 50
    LI T1, 2430
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2431
    STORE T0, GP, T1
    LI T0, 85
    LI T1, 2432
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2433
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2434
    STORE T0, GP, T1
; String data "IF" at address 2435
    LI T0, 73
    LI T1, 2435
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2436
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2437
    STORE T0, GP, T1
; String data "THEN" at address 2438
    LI T0, 84
    LI T1, 2438
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2439
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2440
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2441
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2442
    STORE T0, GP, T1
; String data "ELSE" at address 2443
    LI T0, 69
    LI T1, 2443
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2444
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2445
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2446
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2447
    STORE T0, GP, T1
; String data "BEGIN" at address 2448
    LI T0, 66
    LI T1, 2448
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2449
    STORE T0, GP, T1
    LI T0, 71
    LI T1, 2450
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2451
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2452
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2453
    STORE T0, GP, T1
; String data "WHILE" at address 2454
    LI T0, 87
    LI T1, 2454
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2455
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2456
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2457
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2458
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2459
    STORE T0, GP, T1
; String data "REPEAT" at address 2460
    LI T0, 82
    LI T1, 2460
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2461
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2462
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2463
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2464
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2465
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2466
    STORE T0, GP, T1
; String data "DO" at address 2467
    LI T0, 68
    LI T1, 2467
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2468
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2469
    STORE T0, GP, T1
; String data "LOOP" at address 2470
    LI T0, 76
    LI T1, 2470
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2471
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2472
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2473
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2474
    STORE T0, GP, T1
; String data "I" at address 2475
    LI T0, 73
    LI T1, 2475
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2476
    STORE T0, GP, T1
; String data "J" at address 2477
    LI T0, 74
    LI T1, 2477
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2478
    STORE T0, GP, T1
; String data "." at address 2479
    LI T0, 46
    LI T1, 2479
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2480
    STORE T0, GP, T1
; String data "CR" at address 2481
    LI T0, 67
    LI T1, 2481
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2482
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2483
    STORE T0, GP, T1
; String data ".S" at address 2484
    LI T0, 46
    LI T1, 2484
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2485
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2486
    STORE T0, GP, T1
; String data "Stack:" at address 2487
    LI T0, 83
    LI T1, 2487
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2488
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2489
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 2490
    STORE T0, GP, T1
    LI T0, 107
    LI T1, 2491
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2492
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2493
    STORE T0, GP, T1
; String data "WORDS" at address 2494
    LI T0, 87
    LI T1, 2494
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2495
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2496
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2497
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2498
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2499
    STORE T0, GP, T1
; String data "Words:" at address 2500
    LI T0, 87
    LI T1, 2500
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2501
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2502
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2503
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 2504
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2505
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2506
    STORE T0, GP, T1
; String data "BYE" at address 2507
    LI T0, 66
    LI T1, 2507
    STORE T0, GP, T1
    LI T0, 89
    LI T1, 2508
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2509
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2510
    STORE T0, GP, T1
; String data "IF" at address 2511
    LI T0, 73
    LI T1, 2511
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2512
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2513
    STORE T0, GP, T1
; String data "THEN" at address 2514
    LI T0, 84
    LI T1, 2514
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2515
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2516
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2517
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2518
    STORE T0, GP, T1
; String data "ELSE" at address 2519
    LI T0, 69
    LI T1, 2519
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2520
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2521
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2522
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2523
    STORE T0, GP, T1
; String data "IF" at address 2524
    LI T0, 73
    LI T1, 2524
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2525
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2526
    STORE T0, GP, T1
; String data "IF" at address 2527
    LI T0, 73
    LI T1, 2527
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2528
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2529
    STORE T0, GP, T1
; String data "THEN" at address 2530
    LI T0, 84
    LI T1, 2530
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2531
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2532
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2533
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2534
    STORE T0, GP, T1
; String data "ELSE" at address 2535
    LI T0, 69
    LI T1, 2535
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2536
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2537
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2538
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2539
    STORE T0, GP, T1
; String data "IF" at address 2540
    LI T0, 73
    LI T1, 2540
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2541
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2542
    STORE T0, GP, T1
; String data "THEN" at address 2543
    LI T0, 84
    LI T1, 2543
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2544
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2545
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2546
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2547
    STORE T0, GP, T1
; String data "THEN" at address 2548
    LI T0, 84
    LI T1, 2548
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2549
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2550
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2551
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2552
    STORE T0, GP, T1
; String data "BEGIN" at address 2553
    LI T0, 66
    LI T1, 2553
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2554
    STORE T0, GP, T1
    LI T0, 71
    LI T1, 2555
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2556
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2557
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2558
    STORE T0, GP, T1
; String data "WHILE" at address 2559
    LI T0, 87
    LI T1, 2559
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2560
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2561
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2562
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2563
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2564
    STORE T0, GP, T1
; String data "WHILE" at address 2565
    LI T0, 87
    LI T1, 2565
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2566
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2567
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2568
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2569
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2570
    STORE T0, GP, T1
; String data "REPEAT" at address 2571
    LI T0, 82
    LI T1, 2571
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2572
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2573
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2574
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2575
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2576
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2577
    STORE T0, GP, T1
; String data "REPEAT" at address 2578
    LI T0, 82
    LI T1, 2578
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2579
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2580
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2581
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2582
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2583
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2584
    STORE T0, GP, T1
; String data "DO" at address 2585
    LI T0, 68
    LI T1, 2585
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2586
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2587
    STORE T0, GP, T1
; String data "LOOP" at address 2588
    LI T0, 76
    LI T1, 2588
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2589
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2590
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2591
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2592
    STORE T0, GP, T1
; String data "Word not found" at address 2593
    LI T0, 87
    LI T1, 2593
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2594
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2595
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2596
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2597
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2598
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2599
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2600
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2601
    STORE T0, GP, T1
    LI T0, 102
    LI T1, 2602
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2603
    STORE T0, GP, T1
    LI T0, 117
    LI T1, 2604
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2605
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2606
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2607
    STORE T0, GP, T1
; String data " (primitive)" at address 2608
    LI T0, 32
    LI T1, 2608
    STORE T0, GP, T1
    LI T0, 40
    LI T1, 2609
    STORE T0, GP, T1
    LI T0, 112
    LI T1, 2610
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2611
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2612
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 2613
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2614
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2615
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2616
    STORE T0, GP, T1
    LI T0, 118
    LI T1, 2617
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 2618
    STORE T0, GP, T1
    LI T0, 41
    LI T1, 2619
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2620
    STORE T0, GP, T1
; String data ": " at address 2621
    LI T0, 58
    LI T1, 2621
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2622
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2623
    STORE T0, GP, T1
; String data " " at address 2624
    LI T0, 32
    LI T1, 2624
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2625
    STORE T0, GP, T1
; String data " " at address 2626
    LI T0, 32
    LI T1, 2626
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2627
    STORE T0, GP, T1
; String data ";" at address 2628
    LI T0, 59
    LI T1, 2628
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2629
    STORE T0, GP, T1
; String data ":" at address 2630
    LI T0, 58
    LI T1, 2630
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2631
    STORE T0, GP, T1
; String data ";" at address 2632
    LI T0, 59
    LI T1, 2632
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2633
    STORE T0, GP, T1
; String data "Unknown: " at address 2634
    LI T0, 85
    LI T1, 2634
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2635
    STORE T0, GP, T1
    LI T0, 107
    LI T1, 2636
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2637
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2638
    STORE T0, GP, T1
    LI T0, 119
    LI T1, 2639
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2640
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2641
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2642
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2643
    STORE T0, GP, T1
; Global variable: forget_next at address 2644
    LI T0, 0
    LI T1, 2644
    STORE T0, GP, T1
; Global variable: list_next at address 2645
    LI T0, 0
    LI T1, 2645
    STORE T0, GP, T1
; String data "Minimal Forth" at address 2646
    LI T0, 77
    LI T1, 2646
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2647
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2648
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2649
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 2650
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2651
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 2652
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2653
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2654
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2655
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2656
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2657
    STORE T0, GP, T1
    LI T0, 104
    LI T1, 2658
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2659
    STORE T0, GP, T1
; String data "Arithmetic: + - * / MOD" at address 2660
    LI T0, 65
    LI T1, 2660
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2661
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2662
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2663
    STORE T0, GP, T1
    LI T0, 104
    LI T1, 2664
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 2665
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 2666
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2667
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2668
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 2669
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2670
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2671
    STORE T0, GP, T1
    LI T0, 43
    LI T1, 2672
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2673
    STORE T0, GP, T1
    LI T0, 45
    LI T1, 2674
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2675
    STORE T0, GP, T1
    LI T0, 42
    LI T1, 2676
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2677
    STORE T0, GP, T1
    LI T0, 47
    LI T1, 2678
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2679
    STORE T0, GP, T1
    LI T0, 77
    LI T1, 2680
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2681
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2682
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2683
    STORE T0, GP, T1
; String data "Comparison: = < >" at address 2684
    LI T0, 67
    LI T1, 2684
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2685
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 2686
    STORE T0, GP, T1
    LI T0, 112
    LI T1, 2687
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2688
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2689
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2690
    STORE T0, GP, T1
    LI T0, 115
    LI T1, 2691
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2692
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2693
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2694
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2695
    STORE T0, GP, T1
    LI T0, 61
    LI T1, 2696
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2697
    STORE T0, GP, T1
    LI T0, 60
    LI T1, 2698
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2699
    STORE T0, GP, T1
    LI T0, 62
    LI T1, 2700
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2701
    STORE T0, GP, T1
; String data "Stack: DUP DROP SWAP OVER ROT 2DUP" at address 2702
    LI T0, 83
    LI T1, 2702
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2703
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2704
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 2705
    STORE T0, GP, T1
    LI T0, 107
    LI T1, 2706
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2707
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2708
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2709
    STORE T0, GP, T1
    LI T0, 85
    LI T1, 2710
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2711
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2712
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2713
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2714
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2715
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2716
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2717
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2718
    STORE T0, GP, T1
    LI T0, 87
    LI T1, 2719
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2720
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2721
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2722
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2723
    STORE T0, GP, T1
    LI T0, 86
    LI T1, 2724
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2725
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2726
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2727
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2728
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2729
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2730
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2731
    STORE T0, GP, T1
    LI T0, 50
    LI T1, 2732
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2733
    STORE T0, GP, T1
    LI T0, 85
    LI T1, 2734
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2735
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2736
    STORE T0, GP, T1
; String data "Control: IF THEN ELSE BEGIN WHILE REPEAT DO LOOP I J" at address 2737
    LI T0, 67
    LI T1, 2737
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2738
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2739
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2740
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2741
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2742
    STORE T0, GP, T1
    LI T0, 108
    LI T1, 2743
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2744
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2745
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2746
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2747
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2748
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2749
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2750
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2751
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2752
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2753
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2754
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2755
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2756
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2757
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2758
    STORE T0, GP, T1
    LI T0, 66
    LI T1, 2759
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2760
    STORE T0, GP, T1
    LI T0, 71
    LI T1, 2761
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2762
    STORE T0, GP, T1
    LI T0, 78
    LI T1, 2763
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2764
    STORE T0, GP, T1
    LI T0, 87
    LI T1, 2765
    STORE T0, GP, T1
    LI T0, 72
    LI T1, 2766
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2767
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2768
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2769
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2770
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2771
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2772
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2773
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2774
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2775
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2776
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2777
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2778
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2779
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2780
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2781
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2782
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2783
    STORE T0, GP, T1
    LI T0, 80
    LI T1, 2784
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2785
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2786
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2787
    STORE T0, GP, T1
    LI T0, 74
    LI T1, 2788
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2789
    STORE T0, GP, T1
; String data "I/O: . CR .S WORDS BYE" at address 2790
    LI T0, 73
    LI T1, 2790
    STORE T0, GP, T1
    LI T0, 47
    LI T1, 2791
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2792
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2793
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2794
    STORE T0, GP, T1
    LI T0, 46
    LI T1, 2795
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2796
    STORE T0, GP, T1
    LI T0, 67
    LI T1, 2797
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2798
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2799
    STORE T0, GP, T1
    LI T0, 46
    LI T1, 2800
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2801
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2802
    STORE T0, GP, T1
    LI T0, 87
    LI T1, 2803
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2804
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2805
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2806
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2807
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2808
    STORE T0, GP, T1
    LI T0, 66
    LI T1, 2809
    STORE T0, GP, T1
    LI T0, 89
    LI T1, 2810
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2811
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2812
    STORE T0, GP, T1
; String data "Dictionary: FORGET <word> LIST <word> STORE LOAD" at address 2813
    LI T0, 68
    LI T1, 2813
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2814
    STORE T0, GP, T1
    LI T0, 99
    LI T1, 2815
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2816
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2817
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2818
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2819
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2820
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2821
    STORE T0, GP, T1
    LI T0, 121
    LI T1, 2822
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2823
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2824
    STORE T0, GP, T1
    LI T0, 70
    LI T1, 2825
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2826
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2827
    STORE T0, GP, T1
    LI T0, 71
    LI T1, 2828
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2829
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2830
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2831
    STORE T0, GP, T1
    LI T0, 60
    LI T1, 2832
    STORE T0, GP, T1
    LI T0, 119
    LI T1, 2833
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2834
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2835
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2836
    STORE T0, GP, T1
    LI T0, 62
    LI T1, 2837
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2838
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2839
    STORE T0, GP, T1
    LI T0, 73
    LI T1, 2840
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2841
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2842
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2843
    STORE T0, GP, T1
    LI T0, 60
    LI T1, 2844
    STORE T0, GP, T1
    LI T0, 119
    LI T1, 2845
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2846
    STORE T0, GP, T1
    LI T0, 114
    LI T1, 2847
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2848
    STORE T0, GP, T1
    LI T0, 62
    LI T1, 2849
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2850
    STORE T0, GP, T1
    LI T0, 83
    LI T1, 2851
    STORE T0, GP, T1
    LI T0, 84
    LI T1, 2852
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2853
    STORE T0, GP, T1
    LI T0, 82
    LI T1, 2854
    STORE T0, GP, T1
    LI T0, 69
    LI T1, 2855
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2856
    STORE T0, GP, T1
    LI T0, 76
    LI T1, 2857
    STORE T0, GP, T1
    LI T0, 79
    LI T1, 2858
    STORE T0, GP, T1
    LI T0, 65
    LI T1, 2859
    STORE T0, GP, T1
    LI T0, 68
    LI T1, 2860
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2861
    STORE T0, GP, T1
; String data "Definition: : name ... ;" at address 2862
    LI T0, 68
    LI T1, 2862
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 2863
    STORE T0, GP, T1
    LI T0, 102
    LI T1, 2864
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2865
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2866
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2867
    STORE T0, GP, T1
    LI T0, 116
    LI T1, 2868
    STORE T0, GP, T1
    LI T0, 105
    LI T1, 2869
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2870
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2871
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2872
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2873
    STORE T0, GP, T1
    LI T0, 58
    LI T1, 2874
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2875
    STORE T0, GP, T1
    LI T0, 110
    LI T1, 2876
    STORE T0, GP, T1
    LI T0, 97
    LI T1, 2877
    STORE T0, GP, T1
    LI T0, 109
    LI T1, 2878
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 2879
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2880
    STORE T0, GP, T1
    LI T0, 46
    LI T1, 2881
    STORE T0, GP, T1
    LI T0, 46
    LI T1, 2882
    STORE T0, GP, T1
    LI T0, 46
    LI T1, 2883
    STORE T0, GP, T1
    LI T0, 32
    LI T1, 2884
    STORE T0, GP, T1
    LI T0, 59
    LI T1, 2885
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2886
    STORE T0, GP, T1
; String data "" at address 2887
    LI T0, 0
    LI T1, 2887
    STORE T0, GP, T1
; String data " ok" at address 2888
    LI T0, 32
    LI T1, 2888
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2889
    STORE T0, GP, T1
    LI T0, 107
    LI T1, 2890
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2891
    STORE T0, GP, T1
; String data "Goodbye!" at address 2892
    LI T0, 71
    LI T1, 2892
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2893
    STORE T0, GP, T1
    LI T0, 111
    LI T1, 2894
    STORE T0, GP, T1
    LI T0, 100
    LI T1, 2895
    STORE T0, GP, T1
    LI T0, 98
    LI T1, 2896
    STORE T0, GP, T1
    LI T0, 121
    LI T1, 2897
    STORE T0, GP, T1
    LI T0, 101
    LI T1, 2898
    STORE T0, GP, T1
    LI T0, 33
    LI T1, 2899
    STORE T0, GP, T1
    LI T0, 0
    LI T1, 2900
    STORE T0, GP, T1
    RET
push:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 9 slots for locals
    ADDI SP, SP, 9
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load Global("sp")
; Canonicalizing global variable: sp
    LI S1, 100
; LOAD: Pointer load_src_ptr_f0_op3_t2 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S0, GP, S1
    LI T7, 100
    SLT S0, S0, T7
    BEQ S0, R0, L_push_3
; Branch to L_push_3 if condition is false
    BEQ R0, R0, L_push_1
; Unconditional branch to L_push_1 (condition was true)
; Invalidated 1 alloca bindings
L_push_1:
; Load instruction: t4 = load FatPtr(FatPointer { addr: Global("sp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("sp"), bank: Global })
    LI T6, 100
; LOAD: Pointer load_src_ptr_f0_op6_t4 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    LI T4, 0
    ADD T5, T5, T4
; Load instruction: t6 = load FatPtr(FatPointer { addr: Global("sp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("sp"), bank: Global })
    LI T3, 100
; LOAD: Pointer load_src_ptr_f0_op9_t6 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T3
    LI T1, 1
    ADD T2, T2, T1
    LI T0, 100
    STORE T2, GP, T0
    LI T7, 0
    ADD S2, T5, R0
    ADD S0, T7, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV T4, S0, T1
    MOD T0, S0, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f0_op18_t8'
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 9
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f0_op18_t8 = GP + bank_delta
    ADD S3, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f0_op18_t8)
    ADD S0, T0, R0
; GEP: Setting bank info for t8 to Dynamic("gep_new_bank_f0_op18_t8")
; Load instruction: t9 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f0_op19_t9 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD S2, FP, R0
    LOAD T4, SB, S2
    LI T0, -1
    BEQ S3, T0, L_bc_bca4c264_use_global
    LI T7, -2
    BEQ S3, T7, L_bc_bca4c264_use_stack
    ADD T1, S3, R0
    BEQ R0, R0, L_bc_bca4c264_done
L_bc_bca4c264_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_bca4c264_done
L_bc_bca4c264_use_stack:
    ADD T1, SB, R0
L_bc_bca4c264_done:
    STORE T4, T1, S0
    BEQ R0, R0, L_push_3
; Unconditional branch to L_push_3
; Invalidated 1 alloca bindings
L_push_3:
; Jump to epilogue
    BEQ R0, R0, L_push_99999
L_push_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
pop:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 8 slots for locals
    ADDI SP, SP, 8
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
L_pop_4:
; Load instruction: t0 = load Global("sp")
; Canonicalizing global variable: sp
    LI S3, 100
; LOAD: Pointer load_src_ptr_f2_op1_t0 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
    LI S1, 0
    SLT S2, S1, S2
    BEQ S2, R0, L_pop_7
; Branch to L_pop_7 if condition is false
    BEQ R0, R0, L_pop_5
; Unconditional branch to L_pop_5 (condition was true)
L_pop_5:
; Load instruction: t2 = load FatPtr(FatPointer { addr: Global("sp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("sp"), bank: Global })
    LI S0, 100
; LOAD: Pointer load_src_ptr_f2_op4_t2 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, S0
    LI T6, 1
    SUB T7, T7, T6
    LI T5, 100
    STORE T7, GP, T5
    LI T4, 0
    ADD T2, T7, R0
    ADD T3, T4, T2
; Runtime bank overflow calculation for dynamic GEP
    LI T0, -1
    DIV T1, T3, T0
    MOD S1, T3, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f2_op13_t4'
; Computing new bank gep_new_bank_f2_op13_t4 = GP + bank_delta
    ADD S2, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f2_op13_t4)
    ADD T3, S1, R0
; GEP: Setting bank info for t4 to Dynamic("gep_new_bank_f2_op13_t4")
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(4), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Mixed })
; LOAD: Pointer t4 has bank info: Dynamic("gep_new_bank_f2_op13_t4")
    LI T5, -1
    BEQ S2, T5, L_bc_bdb3626e_use_global
    LI T2, -2
    BEQ S2, T2, L_bc_bdb3626e_use_stack
    ADD T6, S2, R0
    BEQ R0, R0, L_bc_bdb3626e_done
L_bc_bdb3626e_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_bdb3626e_done
L_bc_bdb3626e_use_stack:
    ADD T6, SB, R0
L_bc_bdb3626e_done:
; LOAD: Using bank register T6 for load
    LOAD T1, T6, T3
    MOVE RV0, T1
; Jump to epilogue
    BEQ R0, R0, L_pop_99999
    BEQ R0, R0, L_pop_7
; Unconditional branch to L_pop_7
L_pop_7:
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_pop_99999
L_pop_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
rpush:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 9 slots for locals
    ADDI SP, SP, 9
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_rpush_8:
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI S1, 151
; LOAD: Pointer load_src_ptr_f4_op3_t2 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S0, GP, S1
    LI T7, 50
    SLT S0, S0, T7
    BEQ S0, R0, L_rpush_11
; Branch to L_rpush_11 if condition is false
    BEQ R0, R0, L_rpush_9
; Unconditional branch to L_rpush_9 (condition was true)
; Invalidated 1 alloca bindings
L_rpush_9:
; Load instruction: t4 = load FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
    LI T6, 151
; LOAD: Pointer load_src_ptr_f4_op6_t4 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    LI T4, 0
    ADD T5, T5, T4
; Load instruction: t6 = load FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
    LI T3, 151
; LOAD: Pointer load_src_ptr_f4_op9_t6 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T3
    LI T1, 1
    ADD T2, T2, T1
    LI T0, 151
    STORE T2, GP, T0
    LI T7, 101
    ADD S2, T5, R0
    ADD S0, T7, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV T4, S0, T1
    MOD T0, S0, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f4_op18_t8'
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 9
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f4_op18_t8 = GP + bank_delta
    ADD S3, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f4_op18_t8)
    ADD S0, T0, R0
; GEP: Setting bank info for t8 to Dynamic("gep_new_bank_f4_op18_t8")
; Load instruction: t9 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f4_op19_t9 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD S2, FP, R0
    LOAD T4, SB, S2
    LI T0, -1
    BEQ S3, T0, L_bc_c863c161_use_global
    LI T7, -2
    BEQ S3, T7, L_bc_c863c161_use_stack
    ADD T1, S3, R0
    BEQ R0, R0, L_bc_c863c161_done
L_bc_c863c161_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_c863c161_done
L_bc_c863c161_use_stack:
    ADD T1, SB, R0
L_bc_c863c161_done:
    STORE T4, T1, S0
    BEQ R0, R0, L_rpush_11
; Unconditional branch to L_rpush_11
; Invalidated 1 alloca bindings
L_rpush_11:
; Jump to epilogue
    BEQ R0, R0, L_rpush_99999
L_rpush_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
rpop:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 8 slots for locals
    ADDI SP, SP, 8
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
L_rpop_12:
; Load instruction: t0 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI S3, 151
; LOAD: Pointer load_src_ptr_f6_op1_t0 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
    LI S1, 0
    SLT S2, S1, S2
    BEQ S2, R0, L_rpop_15
; Branch to L_rpop_15 if condition is false
    BEQ R0, R0, L_rpop_13
; Unconditional branch to L_rpop_13 (condition was true)
L_rpop_13:
; Load instruction: t2 = load FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("rsp"), bank: Global })
    LI S0, 151
; LOAD: Pointer load_src_ptr_f6_op4_t2 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, S0
    LI T6, 1
    SUB T7, T7, T6
    LI T5, 151
    STORE T7, GP, T5
    LI T4, 101
    ADD T2, T7, R0
    ADD T3, T4, T2
; Runtime bank overflow calculation for dynamic GEP
    LI T0, -1
    DIV T1, T3, T0
    MOD S1, T3, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f6_op13_t4'
; Computing new bank gep_new_bank_f6_op13_t4 = GP + bank_delta
    ADD S2, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f6_op13_t4)
    ADD T3, S1, R0
; GEP: Setting bank info for t4 to Dynamic("gep_new_bank_f6_op13_t4")
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(4), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Mixed })
; LOAD: Pointer t4 has bank info: Dynamic("gep_new_bank_f6_op13_t4")
    LI T5, -1
    BEQ S2, T5, L_bc_6a9a9581_use_global
    LI T2, -2
    BEQ S2, T2, L_bc_6a9a9581_use_stack
    ADD T6, S2, R0
    BEQ R0, R0, L_bc_6a9a9581_done
L_bc_6a9a9581_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_6a9a9581_done
L_bc_6a9a9581_use_stack:
    ADD T6, SB, R0
L_bc_6a9a9581_done:
; LOAD: Using bank register T6 for load
    LOAD T1, T6, T3
    MOVE RV0, T1
; Jump to epilogue
    BEQ R0, R0, L_rpop_99999
    BEQ R0, R0, L_rpop_15
; Unconditional branch to L_rpop_15
L_rpop_15:
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_rpop_99999
L_rpop_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
get_dict_name:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 9 slots for locals
    ADDI SP, SP, 9
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_get_dict_name_16:
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f8_op2_t2 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S2
    LI S0, 32
    MUL S1, S1, S0
    LI T7, 152
    ADD T5, S1, R0
    ADD T6, T7, T5
; Runtime bank overflow calculation for dynamic GEP
    LI T3, -1
    DIV T4, T6, T3
    MOD T2, T6, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f8_op9_t4'
; Computing new bank gep_new_bank_f8_op9_t4 = GP + bank_delta
    ADD T1, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f8_op9_t4)
    ADD T6, T2, R0
; GEP: Setting bank info for t4 to Dynamic("gep_new_bank_f8_op9_t4")
    LI S0, -1
    BEQ T1, S0, L_bc_52d810a1_use_global
    LI T5, -2
    BEQ T1, T5, L_bc_52d810a1_use_stack
    ADD T0, T1, R0
    BEQ R0, R0, L_bc_52d810a1_done
L_bc_52d810a1_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_52d810a1_done
L_bc_52d810a1_use_stack:
    ADD T0, SB, R0
L_bc_52d810a1_done:
    MOVE RV0, T6
    MOVE RV1, T0
; Jump to epilogue
    BEQ R0, R0, L_get_dict_name_99999
L_get_dict_name_99999:
; Return fat pointer
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
str_eq:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 12 slots for locals
    ADDI SP, SP, 12
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 1 bank from A3
L_str_eq_17:
    ADD S1, FP, R0
    STORE S3, SB, S1
    ADDI S0, S1, 1
    STORE A1, SB, S0
    ADD T7, FP, R0
    ADDI T7, T7, 2
    STORE S2, SB, T7
    ADDI T6, T7, 1
    STORE A3, SB, T6
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f10_op10_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S1
    ADDI T4, S1, 1
    LOAD T3, SB, T4
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f10_op14_t5 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, T7
    ADDI T1, T7, 1
    LOAD T0, SB, T1
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE S3, SB, SC
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE S2, SB, SC
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T5, SB, SC
; Spill load_f10_op13_t4_bank_val to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T3, SB, SC
; Spill load_f10_op13_t4_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T3, SB, SC
; Spill t5 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T2, SB, SC
; Spill load_f10_op17_t5_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T0, SB, SC
; Spill load_f10_op17_t5_bank_val to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T0, R0
; Call function strcmp
    CALL strcmp
; Scalar return value for t6
    LI S0, 0
    XOR T6, RV0, S0
    LI T4, 1
    SLTU RV0, T6, T4
; Jump to epilogue
    BEQ R0, R0, L_str_eq_99999
L_str_eq_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
str_copy:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 12 slots for locals
    ADDI SP, SP, 12
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 1 bank from A3
L_str_copy_18:
    ADD S1, FP, R0
    STORE S3, SB, S1
    ADDI S0, S1, 1
    STORE A1, SB, S0
    ADD T7, FP, R0
    ADDI T7, T7, 2
    STORE S2, SB, T7
    ADDI T6, T7, 1
    STORE A3, SB, T6
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f12_op10_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S1
    ADDI T4, S1, 1
    LOAD T3, SB, T4
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f12_op14_t5 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, T7
    ADDI T1, T7, 1
    LOAD T0, SB, T1
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S0, 31
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE S3, SB, SC
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE S2, SB, SC
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T5, SB, SC
; Spill load_f12_op13_t4_bank_val to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T3, SB, SC
; Spill load_f12_op13_t4_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T3, SB, SC
; Spill t5 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T2, SB, SC
; Spill load_f12_op17_t5_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T0, SB, SC
; Spill load_f12_op17_t5_bank_val to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T0, SB, SC
; Spill const_f12_op18_31 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE S0, SB, SC
; Pushing 1 arguments to stack
; Push arg 2 (scalar) to stack
    STORE S0, SB, SP
    ADDI SP, SP, 1
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T0, R0
; Pushed 1 words to stack
; Call function strncpy
    CALL strncpy
; Fat pointer return value for t6
; Clean up 1 words from stack
    ADDI SP, SP, -1
; Load instruction: t7 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f12_op19_t7 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+0
    ADD T6, FP, R0
    LOAD T4, SB, T6
    ADDI T1, T6, 1
    LOAD S3, SB, T1
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T4, 31
; WARNING: Static bank overflow - offset 31 crosses -31 banks
; GEP: Setting bank info for t8 to Dynamic("load_f12_op22_t7_bank_val")
    LI S1, 0
    LI T5, -1
    BEQ S3, T5, L_bc_6c7a0601_use_global
    LI T3, -2
    BEQ S3, T3, L_bc_6c7a0601_use_stack
    ADD T7, S3, R0
    BEQ R0, R0, L_bc_6c7a0601_done
L_bc_6c7a0601_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_6c7a0601_done
L_bc_6c7a0601_use_stack:
    ADD T7, SB, R0
L_bc_6c7a0601_done:
    STORE S1, T7, S2
; Jump to epilogue
    BEQ R0, R0, L_str_copy_99999
L_str_copy_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
print_num:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 22 slots for locals
    ADDI SP, SP, 22
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_print_num_19:
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op2_t2 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S2
    LI S0, 0
    XOR T7, S1, S0
    LI T6, 1
    SLTU S1, T7, T6
    BEQ S1, R0, L_print_num_22
; Branch to L_print_num_22 if condition is false
    BEQ R0, R0, L_print_num_20
; Unconditional branch to L_print_num_20 (condition was true)
; Invalidated 1 alloca bindings
L_print_num_20:
    LI T5, 48
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S3, SB, SC
; Spill const_f14_op6_48 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function putchar
    CALL putchar
; Jump to epilogue
    BEQ R0, R0, L_print_num_99999
    BEQ R0, R0, L_print_num_22
; Unconditional branch to L_print_num_22
L_print_num_22:
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op7_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T4, FP, R0
    LOAD T3, SB, T4
    LI T2, 0
    SLT T3, T3, T2
    BEQ T3, R0, L_print_num_25
; Branch to L_print_num_25 if condition is false
    BEQ R0, R0, L_print_num_23
; Unconditional branch to L_print_num_23 (condition was true)
; Invalidated 1 alloca bindings
L_print_num_23:
    LI T1, 45
; Spill live registers before call
; Spill const_f14_op9_45 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Load instruction: t6 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op10_t6 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T0, FP, R0
    LOAD T7, SB, T0
    LI T6, 0
    SUB T6, T6, T7
    STORE T6, SB, T0
    BEQ R0, R0, L_print_num_25
; Unconditional branch to L_print_num_25
; Invalidated 1 alloca bindings
L_print_num_25:
    ADD S0, FP, R0
    ADDI S0, S0, 1
    ADD S1, FP, R0
    ADDI S1, S1, 13
    LI S2, 0
    STORE S2, SB, S1
    BEQ R0, R0, L_print_num_26
; Unconditional branch to L_print_num_26
; Invalidated 2 alloca bindings
L_print_num_26:
; Load instruction: t10 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op15_t10 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD S3, FP, R0
    LOAD T5, SB, S3
    LI T2, 0
    SLT T5, T2, T5
    BEQ T5, R0, L_print_num_28
; Branch to L_print_num_28 if condition is false
    BEQ R0, R0, L_print_num_27
; Unconditional branch to L_print_num_27 (condition was true)
; Invalidated 1 alloca bindings
L_print_num_27:
; Load instruction: t12 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op17_t12 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t9 at FP+13
    ADD T3, FP, R0
    ADDI T3, T3, 13
    LOAD T4, SB, T3
    LI T1, 0
    ADD T4, T4, T1
; Load instruction: t14 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op19_t14 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, T3
    LI T0, 1
    ADD T7, T7, T0
    STORE T7, SB, T3
; Recompute alloca t8 at FP+1
    ADD S2, FP, R0
    ADDI S2, S2, 1
    ADD S1, T4, R0
    ADD S0, S2, S1
; Runtime bank overflow calculation for dynamic GEP
    LI T5, -1
    DIV T2, S0, T5
    MOD S3, S0, T5
; Base bank info: Stack
; Clearing binding for 'gep_new_bank_f14_op26_t16'
; Computing new bank gep_new_bank_f14_op26_t16 = SB + bank_delta
    ADD T1, SB, T2
; Result bank tracked as Dynamic(gep_new_bank_f14_op26_t16)
    ADD S0, S3, R0
; GEP: Setting bank info for t16 to Dynamic("gep_new_bank_f14_op26_t16")
; Load instruction: t17 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op27_t17 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T0, FP, R0
    LOAD S1, SB, T0
    LI T2, 10
    MOD S1, S1, T2
    LI T5, 48
    ADD T5, T5, S1
    LI T2, -1
    BEQ T1, T2, L_bc_7e87a5a7_use_global
    LI S1, -2
    BEQ T1, S1, L_bc_7e87a5a7_use_stack
    ADD S3, T1, R0
    BEQ R0, R0, L_bc_7e87a5a7_done
L_bc_7e87a5a7_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_7e87a5a7_done
L_bc_7e87a5a7_use_stack:
    ADD S3, SB, R0
L_bc_7e87a5a7_done:
    STORE T5, S3, S0
; Load instruction: t20 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op33_t20 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, T0
    LI S1, 10
    DIV T2, T2, S1
    STORE T2, SB, T0
    BEQ R0, R0, L_print_num_26
; Unconditional branch to L_print_num_26
; Invalidated 3 alloca bindings
L_print_num_28:
    BEQ R0, R0, L_print_num_29
; Unconditional branch to L_print_num_29
L_print_num_29:
; Load instruction: t22 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op36_t22 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t9 at FP+13
    ADD S1, FP, R0
    ADDI S1, S1, 13
    LOAD T0, SB, S1
    LI T3, 0
    SLT T0, T3, T0
    BEQ T0, R0, L_print_num_31
; Branch to L_print_num_31 if condition is false
    BEQ R0, R0, L_print_num_30
; Unconditional branch to L_print_num_30 (condition was true)
; Invalidated 1 alloca bindings
L_print_num_30:
; Load instruction: t24 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f14_op38_t24 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t9 at FP+13
    ADD S2, FP, R0
    ADDI S2, S2, 13
    LOAD T3, SB, S2
    LI T0, 1
    SUB T3, T3, T0
    STORE T3, SB, S2
; Recompute alloca t8 at FP+1
    ADD S1, FP, R0
    ADDI S1, S1, 1
; Spill t7 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T6, SB, SC
    ADD T6, T3, R0
    ADD T0, S1, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t15 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T7, SB, SC
; Spill t13 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T4, SB, SC
    LI T4, -1
    DIV T7, T0, T4
; Spill t19 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T5, SB, SC
    MOD T5, T0, T4
; Base bank info: Stack
; Clearing binding for 'gep_new_bank_f14_op45_t26'
; Spill t16 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE S0, SB, SC
; Spill gep_new_bank_f14_op26_t16 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T1, SB, SC
; Computing new bank gep_new_bank_f14_op45_t26 = SB + bank_delta
    ADD S0, SB, T7
; Result bank tracked as Dynamic(gep_new_bank_f14_op45_t26)
    ADD T0, T5, R0
; GEP: Setting bank info for t26 to Dynamic("gep_new_bank_f14_op45_t26")
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; LOAD: Pointer t26 has bank info: Dynamic("gep_new_bank_f14_op45_t26")
    LI T7, -1
    BEQ S0, T7, L_bc_10561ea5_use_global
    LI T4, -2
    BEQ S0, T4, L_bc_10561ea5_use_stack
    ADD T6, S0, R0
    BEQ R0, R0, L_bc_10561ea5_done
L_bc_10561ea5_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_10561ea5_done
L_bc_10561ea5_use_stack:
    ADD T6, SB, R0
L_bc_10561ea5_done:
; LOAD: Using bank register T6 for load
    LOAD T5, T6, T0
; Spill live registers before call
; Spill gep_new_bank_f14_op26_t16 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE T1, SB, SC
; Spill store_f14_op29_resolved_bank_14_f14_op30 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE S3, SB, SC
; Spill t21 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T2, SB, SC
; Spill t25 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T3, SB, SC
; Spill t26 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T0, SB, SC
; Spill gep_new_bank_f14_op45_t26 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S0, SB, SC
; Spill gep_new_bank_f14_op45_t26 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE S0, SB, SC
; Spill load_f14_op46_t27_resolved_bank_14_f14_op47 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T6, SB, SC
; Spill t27 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_print_num_29
; Unconditional branch to L_print_num_29
L_print_num_31:
; Jump to epilogue
    BEQ R0, R0, L_print_num_99999
L_print_num_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
parse_num:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 15 slots for locals
    ADDI SP, SP, 15
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 1 bank from A3
L_parse_num_32:
    ADD S1, FP, R0
    STORE S3, SB, S1
    ADDI S0, S1, 1
    STORE A1, SB, S0
    ADD T7, FP, R0
    ADDI T7, T7, 2
    STORE S2, SB, T7
    ADDI T6, T7, 1
    STORE A3, SB, T6
    ADD T5, FP, R0
    ADDI T5, T5, 4
    LI T4, 0
    STORE T4, SB, T5
    ADD T3, FP, R0
    ADDI T3, T3, 5
    LI T2, 0
    STORE T2, SB, T3
    ADD T1, FP, R0
    ADDI T1, T1, 6
    LI T0, 1
    STORE T0, SB, T1
; Load instruction: t7 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op16_t7 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, S1
    ADDI T6, S1, 1
    LOAD T4, SB, T6
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, S0, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t8 to Dynamic("load_f16_op19_t7_bank_val")
; Load instruction: t9 = load FatPtr(FatPointer { addr: Temp(8), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(8), bank: Mixed })
; LOAD: Pointer t8 has bank info: Dynamic("load_f16_op19_t7_bank_val")
    LI T6, -1
    BEQ T4, T6, L_bc_91b3f3bc_use_global
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S3, SB, SC
    LI S3, -2
    BEQ T4, S3, L_bc_91b3f3bc_use_stack
    ADD T0, T4, R0
    BEQ R0, R0, L_bc_91b3f3bc_done
L_bc_91b3f3bc_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_91b3f3bc_done
L_bc_91b3f3bc_use_stack:
    ADD T0, SB, R0
L_bc_91b3f3bc_done:
; LOAD: Using bank register T0 for load
    LOAD T6, T0, T2
    LI S3, 45
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S2, SB, SC
    XOR S2, T6, S3
    LI T7, 1
    SLTU T6, S2, T7
    BEQ T6, R0, L_parse_num_35
; Branch to L_parse_num_35 if condition is false
    BEQ R0, R0, L_parse_num_33
; Unconditional branch to L_parse_num_33 (condition was true)
; Invalidated 4 alloca bindings
L_parse_num_33:
    LI S2, 0
    LI T7, 1
    SUB S2, S2, T7
; Recompute alloca t6 at FP+6
    ADD S3, FP, R0
    ADDI S3, S3, 6
    STORE S2, SB, S3
    LI T6, 1
; Recompute alloca t5 at FP+5
    ADD T1, FP, R0
    ADDI T1, T1, 5
    STORE T6, SB, T1
    BEQ R0, R0, L_parse_num_35
; Unconditional branch to L_parse_num_35
; Invalidated 2 alloca bindings
L_parse_num_35:
    BEQ R0, R0, L_parse_num_36
; Unconditional branch to L_parse_num_36
L_parse_num_36:
; Load instruction: t12 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op29_t12 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+0
    ADD T3, FP, R0
    LOAD T5, SB, T3
    ADDI S1, T3, 1
    LOAD T7, SB, S1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op33_t13 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+5
    ADD T6, FP, R0
    ADDI T6, T6, 5
    LOAD T1, SB, T6
    ADD S1, T1, R0
    ADD S3, T5, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t7 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S0, SB, SC
; Spill load_f16_op19_t7_bank_val to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T4, SB, SC
; Spill t8 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T2, SB, SC
; Spill load_f16_op19_t7_bank_val to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T4, SB, SC
    LI T2, -1
    DIV S0, S3, T2
; Spill load_f16_op19_t7_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T4, SB, SC
    MOD T4, S3, T2
; Base bank info: Dynamic("load_f16_op32_t12_bank_val")
; Clearing binding for 'gep_new_bank_f16_op39_t14'
; Spill load_f16_op20_t9_resolved_bank_16_f16_op21 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T0, SB, SC
; Computing new bank gep_new_bank_f16_op39_t14 = load_f16_op32_t12_bank_val + bank_delta
    ADD T0, T7, S0
; Result bank tracked as Dynamic(gep_new_bank_f16_op39_t14)
    ADD S3, T4, R0
; GEP: Setting bank info for t14 to Dynamic("gep_new_bank_f16_op39_t14")
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; LOAD: Pointer t14 has bank info: Dynamic("gep_new_bank_f16_op39_t14")
    LI S0, -1
    BEQ T0, S0, L_bc_96a93b47_use_global
    LI T2, -2
    BEQ T0, T2, L_bc_96a93b47_use_stack
    ADD S1, T0, R0
    BEQ R0, R0, L_bc_96a93b47_done
L_bc_96a93b47_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_96a93b47_done
L_bc_96a93b47_use_stack:
    ADD S1, SB, R0
L_bc_96a93b47_done:
; LOAD: Using bank register S1 for load
    LOAD T4, S1, S3
    BEQ T4, R0, L_parse_num_38
; Branch to L_parse_num_38 if condition is false
    BEQ R0, R0, L_parse_num_37
; Unconditional branch to L_parse_num_37 (condition was true)
; Invalidated 2 alloca bindings
L_parse_num_37:
; Load instruction: t16 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op44_t16 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+0
    ADD S0, FP, R0
    LOAD T2, SB, S0
    ADDI T4, S0, 1
    LOAD T3, SB, T4
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t17 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op48_t17 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+5
    ADD T6, FP, R0
    ADDI T6, T6, 5
    LOAD T4, SB, T6
; Spill t11 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE S2, SB, SC
; Spill t12 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T5, SB, SC
; Spill load_f16_op32_t12_bank_val to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T7, SB, SC
    ADD T5, T4, R0
    ADD S2, T2, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill t13 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T1, SB, SC
; Spill load_f16_op32_t12_bank_val to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T7, SB, SC
    LI T7, -1
    DIV T1, S2, T7
; Spill t14 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S3, SB, SC
; Spill gep_new_bank_f16_op39_t14 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T0, SB, SC
    MOD S3, S2, T7
; Base bank info: Dynamic("load_f16_op47_t16_bank_val")
; Clearing binding for 'gep_new_bank_f16_op54_t18'
; Spill gep_new_bank_f16_op39_t14 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T0, SB, SC
; Computing new bank gep_new_bank_f16_op54_t18 = load_f16_op47_t16_bank_val + bank_delta
    ADD T0, T3, T1
; Result bank tracked as Dynamic(gep_new_bank_f16_op54_t18)
    ADD S2, S3, R0
; GEP: Setting bank info for t18 to Dynamic("gep_new_bank_f16_op54_t18")
; Load instruction: t19 = load FatPtr(FatPointer { addr: Temp(18), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(18), bank: Mixed })
; LOAD: Pointer t18 has bank info: Dynamic("gep_new_bank_f16_op54_t18")
    LI T1, -1
    BEQ T0, T1, L_bc_899d7de6_use_global
    LI T7, -2
    BEQ T0, T7, L_bc_899d7de6_use_stack
    ADD T5, T0, R0
    BEQ R0, R0, L_bc_899d7de6_done
L_bc_899d7de6_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_899d7de6_done
L_bc_899d7de6_use_stack:
    ADD T5, SB, R0
L_bc_899d7de6_done:
; LOAD: Using bank register T5 for load
    LOAD S3, T5, S2
    LI T1, 48
    SLT S3, S3, T1
; Load instruction: t21 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op59_t21 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T1, S0, 1
; Spill load_f16_op40_t15_resolved_bank_16_f16_op41 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S1, SB, SC
    LOAD S1, SB, T1
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t22 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op63_t22 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, T6
; Spill t16 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T2, SB, SC
; Spill load_f16_op47_t16_bank_val to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T3, SB, SC
; Spill t17 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T4, SB, SC
    ADD T4, T1, R0
    ADD T2, T7, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f16_op47_t16_bank_val to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T3, SB, SC
; Spill t18 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S2, SB, SC
; Spill gep_new_bank_f16_op54_t18 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T0, SB, SC
    LI S2, -1
    DIV T3, T2, S2
; Spill gep_new_bank_f16_op54_t18 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T0, SB, SC
    MOD T0, T2, S2
; Base bank info: Dynamic("load_f16_op62_t21_bank_val")
; Clearing binding for 'gep_new_bank_f16_op69_t23'
; Spill load_f16_op55_t19_resolved_bank_16_f16_op56 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T5, SB, SC
; Computing new bank gep_new_bank_f16_op69_t23 = load_f16_op62_t21_bank_val + bank_delta
    ADD T5, S1, T3
; Result bank tracked as Dynamic(gep_new_bank_f16_op69_t23)
    ADD T2, T0, R0
; GEP: Setting bank info for t23 to Dynamic("gep_new_bank_f16_op69_t23")
; Load instruction: t24 = load FatPtr(FatPointer { addr: Temp(23), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(23), bank: Mixed })
; LOAD: Pointer t23 has bank info: Dynamic("gep_new_bank_f16_op69_t23")
    LI T3, -1
    BEQ T5, T3, L_bc_4c18e38c_use_global
    LI S2, -2
    BEQ T5, S2, L_bc_4c18e38c_use_stack
    ADD T4, T5, R0
    BEQ R0, R0, L_bc_4c18e38c_done
L_bc_4c18e38c_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_4c18e38c_done
L_bc_4c18e38c_use_stack:
    ADD T4, SB, R0
L_bc_4c18e38c_done:
; LOAD: Using bank register T4 for load
    LOAD T0, T4, T2
    LI T3, 57
    SLT T0, T3, T0
    OR S3, S3, T0
    BEQ S3, R0, L_parse_num_41
; Branch to L_parse_num_41 if condition is false
    BEQ R0, R0, L_parse_num_39
; Unconditional branch to L_parse_num_39 (condition was true)
; Invalidated 2 alloca bindings
L_parse_num_39:
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_parse_num_99999
    BEQ R0, R0, L_parse_num_41
; Unconditional branch to L_parse_num_41
L_parse_num_41:
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op74_t27 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+4
    ADD S2, FP, R0
    ADDI S2, S2, 4
    LOAD T3, SB, S2
    LI T0, 10
    MUL T3, T3, T0
; Load instruction: t29 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op76_t29 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+0
    ADD S3, FP, R0
    LOAD T6, SB, S3
    ADDI S0, S3, 1
    LOAD T0, SB, S0
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t30 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op80_t30 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+5
    ADD S0, FP, R0
    ADDI S0, S0, 5
; Spill t21 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T7, SB, SC
; Spill load_f16_op62_t21_bank_val to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE S1, SB, SC
    LOAD T7, SB, S0
; Spill t22 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T1, SB, SC
; Spill load_f16_op62_t21_bank_val to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S1, SB, SC
    ADD S1, T7, R0
    ADD T1, T6, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t23 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T2, SB, SC
; Spill gep_new_bank_f16_op69_t23 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T5, SB, SC
; Spill gep_new_bank_f16_op69_t23 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T5, SB, SC
    LI T5, -1
    DIV T2, T1, T5
; Spill load_f16_op70_t24_resolved_bank_16_f16_op71 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T4, SB, SC
    MOD T4, T1, T5
; Base bank info: Dynamic("load_f16_op79_t29_bank_val")
; Clearing binding for 'gep_new_bank_f16_op86_t31'
; Computing new bank gep_new_bank_f16_op86_t31 = load_f16_op79_t29_bank_val + bank_delta
    ADD S2, T0, T2
; Result bank tracked as Dynamic(gep_new_bank_f16_op86_t31)
    ADD T1, T4, R0
; GEP: Setting bank info for t31 to Dynamic("gep_new_bank_f16_op86_t31")
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(31), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Mixed })
; LOAD: Pointer t31 has bank info: Dynamic("gep_new_bank_f16_op86_t31")
    LI T2, -1
    BEQ S2, T2, L_bc_fefbe454_use_global
    LI T5, -2
    BEQ S2, T5, L_bc_fefbe454_use_stack
    ADD S1, S2, R0
    BEQ R0, R0, L_bc_fefbe454_done
L_bc_fefbe454_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_fefbe454_done
L_bc_fefbe454_use_stack:
    ADD S1, SB, R0
L_bc_fefbe454_done:
; LOAD: Using bank register S1 for load
    LOAD T4, S1, T1
    LI T2, 48
    SUB T4, T4, T2
    ADD T3, T3, T4
; Recompute alloca t4 at FP+4
    ADD T5, FP, R0
    ADDI T5, T5, 4
    STORE T3, SB, T5
; Load instruction: t35 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op92_t35 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    LI T4, 0
    ADD T2, T2, T4
; Load instruction: t37 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op94_t37 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    LI S3, 1
    ADD T4, T4, S3
    STORE T4, SB, S0
    BEQ R0, R0, L_parse_num_36
; Unconditional branch to L_parse_num_36
; Invalidated 2 alloca bindings
L_parse_num_38:
; Load instruction: t39 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op97_t39 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+2
    ADD S3, FP, R0
    ADDI S3, S3, 2
    LOAD T5, SB, S3
    ADDI S0, S3, 1
; Spill t29 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T6, SB, SC
; Spill load_f16_op79_t29_bank_val to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T0, SB, SC
    LOAD T6, SB, S0
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t40 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op101_t40 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+4
    ADD S0, FP, R0
    ADDI S0, S0, 4
; Spill t30 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T7, SB, SC
    LOAD T7, SB, S0
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f16_op103_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Spill load_f16_op79_t29_bank_val to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T0, SB, SC
; Recompute alloca t6 at FP+6
    ADD T0, FP, R0
    ADDI T0, T0, 6
; Spill t31 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T1, SB, SC
; Spill gep_new_bank_f16_op86_t31 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE S2, SB, SC
    LOAD T1, SB, T0
    MUL T7, T7, T1
; Spill gep_new_bank_f16_op86_t31 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE S2, SB, SC
    LI S2, -1
    BEQ T6, S2, L_bc_5217bb88_use_global
; Spill load_f16_op87_t32_resolved_bank_16_f16_op88 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE S1, SB, SC
    LI S1, -2
    BEQ T6, S1, L_bc_5217bb88_use_stack
    ADD T1, T6, R0
    BEQ R0, R0, L_bc_5217bb88_done
L_bc_5217bb88_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_5217bb88_done
L_bc_5217bb88_use_stack:
    ADD T1, SB, R0
L_bc_5217bb88_done:
    STORE T7, T1, T5
    LI RV0, 1
; Jump to epilogue
    BEQ R0, R0, L_parse_num_99999
L_parse_num_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
find_word:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 11 slots for locals
    ADDI SP, SP, 11
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
L_find_word_42:
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADDI S1, S2, 1
    STORE A1, SB, S1
    ADD S0, FP, R0
    ADDI S0, S0, 2
    LI T7, 0
    STORE T7, SB, S0
    BEQ R0, R0, L_find_word_43
; Unconditional branch to L_find_word_43
; Invalidated 2 alloca bindings
L_find_word_43:
; Load instruction: t3 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op7_t3 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+2
    ADD T6, FP, R0
    ADDI T6, T6, 2
    LOAD T5, SB, T6
; Load instruction: t4 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f18_op10_t4 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T4
    SLT T5, T5, T3
    BEQ T5, R0, L_find_word_46
; Branch to L_find_word_46 if condition is false
    BEQ R0, R0, L_find_word_44
; Unconditional branch to L_find_word_44 (condition was true)
; Invalidated 1 alloca bindings
L_find_word_44:
; Load instruction: t6 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op12_t6 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+2
    ADD T2, FP, R0
    ADDI T2, T2, 2
    LOAD T1, SB, T2
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 11
    STORE S3, SB, SC
; Spill load_f18_op9_t4_addr to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE T4, SB, SC
; Spill t6 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t7
; Load instruction: t8 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op14_t8 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T0, FP, R0
    LOAD S1, SB, T0
    ADDI T7, T0, 1
    LOAD S0, SB, T7
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t7 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE RV0, SB, SC
; Spill t8 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S1, SB, SC
; Spill load_f18_op17_t8_bank_val to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S0, SB, SC
; Spill load_f18_op17_t8_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, RV1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S1, R0
    ADD A3, S0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t9
    BEQ RV0, R0, L_find_word_49
; Branch to L_find_word_49 if condition is false
    BEQ R0, R0, L_find_word_47
; Unconditional branch to L_find_word_47 (condition was true)
L_find_word_47:
; Load instruction: t10 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op18_t10 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
    LOAD T3, SB, S2
    MOVE RV0, T3
; Jump to epilogue
    BEQ R0, R0, L_find_word_99999
    BEQ R0, R0, L_find_word_49
; Unconditional branch to L_find_word_49
; Invalidated 1 alloca bindings
L_find_word_49:
    BEQ R0, R0, L_find_word_45
; Unconditional branch to L_find_word_45
L_find_word_45:
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op20_t11 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+2
    ADD T5, FP, R0
    ADDI T5, T5, 2
    LOAD T6, SB, T5
    LI S3, 0
    ADD T6, T6, S3
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f18_op22_t13 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, T5
    LI T2, 1
    ADD T4, T4, T2
    STORE T4, SB, T5
    BEQ R0, R0, L_find_word_43
; Unconditional branch to L_find_word_43
; Invalidated 1 alloca bindings
L_find_word_46:
    LI T1, 0
    LI T7, 1
    SUB T1, T1, T7
    MOVE RV0, T1
; Jump to epilogue
    BEQ R0, R0, L_find_word_99999
L_find_word_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
add_word:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 14 slots for locals
    ADDI SP, SP, 14
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 2 from A3
    ADD S1, A3, R0
L_add_word_50:
    ADD S0, FP, R0
    STORE S3, SB, S0
    ADDI T7, S0, 1
    STORE A1, SB, T7
    ADD T6, FP, R0
    ADDI T6, T6, 2
    STORE S2, SB, T6
    ADD T5, FP, R0
    ADDI T5, T5, 3
    STORE S1, SB, T5
; Load instruction: t6 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f20_op10_t6 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T4
    LI T2, 50
    SLT T3, T3, T2
    BEQ T3, R0, L_add_word_53
; Branch to L_add_word_53 if condition is false
    BEQ R0, R0, L_add_word_51
; Unconditional branch to L_add_word_51 (condition was true)
; Invalidated 3 alloca bindings
L_add_word_51:
    ADD T1, FP, R0
    ADDI T1, T1, 4
; Load instruction: t9 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f20_op13_t9 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T0
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE S3, SB, SC
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S2, SB, SC
; Spill t2 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S1, SB, SC
; Spill load_f20_op9_t6_addr to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T4, SB, SC
; Spill load_f20_op12_t9_addr to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T0, SB, SC
; Spill t9 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t10
; Recompute alloca t8 at FP+4
    ADD T2, FP, R0
    ADDI T2, T2, 4
    STORE RV0, SB, T2
    ADDI T3, T2, 1
    STORE RV1, SB, T3
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(8), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(8), bank: Stack })
; LOAD: Pointer load_src_ptr_f20_op17_t11 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, T2
    ADDI T6, T2, 1
    LOAD S0, SB, T6
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t12 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f20_op21_t12 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD S3, FP, R0
    LOAD S2, SB, S3
    ADDI S1, S3, 1
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t10 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE RV0, SB, SC
; Spill t11 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T5, SB, SC
; Spill load_f20_op20_t11_bank_val to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S0, SB, SC
; Spill load_f20_op20_t11_bank_val to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE S0, SB, SC
; Spill t12 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S2, SB, SC
; Spill load_f20_op24_t12_bank_val to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T4, SB, SC
; Spill load_f20_op24_t12_bank_val to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, S0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S2, R0
    ADD A3, T4, R0
; Call function str_copy
    CALL str_copy
; Load instruction: t13 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f20_op26_t13 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T1
    LI T7, 1752
    ADD T6, T0, R0
    ADD T3, T7, T6
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV S1, T3, RV0
    MOD T2, T3, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f20_op33_t14'
; Computing new bank gep_new_bank_f20_op33_t14 = GP + bank_delta
    ADD S3, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f20_op33_t14)
    ADD T3, T2, R0
; GEP: Setting bank info for t14 to Dynamic("gep_new_bank_f20_op33_t14")
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f20_op34_t15 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T5, FP, R0
    ADDI T5, T5, 2
    LOAD S0, SB, T5
    LI T4, -1
    BEQ S3, T4, L_bc_50a1effe_use_global
    LI T6, -2
    BEQ S3, T6, L_bc_50a1effe_use_stack
    ADD S2, S3, R0
    BEQ R0, R0, L_bc_50a1effe_done
L_bc_50a1effe_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_50a1effe_done
L_bc_50a1effe_use_stack:
    ADD S2, SB, R0
L_bc_50a1effe_done:
    STORE S0, S2, T3
; Load instruction: t16 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f20_op41_t16 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S1
    LI T2, 1802
    ADD T4, RV0, R0
    ADD T7, T2, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f20_op25_t13_addr to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T1, SB, SC
    LI T1, -1
    DIV T6, T7, T1
; Spill t13 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T0, SB, SC
    MOD T0, T7, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f20_op48_t17'
; Computing new bank gep_new_bank_f20_op48_t17 = GP + bank_delta
    ADD T5, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f20_op48_t17)
    ADD T7, T0, R0
; GEP: Setting bank info for t17 to Dynamic("gep_new_bank_f20_op48_t17")
; Load instruction: t18 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f20_op49_t18 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD T4, FP, R0
    ADDI T4, T4, 3
    LOAD T6, SB, T4
    LI T0, -1
    BEQ T5, T0, L_bc_d8133cbb_use_global
    LI T2, -2
    BEQ T5, T2, L_bc_d8133cbb_use_stack
    ADD T1, T5, R0
    BEQ R0, R0, L_bc_d8133cbb_done
L_bc_d8133cbb_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_d8133cbb_done
L_bc_d8133cbb_use_stack:
    ADD T1, SB, R0
L_bc_d8133cbb_done:
    STORE T6, T1, T7
; Load instruction: t19 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f20_op56_t19 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T0
; Spill t15 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE S0, SB, SC
    LI S0, 0
    ADD T2, T2, S0
; Load instruction: t21 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S0, 1852
; LOAD: Pointer load_src_ptr_f20_op59_t21 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t14 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T3, SB, SC
; Spill gep_new_bank_f20_op33_t14 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S3, SB, SC
    LOAD T3, GP, S0
; Spill gep_new_bank_f20_op33_t14 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE S3, SB, SC
    LI S3, 1
    ADD T3, T3, S3
    LI S3, 1852
    STORE T3, GP, S3
    BEQ R0, R0, L_add_word_53
; Unconditional branch to L_add_word_53
; Invalidated 1 alloca bindings
L_add_word_53:
; Jump to epilogue
    BEQ R0, R0, L_add_word_99999
L_add_word_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
exec_prim:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 38 slots for locals
    ADDI SP, SP, 38
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_exec_prim_54:
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADD S1, FP, R0
    ADDI S1, S1, 1
; Load instruction: t3 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op2_t3 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, S2
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S3, SB, SC
; Spill t3 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t4
; Recompute alloca t2 at FP+1
    ADD T7, FP, R0
    ADDI T7, T7, 1
    STORE RV0, SB, T7
    ADDI T6, T7, 1
    STORE RV1, SB, T6
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op6_t5 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, T7
    ADDI T4, T7, 1
    LOAD T3, SB, T4
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2389
    LI T1, -1
; Spill live registers before call
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE RV0, SB, SC
; Spill t5 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T5, SB, SC
; Spill load_f22_op9_t5_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T3, SB, SC
; Spill load_f22_op9_t5_bank_val to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE T3, SB, SC
; Spill const_f22_op10_2389 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op11 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t6
    BEQ RV0, R0, L_exec_prim_56
; Branch to L_exec_prim_56 if condition is false
    BEQ R0, R0, L_exec_prim_55
; Unconditional branch to L_exec_prim_55 (condition was true)
L_exec_prim_55:
    ADD T0, FP, R0
    ADDI T0, T0, 3
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t8
; Recompute alloca t7 at FP+3
    ADD S3, FP, R0
    ADDI S3, S3, 3
    STORE RV0, SB, S3
    ADD S1, FP, R0
    ADDI S1, S1, 4
; Spill live registers before call
; Spill t8 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t10
; Recompute alloca t9 at FP+4
    ADD S2, FP, R0
    ADDI S2, S2, 4
    STORE RV0, SB, S2
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op14_t11 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, S2
; Load instruction: t12 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op16_t12 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+3
    ADD T6, FP, R0
    ADDI T6, T6, 3
    LOAD T4, SB, T6
    ADD S0, S0, T4
; Spill live registers before call
; Spill t10 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE RV0, SB, SC
; Spill t13 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_57
; Unconditional branch to L_exec_prim_57
L_exec_prim_56:
; Load instruction: t14 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op18_t14 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T7, FP, R0
    ADDI T7, T7, 1
    LOAD T5, SB, T7
    ADDI T3, T7, 1
    LOAD T2, SB, T3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T1, 2391
    LI T0, -1
; Spill live registers before call
; Spill t14 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T5, SB, SC
; Spill load_f22_op21_t14_bank_val to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T2, SB, SC
; Spill load_f22_op21_t14_bank_val to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T2, SB, SC
; Spill const_f22_op22_2391 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T1, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op23 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T1, R0
    ADD A3, T0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t15
    BEQ RV0, R0, L_exec_prim_59
; Branch to L_exec_prim_59 if condition is false
    BEQ R0, R0, L_exec_prim_58
; Unconditional branch to L_exec_prim_58 (condition was true)
L_exec_prim_58:
    ADD S3, FP, R0
    ADDI S3, S3, 5
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t17
; Recompute alloca t16 at FP+5
    ADD S1, FP, R0
    ADDI S1, S1, 5
    STORE RV0, SB, S1
    ADD T4, FP, R0
    ADDI T4, T4, 6
; Spill live registers before call
; Spill t17 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t19
; Recompute alloca t18 at FP+6
    ADD S2, FP, R0
    ADDI S2, S2, 6
    STORE RV0, SB, S2
; Load instruction: t20 = load FatPtr(FatPointer { addr: Temp(18), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(18), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op26_t20 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S2
; Load instruction: t21 = load FatPtr(FatPointer { addr: Temp(16), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(16), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op28_t21 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t16 at FP+5
    ADD S0, FP, R0
    ADDI S0, S0, 5
    LOAD T3, SB, S0
    SUB T6, T6, T3
; Spill live registers before call
; Spill t19 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE RV0, SB, SC
; Spill t22 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_60
; Unconditional branch to L_exec_prim_60
L_exec_prim_59:
; Load instruction: t23 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op30_t23 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T7, FP, R0
    ADDI T7, T7, 1
    LOAD T5, SB, T7
    ADDI T2, T7, 1
    LOAD T1, SB, T2
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2393
    LI S3, -1
; Spill live registers before call
; Spill t23 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T5, SB, SC
; Spill load_f22_op33_t23_bank_val to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE T1, SB, SC
; Spill load_f22_op33_t23_bank_val to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE T1, SB, SC
; Spill const_f22_op34_2393 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op35 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE S3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, S3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t24
    BEQ RV0, R0, L_exec_prim_62
; Branch to L_exec_prim_62 if condition is false
    BEQ R0, R0, L_exec_prim_61
; Unconditional branch to L_exec_prim_61 (condition was true)
L_exec_prim_61:
    ADD S1, FP, R0
    ADDI S1, S1, 7
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t26
; Recompute alloca t25 at FP+7
    ADD T4, FP, R0
    ADDI T4, T4, 7
    STORE RV0, SB, T4
    ADD T3, FP, R0
    ADDI T3, T3, 8
; Spill live registers before call
; Spill t26 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t28
; Recompute alloca t27 at FP+8
    ADD S2, FP, R0
    ADDI S2, S2, 8
    STORE RV0, SB, S2
; Load instruction: t29 = load FatPtr(FatPointer { addr: Temp(27), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(27), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op38_t29 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, S2
; Load instruction: t30 = load FatPtr(FatPointer { addr: Temp(25), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(25), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op40_t30 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t25 at FP+7
    ADD T6, FP, R0
    ADDI T6, T6, 7
    LOAD T2, SB, T6
    MUL S0, S0, T2
; Spill live registers before call
; Spill t28 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE RV0, SB, SC
; Spill t31 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_63
; Unconditional branch to L_exec_prim_63
L_exec_prim_62:
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op42_t32 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T7, FP, R0
    ADDI T7, T7, 1
    LOAD T5, SB, T7
    ADDI T1, T7, 1
    LOAD T0, SB, T1
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2395
    LI S1, -1
; Spill live registers before call
; Spill t32 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T5, SB, SC
; Spill load_f22_op45_t32_bank_val to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE T0, SB, SC
; Spill load_f22_op45_t32_bank_val to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T0, SB, SC
; Spill const_f22_op46_2395 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op47 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE S1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t33
    BEQ RV0, R0, L_exec_prim_65
; Branch to L_exec_prim_65 if condition is false
    BEQ R0, R0, L_exec_prim_64
; Unconditional branch to L_exec_prim_64 (condition was true)
L_exec_prim_64:
    ADD T4, FP, R0
    ADDI T4, T4, 9
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t35
; Recompute alloca t34 at FP+9
    ADD T3, FP, R0
    ADDI T3, T3, 9
    STORE RV0, SB, T3
    ADD T2, FP, R0
    ADDI T2, T2, 10
; Spill live registers before call
; Spill t35 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t37
; Recompute alloca t36 at FP+10
    ADD S2, FP, R0
    ADDI S2, S2, 10
    STORE RV0, SB, S2
; Load instruction: t38 = load FatPtr(FatPointer { addr: Temp(34), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(34), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op50_t38 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t34 at FP+9
    ADD T6, FP, R0
    ADDI T6, T6, 9
    LOAD S0, SB, T6
    LI T1, 0
    XOR T7, S0, T1
    LI T5, 0
    SLTU S0, T5, T7
    BEQ S0, R0, L_exec_prim_69
; Branch to L_exec_prim_69 if condition is false
    BEQ R0, R0, L_exec_prim_67
; Unconditional branch to L_exec_prim_67 (condition was true)
; Invalidated 2 alloca bindings
L_exec_prim_67:
; Load instruction: t40 = load FatPtr(FatPointer { addr: Temp(36), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(36), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op54_t40 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t36 at FP+10
    ADD T0, FP, R0
    ADDI T0, T0, 10
    LOAD S3, SB, T0
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(34), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(34), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op56_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t34 at FP+9
    ADD S1, FP, R0
    ADDI S1, S1, 9
    LOAD T4, SB, S1
    DIV S3, S3, T4
; Spill live registers before call
; Spill t37 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE RV0, SB, SC
; Spill t42 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_69
; Unconditional branch to L_exec_prim_69
L_exec_prim_69:
    BEQ R0, R0, L_exec_prim_66
; Unconditional branch to L_exec_prim_66
L_exec_prim_65:
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op58_t43 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    LOAD T2, SB, T3
    ADDI T7, T3, 1
    LOAD T5, SB, T7
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T1, 2397
    LI S0, -1
; Spill live registers before call
; Spill t43 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE T2, SB, SC
; Spill load_f22_op61_t43_bank_val to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE T5, SB, SC
; Spill load_f22_op61_t43_bank_val to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE T5, SB, SC
; Spill const_f22_op62_2397 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE T1, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op63 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, T5, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T1, R0
    ADD A3, S0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t44
    BEQ RV0, R0, L_exec_prim_71
; Branch to L_exec_prim_71 if condition is false
    BEQ R0, R0, L_exec_prim_70
; Unconditional branch to L_exec_prim_70 (condition was true)
L_exec_prim_70:
    ADD T6, FP, R0
    ADDI T6, T6, 11
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t46
; Recompute alloca t45 at FP+11
    ADD S2, FP, R0
    ADDI S2, S2, 11
    STORE RV0, SB, S2
    ADD T4, FP, R0
    ADDI T4, T4, 12
; Spill live registers before call
; Spill t46 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t48
; Recompute alloca t47 at FP+12
    ADD T0, FP, R0
    ADDI T0, T0, 12
    STORE RV0, SB, T0
; Load instruction: t49 = load FatPtr(FatPointer { addr: Temp(45), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(45), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op66_t49 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t45 at FP+11
    ADD S1, FP, R0
    ADDI S1, S1, 11
    LOAD S3, SB, S1
    LI T7, 0
    XOR T3, S3, T7
    LI T2, 0
    SLTU S3, T2, T3
    BEQ S3, R0, L_exec_prim_75
; Branch to L_exec_prim_75 if condition is false
    BEQ R0, R0, L_exec_prim_73
; Unconditional branch to L_exec_prim_73 (condition was true)
; Invalidated 2 alloca bindings
L_exec_prim_73:
; Load instruction: t51 = load FatPtr(FatPointer { addr: Temp(47), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(47), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op70_t51 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t47 at FP+12
    ADD T5, FP, R0
    ADDI T5, T5, 12
    LOAD T1, SB, T5
; Load instruction: t52 = load FatPtr(FatPointer { addr: Temp(45), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(45), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op72_t52 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t45 at FP+11
    ADD S0, FP, R0
    ADDI S0, S0, 11
    LOAD T6, SB, S0
    MOD T1, T1, T6
; Spill live registers before call
; Spill t48 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE RV0, SB, SC
; Spill t53 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_75
; Unconditional branch to L_exec_prim_75
L_exec_prim_75:
    BEQ R0, R0, L_exec_prim_72
; Unconditional branch to L_exec_prim_72
L_exec_prim_71:
; Load instruction: t54 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op74_t54 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S2, FP, R0
    ADDI S2, S2, 1
    LOAD T4, SB, S2
    ADDI T3, S2, 1
    LOAD T2, SB, T3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T7, 2401
    LI S3, -1
; Spill live registers before call
; Spill t54 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE T4, SB, SC
; Spill load_f22_op77_t54_bank_val to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE T2, SB, SC
; Spill load_f22_op77_t54_bank_val to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE T2, SB, SC
; Spill const_f22_op78_2401 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op79 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE S3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T4, R0
    ADD A1, T2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T7, R0
    ADD A3, S3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t55
    BEQ RV0, R0, L_exec_prim_77
; Branch to L_exec_prim_77 if condition is false
    BEQ R0, R0, L_exec_prim_76
; Unconditional branch to L_exec_prim_76 (condition was true)
L_exec_prim_76:
    ADD T0, FP, R0
    ADDI T0, T0, 13
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t57
; Recompute alloca t56 at FP+13
    ADD S1, FP, R0
    ADDI S1, S1, 13
    STORE RV0, SB, S1
    ADD T6, FP, R0
    ADDI T6, T6, 14
; Spill live registers before call
; Spill t57 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t59
; Recompute alloca t58 at FP+14
    ADD T5, FP, R0
    ADDI T5, T5, 14
    STORE RV0, SB, T5
; Load instruction: t60 = load FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op82_t60 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, T5
; Load instruction: t61 = load FatPtr(FatPointer { addr: Temp(56), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(56), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op84_t61 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t56 at FP+13
    ADD T1, FP, R0
    ADDI T1, T1, 13
    LOAD T3, SB, T1
    XOR S2, S0, T3
    LI T4, 1
    SLTU S0, S2, T4
    ADD T2, FP, R0
    ADDI T2, T2, 15
    BEQ S0, R0, L_exec_prim_80
; Branch to L_exec_prim_80 if condition is false
    BEQ R0, R0, L_exec_prim_79
; Unconditional branch to L_exec_prim_79 (condition was true)
; Invalidated 3 alloca bindings
L_exec_prim_79:
    LI T7, 0
    LI S3, 1
    SUB T7, T7, S3
; Recompute alloca t63 at FP+15
    ADD T0, FP, R0
    ADDI T0, T0, 15
    STORE T7, SB, T0
    BEQ R0, R0, L_exec_prim_81
; Unconditional branch to L_exec_prim_81
; Invalidated 1 alloca bindings
L_exec_prim_80:
    LI S1, 0
; Recompute alloca t63 at FP+15
    ADD T6, FP, R0
    ADDI T6, T6, 15
    STORE S1, SB, T6
    BEQ R0, R0, L_exec_prim_81
; Unconditional branch to L_exec_prim_81
; Invalidated 1 alloca bindings
L_exec_prim_81:
; Load instruction: t65 = load FatPtr(FatPointer { addr: Temp(63), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(63), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op91_t65 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t63 at FP+15
    ADD S2, FP, R0
    ADDI S2, S2, 15
    LOAD T4, SB, S2
; Spill live registers before call
; Spill t59 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE RV0, SB, SC
; Spill t64 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE T7, SB, SC
; Spill t65 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_78
; Unconditional branch to L_exec_prim_78
L_exec_prim_77:
; Load instruction: t66 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op93_t66 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    LOAD S0, SB, T3
    ADDI T1, T3, 1
    LOAD T2, SB, T1
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T5, 2403
    LI S3, -1
; Spill live registers before call
; Spill t66 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE S0, SB, SC
; Spill load_f22_op96_t66_bank_val to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE T2, SB, SC
; Spill load_f22_op96_t66_bank_val to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE T2, SB, SC
; Spill const_f22_op97_2403 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op98 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE S3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, S3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t67
    BEQ RV0, R0, L_exec_prim_83
; Branch to L_exec_prim_83 if condition is false
    BEQ R0, R0, L_exec_prim_82
; Unconditional branch to L_exec_prim_82 (condition was true)
L_exec_prim_82:
    ADD T0, FP, R0
    ADDI T0, T0, 16
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t69
; Recompute alloca t68 at FP+16
    ADD S1, FP, R0
    ADDI S1, S1, 16
    STORE RV0, SB, S1
    ADD T6, FP, R0
    ADDI T6, T6, 17
; Spill live registers before call
; Spill t69 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t71
; Recompute alloca t70 at FP+17
    ADD T7, FP, R0
    ADDI T7, T7, 17
    STORE RV0, SB, T7
; Load instruction: t72 = load FatPtr(FatPointer { addr: Temp(70), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(70), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op101_t72 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T7
; Load instruction: t73 = load FatPtr(FatPointer { addr: Temp(68), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(68), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op103_t73 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t68 at FP+16
    ADD T4, FP, R0
    ADDI T4, T4, 16
    LOAD T1, SB, T4
    SLT S2, S2, T1
    ADD T3, FP, R0
    ADDI T3, T3, 18
    BEQ S2, R0, L_exec_prim_86
; Branch to L_exec_prim_86 if condition is false
    BEQ R0, R0, L_exec_prim_85
; Unconditional branch to L_exec_prim_85 (condition was true)
; Invalidated 3 alloca bindings
L_exec_prim_85:
    LI S0, 0
    LI T2, 1
    SUB S0, S0, T2
; Recompute alloca t75 at FP+18
    ADD T5, FP, R0
    ADDI T5, T5, 18
    STORE S0, SB, T5
    BEQ R0, R0, L_exec_prim_87
; Unconditional branch to L_exec_prim_87
; Invalidated 1 alloca bindings
L_exec_prim_86:
    LI S3, 0
; Recompute alloca t75 at FP+18
    ADD T0, FP, R0
    ADDI T0, T0, 18
    STORE S3, SB, T0
    BEQ R0, R0, L_exec_prim_87
; Unconditional branch to L_exec_prim_87
; Invalidated 1 alloca bindings
L_exec_prim_87:
; Load instruction: t77 = load FatPtr(FatPointer { addr: Temp(75), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(75), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op108_t77 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t75 at FP+18
    ADD S1, FP, R0
    ADDI S1, S1, 18
    LOAD T6, SB, S1
; Spill live registers before call
; Spill t71 to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE RV0, SB, SC
; Spill t76 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE S0, SB, SC
; Spill t77 to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_84
; Unconditional branch to L_exec_prim_84
L_exec_prim_83:
; Load instruction: t78 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op110_t78 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T1, FP, R0
    ADDI T1, T1, 1
    LOAD S2, SB, T1
    ADDI T3, T1, 1
    LOAD T4, SB, T3
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T7, 2405
    LI T2, -1
; Spill live registers before call
; Spill t78 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE S2, SB, SC
; Spill load_f22_op113_t78_bank_val to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 100
    STORE T4, SB, SC
; Spill load_f22_op113_t78_bank_val to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 101
    STORE T4, SB, SC
; Spill const_f22_op114_2405 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 102
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op115 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 103
    STORE T2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, T4, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T7, R0
    ADD A3, T2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t79
    BEQ RV0, R0, L_exec_prim_89
; Branch to L_exec_prim_89 if condition is false
    BEQ R0, R0, L_exec_prim_88
; Unconditional branch to L_exec_prim_88 (condition was true)
L_exec_prim_88:
    ADD T5, FP, R0
    ADDI T5, T5, 19
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t81
; Recompute alloca t80 at FP+19
    ADD S3, FP, R0
    ADDI S3, S3, 19
    STORE RV0, SB, S3
    ADD T0, FP, R0
    ADDI T0, T0, 20
; Spill live registers before call
; Spill t81 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 104
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t83
; Recompute alloca t82 at FP+20
    ADD S0, FP, R0
    ADDI S0, S0, 20
    STORE RV0, SB, S0
; Load instruction: t84 = load FatPtr(FatPointer { addr: Temp(82), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(82), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op118_t84 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
; Load instruction: t85 = load FatPtr(FatPointer { addr: Temp(80), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(80), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op120_t85 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t80 at FP+19
    ADD T6, FP, R0
    ADDI T6, T6, 19
    LOAD T3, SB, T6
    SLT S1, T3, S1
    ADD T1, FP, R0
    ADDI T1, T1, 21
    BEQ S1, R0, L_exec_prim_92
; Branch to L_exec_prim_92 if condition is false
    BEQ R0, R0, L_exec_prim_91
; Unconditional branch to L_exec_prim_91 (condition was true)
; Invalidated 3 alloca bindings
L_exec_prim_91:
    LI S2, 0
    LI T4, 1
    SUB S2, S2, T4
; Recompute alloca t87 at FP+21
    ADD T7, FP, R0
    ADDI T7, T7, 21
    STORE S2, SB, T7
    BEQ R0, R0, L_exec_prim_93
; Unconditional branch to L_exec_prim_93
; Invalidated 1 alloca bindings
L_exec_prim_92:
    LI T2, 0
; Recompute alloca t87 at FP+21
    ADD T5, FP, R0
    ADDI T5, T5, 21
    STORE T2, SB, T5
    BEQ R0, R0, L_exec_prim_93
; Unconditional branch to L_exec_prim_93
; Invalidated 1 alloca bindings
L_exec_prim_93:
; Load instruction: t89 = load FatPtr(FatPointer { addr: Temp(87), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(87), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op125_t89 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t87 at FP+21
    ADD S3, FP, R0
    ADDI S3, S3, 21
    LOAD T0, SB, S3
; Spill live registers before call
; Spill t83 to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 105
    STORE RV0, SB, SC
; Spill t88 to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 106
    STORE S2, SB, SC
; Spill t89 to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 107
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_90
; Unconditional branch to L_exec_prim_90
L_exec_prim_89:
; Load instruction: t90 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op127_t90 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    LOAD S1, SB, T3
    ADDI T1, T3, 1
    LOAD T6, SB, T1
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S0, 2407
    LI T4, -1
; Spill live registers before call
; Spill t90 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 108
    STORE S1, SB, SC
; Spill load_f22_op130_t90_bank_val to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 109
    STORE T6, SB, SC
; Spill load_f22_op130_t90_bank_val to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 110
    STORE T6, SB, SC
; Spill const_f22_op131_2407 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 111
    STORE S0, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op132 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 112
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T6, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S0, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t91
    BEQ RV0, R0, L_exec_prim_95
; Branch to L_exec_prim_95 if condition is false
    BEQ R0, R0, L_exec_prim_94
; Unconditional branch to L_exec_prim_94 (condition was true)
L_exec_prim_94:
; Load instruction: t92 = load Global("sp")
; Canonicalizing global variable: sp
    LI T7, 100
; LOAD: Pointer load_src_ptr_f22_op134_t92 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T7
    LI T5, 0
    SLT T2, T5, T2
    BEQ T2, R0, L_exec_prim_99
; Branch to L_exec_prim_99 if condition is false
    BEQ R0, R0, L_exec_prim_97
; Unconditional branch to L_exec_prim_97 (condition was true)
L_exec_prim_97:
; Load instruction: t94 = load Global("sp")
; Canonicalizing global variable: sp
    LI S2, 100
; LOAD: Pointer load_src_ptr_f22_op137_t94 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, S2
    LI T0, 1
    SUB S3, S3, T0
    LI T1, 0
    ADD S1, S3, R0
    ADD T3, T1, S1
; Runtime bank overflow calculation for dynamic GEP
    LI S0, -1
    DIV T6, T3, S0
    MOD T4, T3, S0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op144_t96'
; Computing new bank gep_new_bank_f22_op144_t96 = GP + bank_delta
    ADD RV0, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f22_op144_t96)
    ADD T3, T4, R0
; GEP: Setting bank info for t96 to Dynamic("gep_new_bank_f22_op144_t96")
; Load instruction: t97 = load FatPtr(FatPointer { addr: Temp(96), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(96), bank: Mixed })
; LOAD: Pointer t96 has bank info: Dynamic("gep_new_bank_f22_op144_t96")
    LI T2, -1
    BEQ RV0, T2, L_bc_63bd9e09_use_global
    LI T0, -2
    BEQ RV0, T0, L_bc_63bd9e09_use_stack
    ADD T5, RV0, R0
    BEQ R0, R0, L_bc_63bd9e09_done
L_bc_63bd9e09_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_63bd9e09_done
L_bc_63bd9e09_use_stack:
    ADD T5, SB, R0
L_bc_63bd9e09_done:
; LOAD: Using bank register T5 for load
    LOAD S1, T5, T3
; Spill live registers before call
; Spill load_f22_op133_t92_addr to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 113
    STORE T7, SB, SC
; Spill load_f22_op136_t94_addr to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 114
    STORE S2, SB, SC
; Spill t95 to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 115
    STORE S3, SB, SC
; Spill t96 to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 116
    STORE T3, SB, SC
; Spill gep_new_bank_f22_op144_t96 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 117
    STORE RV0, SB, SC
; Spill gep_new_bank_f22_op144_t96 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 118
    STORE RV0, SB, SC
; Spill load_f22_op145_t97_resolved_bank_22_f22_op146 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 119
    STORE T5, SB, SC
; Spill t97 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 120
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_99
; Unconditional branch to L_exec_prim_99
L_exec_prim_99:
    BEQ R0, R0, L_exec_prim_96
; Unconditional branch to L_exec_prim_96
L_exec_prim_95:
; Load instruction: t98 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op149_t98 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD S0, SB, T6
    ADDI T4, T6, 1
    LOAD T1, SB, T4
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2411
    LI T0, -1
; Spill live registers before call
; Spill t98 to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 121
    STORE S0, SB, SC
; Spill load_f22_op152_t98_bank_val to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 122
    STORE T1, SB, SC
; Spill load_f22_op152_t98_bank_val to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 123
    STORE T1, SB, SC
; Spill const_f22_op153_2411 to slot 86
    ADD SC, FP, R0
    ADDI SC, SC, 124
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op154 to slot 87
    ADD SC, FP, R0
    ADDI SC, SC, 125
    STORE T0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t99
    BEQ RV0, R0, L_exec_prim_101
; Branch to L_exec_prim_101 if condition is false
    BEQ R0, R0, L_exec_prim_100
; Unconditional branch to L_exec_prim_100 (condition was true)
L_exec_prim_100:
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t100
    BEQ R0, R0, L_exec_prim_102
; Unconditional branch to L_exec_prim_102
L_exec_prim_101:
; Load instruction: t101 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op155_t101 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T7, FP, R0
    ADDI T7, T7, 1
    LOAD S2, SB, T7
    ADDI S3, T7, 1
    LOAD T3, SB, S3
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T5, 2416
    LI S1, -1
; Spill live registers before call
; Spill t100 to slot 88
    ADD SC, FP, R0
    ADDI SC, SC, 126
    STORE RV0, SB, SC
; Spill t101 to slot 89
    ADD SC, FP, R0
    ADDI SC, SC, 127
    STORE S2, SB, SC
; Spill load_f22_op158_t101_bank_val to slot 90
    ADD SC, FP, R0
    ADDI SC, SC, 128
    STORE T3, SB, SC
; Spill load_f22_op158_t101_bank_val to slot 91
    ADD SC, FP, R0
    ADDI SC, SC, 129
    STORE T3, SB, SC
; Spill const_f22_op159_2416 to slot 92
    ADD SC, FP, R0
    ADDI SC, SC, 130
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op160 to slot 93
    ADD SC, FP, R0
    ADDI SC, SC, 131
    STORE S1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, T3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, S1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t102
    BEQ RV0, R0, L_exec_prim_104
; Branch to L_exec_prim_104 if condition is false
    BEQ R0, R0, L_exec_prim_103
; Unconditional branch to L_exec_prim_103 (condition was true)
L_exec_prim_103:
; Load instruction: t103 = load Global("sp")
; Canonicalizing global variable: sp
    LI T4, 100
; LOAD: Pointer load_src_ptr_f22_op162_t103 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T4
    LI S0, 2
    SLT T1, T6, S0
    LI T2, 1
    SUB T6, T2, T1
    BEQ T6, R0, L_exec_prim_108
; Branch to L_exec_prim_108 if condition is false
    BEQ R0, R0, L_exec_prim_106
; Unconditional branch to L_exec_prim_106 (condition was true)
L_exec_prim_106:
    ADD T0, FP, R0
    ADDI T0, T0, 22
; Load instruction: t106 = load Global("sp")
; Canonicalizing global variable: sp
    LI S3, 100
; LOAD: Pointer load_src_ptr_f22_op167_t106 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, S3
    LI S2, 1
    SUB T7, T7, S2
    LI T3, 0
    ADD S1, T7, R0
    ADD T5, T3, S1
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV RV0, T5, T1
    MOD T2, T5, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op174_t108'
; Computing new bank gep_new_bank_f22_op174_t108 = GP + bank_delta
    ADD S0, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f22_op174_t108)
    ADD T5, T2, R0
; GEP: Setting bank info for t108 to Dynamic("gep_new_bank_f22_op174_t108")
; Load instruction: t109 = load FatPtr(FatPointer { addr: Temp(108), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(108), bank: Mixed })
; LOAD: Pointer t108 has bank info: Dynamic("gep_new_bank_f22_op174_t108")
    LI S2, -1
    BEQ S0, S2, L_bc_b4f63397_use_global
    LI S1, -2
    BEQ S0, S1, L_bc_b4f63397_use_stack
    ADD T6, S0, R0
    BEQ R0, R0, L_bc_b4f63397_done
L_bc_b4f63397_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_b4f63397_done
L_bc_b4f63397_use_stack:
    ADD T6, SB, R0
L_bc_b4f63397_done:
; LOAD: Using bank register T6 for load
    LOAD RV0, T6, T5
    STORE RV0, SB, T0
; Load instruction: t110 = load Global("sp")
; Canonicalizing global variable: sp
    LI T1, 100
; LOAD: Pointer load_src_ptr_f22_op181_t110 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T1
    LI T3, 1
    SUB T2, T2, T3
    LI S2, 0
    ADD T3, T2, R0
    ADD S1, S2, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f22_op161_t103_addr to slot 94
    ADD SC, FP, R0
    ADDI SC, SC, 132
    STORE T4, SB, SC
; Spill load_f22_op166_t106_addr to slot 95
    ADD SC, FP, R0
    ADDI SC, SC, 133
    STORE S3, SB, SC
    LI S3, -1
    DIV T4, S1, S3
; Spill t107 to slot 96
    ADD SC, FP, R0
    ADDI SC, SC, 134
    STORE T7, SB, SC
    MOD T7, S1, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op188_t112'
; Spill t108 to slot 97
    ADD SC, FP, R0
    ADDI SC, SC, 135
    STORE T5, SB, SC
; Spill gep_new_bank_f22_op174_t108 to slot 98
    ADD SC, FP, R0
    ADDI SC, SC, 136
    STORE S0, SB, SC
; Computing new bank gep_new_bank_f22_op188_t112 = GP + bank_delta
    ADD T5, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f22_op188_t112)
    ADD S1, T7, R0
; GEP: Setting bank info for t112 to Dynamic("gep_new_bank_f22_op188_t112")
; Load instruction: t113 = load Global("sp")
; Canonicalizing global variable: sp
    LI T3, 100
; LOAD: Pointer load_src_ptr_f22_op190_t113 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T3
    LI S3, 2
    SUB T4, T4, S3
    LI T7, 0
    ADD S3, T4, R0
    ADD S2, T7, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill gep_new_bank_f22_op174_t108 to slot 99
    ADD SC, FP, R0
    ADDI SC, SC, 137
    STORE S0, SB, SC
; Spill load_f22_op175_t109_resolved_bank_22_f22_op176 to slot 100
    ADD SC, FP, R0
    ADDI SC, SC, 138
    STORE T6, SB, SC
    LI T6, -1
    DIV S0, S2, T6
; Spill t109 to slot 101
    ADD SC, FP, R0
    ADDI SC, SC, 139
    STORE RV0, SB, SC
    MOD RV0, S2, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op197_t115'
; Computing new bank gep_new_bank_f22_op197_t115 = GP + bank_delta
    ADD T0, GP, S0
; Result bank tracked as Dynamic(gep_new_bank_f22_op197_t115)
    ADD S2, RV0, R0
; GEP: Setting bank info for t115 to Dynamic("gep_new_bank_f22_op197_t115")
; Load instruction: t116 = load FatPtr(FatPointer { addr: Temp(115), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(115), bank: Mixed })
; LOAD: Pointer t115 has bank info: Dynamic("gep_new_bank_f22_op197_t115")
    LI S0, -1
    BEQ T0, S0, L_bc_9d559b2a_use_global
    LI T6, -2
    BEQ T0, T6, L_bc_9d559b2a_use_stack
    ADD S3, T0, R0
    BEQ R0, R0, L_bc_9d559b2a_done
L_bc_9d559b2a_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_9d559b2a_done
L_bc_9d559b2a_use_stack:
    ADD S3, SB, R0
L_bc_9d559b2a_done:
; LOAD: Using bank register S3 for load
    LOAD RV0, S3, S2
    LI S0, -1
    BEQ T5, S0, L_bc_d4d044c5_use_global
    LI T6, -2
    BEQ T5, T6, L_bc_d4d044c5_use_stack
    ADD T7, T5, R0
    BEQ R0, R0, L_bc_d4d044c5_done
L_bc_d4d044c5_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_d4d044c5_done
L_bc_d4d044c5_use_stack:
    ADD T7, SB, R0
L_bc_d4d044c5_done:
    STORE RV0, T7, S1
; Load instruction: t117 = load Global("sp")
; Canonicalizing global variable: sp
    LI S0, 100
; LOAD: Pointer load_src_ptr_f22_op207_t117 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, S0
; Spill load_f22_op180_t110_addr to slot 102
    ADD SC, FP, R0
    ADDI SC, SC, 140
    STORE T1, SB, SC
    LI T1, 2
    SUB T6, T6, T1
    LI T1, 0
; Spill t111 to slot 103
    ADD SC, FP, R0
    ADDI SC, SC, 141
    STORE T2, SB, SC
; Spill load_f22_op189_t113_addr to slot 104
    ADD SC, FP, R0
    ADDI SC, SC, 142
    STORE T3, SB, SC
    ADD T3, T6, R0
    ADD T2, T1, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t114 to slot 105
    ADD SC, FP, R0
    ADDI SC, SC, 143
    STORE T4, SB, SC
; Spill t115 to slot 106
    ADD SC, FP, R0
    ADDI SC, SC, 144
    STORE S2, SB, SC
; Spill gep_new_bank_f22_op197_t115 to slot 107
    ADD SC, FP, R0
    ADDI SC, SC, 145
    STORE T0, SB, SC
    LI S2, -1
    DIV T4, T2, S2
; Spill gep_new_bank_f22_op197_t115 to slot 108
    ADD SC, FP, R0
    ADDI SC, SC, 146
    STORE T0, SB, SC
    MOD T0, T2, S2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op214_t119'
; Spill load_f22_op198_t116_resolved_bank_22_f22_op199 to slot 109
    ADD SC, FP, R0
    ADDI SC, SC, 147
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f22_op214_t119 = GP + bank_delta
    ADD S3, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f22_op214_t119)
    ADD T2, T0, R0
; GEP: Setting bank info for t119 to Dynamic("gep_new_bank_f22_op214_t119")
; Load instruction: t120 = load FatPtr(FatPointer { addr: Temp(105), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(105), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op215_t120 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t105 at FP+22
    ADD T3, FP, R0
    ADDI T3, T3, 22
    LOAD T4, SB, T3
    LI T0, -1
    BEQ S3, T0, L_bc_82bd97d4_use_global
    LI T1, -2
    BEQ S3, T1, L_bc_82bd97d4_use_stack
    ADD S2, S3, R0
    BEQ R0, R0, L_bc_82bd97d4_done
L_bc_82bd97d4_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_82bd97d4_done
L_bc_82bd97d4_use_stack:
    ADD S2, SB, R0
L_bc_82bd97d4_done:
    STORE T4, S2, T2
    BEQ R0, R0, L_exec_prim_108
; Unconditional branch to L_exec_prim_108
; Invalidated 1 alloca bindings
L_exec_prim_108:
    BEQ R0, R0, L_exec_prim_105
; Unconditional branch to L_exec_prim_105
L_exec_prim_104:
; Load instruction: t121 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op221_t121 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    LOAD T1, SB, T0
    ADDI T3, T0, 1
; Spill t116 to slot 110
    ADD SC, FP, R0
    ADDI SC, SC, 148
    STORE RV0, SB, SC
    LOAD RV0, SB, T3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T3, 2421
; Spill t112 to slot 111
    ADD SC, FP, R0
    ADDI SC, SC, 149
    STORE S1, SB, SC
; Spill gep_new_bank_f22_op188_t112 to slot 112
    ADD SC, FP, R0
    ADDI SC, SC, 150
    STORE T5, SB, SC
    LI S1, -1
; Spill live registers before call
; Spill gep_new_bank_f22_op188_t112 to slot 113
    ADD SC, FP, R0
    ADDI SC, SC, 151
    STORE T5, SB, SC
; Spill store_f22_op202_resolved_bank_22_f22_op203 to slot 114
    ADD SC, FP, R0
    ADDI SC, SC, 152
    STORE T7, SB, SC
; Spill load_f22_op206_t117_addr to slot 115
    ADD SC, FP, R0
    ADDI SC, SC, 153
    STORE S0, SB, SC
; Spill t118 to slot 116
    ADD SC, FP, R0
    ADDI SC, SC, 154
    STORE T6, SB, SC
; Spill t120 to slot 117
    ADD SC, FP, R0
    ADDI SC, SC, 155
    STORE T4, SB, SC
; Spill t119 to slot 118
    ADD SC, FP, R0
    ADDI SC, SC, 156
    STORE T2, SB, SC
; Spill gep_new_bank_f22_op214_t119 to slot 119
    ADD SC, FP, R0
    ADDI SC, SC, 157
    STORE S3, SB, SC
; Spill gep_new_bank_f22_op214_t119 to slot 120
    ADD SC, FP, R0
    ADDI SC, SC, 158
    STORE S3, SB, SC
; Spill store_f22_op217_resolved_bank_22_f22_op218 to slot 121
    ADD SC, FP, R0
    ADDI SC, SC, 159
    STORE S2, SB, SC
; Spill t121 to slot 122
    ADD SC, FP, R0
    ADDI SC, SC, 160
    STORE T1, SB, SC
; Spill load_f22_op224_t121_bank_val to slot 123
    ADD SC, FP, R0
    ADDI SC, SC, 161
    STORE RV0, SB, SC
; Spill load_f22_op224_t121_bank_val to slot 124
    ADD SC, FP, R0
    ADDI SC, SC, 162
    STORE RV0, SB, SC
; Spill const_f22_op225_2421 to slot 125
    ADD SC, FP, R0
    ADDI SC, SC, 163
    STORE T3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op226 to slot 126
    ADD SC, FP, R0
    ADDI SC, SC, 164
    STORE S1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T1, R0
    ADD A1, RV0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T3, R0
    ADD A3, S1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t122
    BEQ RV0, R0, L_exec_prim_110
; Branch to L_exec_prim_110 if condition is false
    BEQ R0, R0, L_exec_prim_109
; Unconditional branch to L_exec_prim_109 (condition was true)
L_exec_prim_109:
; Load instruction: t123 = load Global("sp")
; Canonicalizing global variable: sp
    LI T5, 100
; LOAD: Pointer load_src_ptr_f22_op228_t123 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T5
    LI S0, 2
    SLT T6, T7, S0
    LI T4, 1
    SUB T7, T4, T6
    BEQ T7, R0, L_exec_prim_114
; Branch to L_exec_prim_114 if condition is false
    BEQ R0, R0, L_exec_prim_112
; Unconditional branch to L_exec_prim_112 (condition was true)
L_exec_prim_112:
; Load instruction: t125 = load Global("sp")
; Canonicalizing global variable: sp
    LI T2, 100
; LOAD: Pointer load_src_ptr_f22_op233_t125 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T2
    LI S2, 2
    SUB S3, S3, S2
    LI T0, 0
    ADD T3, S3, R0
    ADD T1, T0, T3
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV S1, T1, RV0
    MOD T6, T1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op240_t127'
; Computing new bank gep_new_bank_f22_op240_t127 = GP + bank_delta
    ADD T4, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f22_op240_t127)
    ADD T1, T6, R0
; GEP: Setting bank info for t127 to Dynamic("gep_new_bank_f22_op240_t127")
; Load instruction: t128 = load FatPtr(FatPointer { addr: Temp(127), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(127), bank: Mixed })
; LOAD: Pointer t127 has bank info: Dynamic("gep_new_bank_f22_op240_t127")
    LI T7, -1
    BEQ T4, T7, L_bc_3beefa83_use_global
    LI S2, -2
    BEQ T4, S2, L_bc_3beefa83_use_stack
    ADD S0, T4, R0
    BEQ R0, R0, L_bc_3beefa83_done
L_bc_3beefa83_use_global:
    ADD S0, GP, R0
    BEQ R0, R0, L_bc_3beefa83_done
L_bc_3beefa83_use_stack:
    ADD S0, SB, R0
L_bc_3beefa83_done:
; LOAD: Using bank register S0 for load
    LOAD T3, S0, T1
; Spill live registers before call
; Spill load_f22_op227_t123_addr to slot 127
    ADD SC, FP, R0
    ADDI SC, SC, 165
    STORE T5, SB, SC
; Spill load_f22_op232_t125_addr to slot 128
    ADD SC, FP, R0
    ADDI SC, SC, 166
    STORE T2, SB, SC
; Spill t126 to slot 129
    ADD SC, FP, R0
    ADDI SC, SC, 167
    STORE S3, SB, SC
; Spill t127 to slot 130
    ADD SC, FP, R0
    ADDI SC, SC, 168
    STORE T1, SB, SC
; Spill gep_new_bank_f22_op240_t127 to slot 131
    ADD SC, FP, R0
    ADDI SC, SC, 169
    STORE T4, SB, SC
; Spill gep_new_bank_f22_op240_t127 to slot 132
    ADD SC, FP, R0
    ADDI SC, SC, 170
    STORE T4, SB, SC
; Spill load_f22_op241_t128_resolved_bank_22_f22_op242 to slot 133
    ADD SC, FP, R0
    ADDI SC, SC, 171
    STORE S0, SB, SC
; Spill t128 to slot 134
    ADD SC, FP, R0
    ADDI SC, SC, 172
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_114
; Unconditional branch to L_exec_prim_114
L_exec_prim_114:
    BEQ R0, R0, L_exec_prim_111
; Unconditional branch to L_exec_prim_111
L_exec_prim_110:
; Load instruction: t129 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op245_t129 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S1, FP, R0
    ADDI S1, S1, 1
    LOAD RV0, SB, S1
    ADDI T6, S1, 1
    LOAD T0, SB, T6
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T7, 2426
    LI S2, -1
; Spill live registers before call
; Spill t129 to slot 135
    ADD SC, FP, R0
    ADDI SC, SC, 173
    STORE RV0, SB, SC
; Spill load_f22_op248_t129_bank_val to slot 136
    ADD SC, FP, R0
    ADDI SC, SC, 174
    STORE T0, SB, SC
; Spill load_f22_op248_t129_bank_val to slot 137
    ADD SC, FP, R0
    ADDI SC, SC, 175
    STORE T0, SB, SC
; Spill const_f22_op249_2426 to slot 138
    ADD SC, FP, R0
    ADDI SC, SC, 176
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op250 to slot 139
    ADD SC, FP, R0
    ADDI SC, SC, 177
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, T0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T7, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t130
    BEQ RV0, R0, L_exec_prim_116
; Branch to L_exec_prim_116 if condition is false
    BEQ R0, R0, L_exec_prim_115
; Unconditional branch to L_exec_prim_115 (condition was true)
L_exec_prim_115:
; Load instruction: t131 = load Global("sp")
; Canonicalizing global variable: sp
    LI T5, 100
; LOAD: Pointer load_src_ptr_f22_op252_t131 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T5
    LI S3, 3
    SLT T1, T2, S3
    LI T4, 1
    SUB T2, T4, T1
    BEQ T2, R0, L_exec_prim_120
; Branch to L_exec_prim_120 if condition is false
    BEQ R0, R0, L_exec_prim_118
; Unconditional branch to L_exec_prim_118 (condition was true)
L_exec_prim_118:
    ADD S0, FP, R0
    ADDI S0, S0, 23
; Load instruction: t134 = load Global("sp")
; Canonicalizing global variable: sp
    LI T3, 100
; LOAD: Pointer load_src_ptr_f22_op257_t134 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T3
    LI S1, 3
    SUB T6, T6, S1
    LI T0, 0
    ADD S2, T6, R0
    ADD T7, T0, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV RV0, T7, T1
    MOD T4, T7, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op264_t136'
; Computing new bank gep_new_bank_f22_op264_t136 = GP + bank_delta
    ADD S3, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f22_op264_t136)
    ADD T7, T4, R0
; GEP: Setting bank info for t136 to Dynamic("gep_new_bank_f22_op264_t136")
; Load instruction: t137 = load FatPtr(FatPointer { addr: Temp(136), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(136), bank: Mixed })
; LOAD: Pointer t136 has bank info: Dynamic("gep_new_bank_f22_op264_t136")
    LI S1, -1
    BEQ S3, S1, L_bc_76627f38_use_global
    LI S2, -2
    BEQ S3, S2, L_bc_76627f38_use_stack
    ADD T2, S3, R0
    BEQ R0, R0, L_bc_76627f38_done
L_bc_76627f38_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_76627f38_done
L_bc_76627f38_use_stack:
    ADD T2, SB, R0
L_bc_76627f38_done:
; LOAD: Using bank register T2 for load
    LOAD RV0, T2, T7
    STORE RV0, SB, S0
; Load instruction: t138 = load Global("sp")
; Canonicalizing global variable: sp
    LI T1, 100
; LOAD: Pointer load_src_ptr_f22_op271_t138 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T1
    LI T0, 3
    SUB T4, T4, T0
    LI S1, 0
    ADD T0, T4, R0
    ADD S2, S1, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f22_op251_t131_addr to slot 140
    ADD SC, FP, R0
    ADDI SC, SC, 178
    STORE T5, SB, SC
; Spill load_f22_op256_t134_addr to slot 141
    ADD SC, FP, R0
    ADDI SC, SC, 179
    STORE T3, SB, SC
    LI T3, -1
    DIV T5, S2, T3
; Spill t135 to slot 142
    ADD SC, FP, R0
    ADDI SC, SC, 180
    STORE T6, SB, SC
    MOD T6, S2, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op278_t140'
; Spill t136 to slot 143
    ADD SC, FP, R0
    ADDI SC, SC, 181
    STORE T7, SB, SC
; Spill gep_new_bank_f22_op264_t136 to slot 144
    ADD SC, FP, R0
    ADDI SC, SC, 182
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f22_op278_t140 = GP + bank_delta
    ADD T7, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f22_op278_t140)
    ADD S2, T6, R0
; GEP: Setting bank info for t140 to Dynamic("gep_new_bank_f22_op278_t140")
; Load instruction: t141 = load Global("sp")
; Canonicalizing global variable: sp
    LI T0, 100
; LOAD: Pointer load_src_ptr_f22_op280_t141 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T0
    LI T3, 2
    SUB T5, T5, T3
    LI T6, 0
    ADD T3, T5, R0
    ADD S1, T6, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill gep_new_bank_f22_op264_t136 to slot 145
    ADD SC, FP, R0
    ADDI SC, SC, 183
    STORE S3, SB, SC
; Spill load_f22_op265_t137_resolved_bank_22_f22_op266 to slot 146
    ADD SC, FP, R0
    ADDI SC, SC, 184
    STORE T2, SB, SC
    LI T2, -1
    DIV S3, S1, T2
; Spill t137 to slot 147
    ADD SC, FP, R0
    ADDI SC, SC, 185
    STORE RV0, SB, SC
    MOD RV0, S1, T2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op287_t143'
; Computing new bank gep_new_bank_f22_op287_t143 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f22_op287_t143)
    ADD S1, RV0, R0
; GEP: Setting bank info for t143 to Dynamic("gep_new_bank_f22_op287_t143")
; Load instruction: t144 = load FatPtr(FatPointer { addr: Temp(143), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(143), bank: Mixed })
; LOAD: Pointer t143 has bank info: Dynamic("gep_new_bank_f22_op287_t143")
    LI S3, -1
    BEQ S0, S3, L_bc_aa0492b0_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_aa0492b0_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_aa0492b0_done
L_bc_aa0492b0_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_aa0492b0_done
L_bc_aa0492b0_use_stack:
    ADD T3, SB, R0
L_bc_aa0492b0_done:
; LOAD: Using bank register T3 for load
    LOAD RV0, T3, S1
    LI S3, -1
    BEQ T7, S3, L_bc_b765c6b9_use_global
    LI T2, -2
    BEQ T7, T2, L_bc_b765c6b9_use_stack
    ADD T6, T7, R0
    BEQ R0, R0, L_bc_b765c6b9_done
L_bc_b765c6b9_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_b765c6b9_done
L_bc_b765c6b9_use_stack:
    ADD T6, SB, R0
L_bc_b765c6b9_done:
    STORE RV0, T6, S2
; Load instruction: t145 = load Global("sp")
; Canonicalizing global variable: sp
    LI S3, 100
; LOAD: Pointer load_src_ptr_f22_op297_t145 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, S3
; Spill load_f22_op270_t138_addr to slot 148
    ADD SC, FP, R0
    ADDI SC, SC, 186
    STORE T1, SB, SC
    LI T1, 2
    SUB T2, T2, T1
    LI T1, 0
; Spill t139 to slot 149
    ADD SC, FP, R0
    ADDI SC, SC, 187
    STORE T4, SB, SC
; Spill load_f22_op279_t141_addr to slot 150
    ADD SC, FP, R0
    ADDI SC, SC, 188
    STORE T0, SB, SC
    ADD T0, T2, R0
    ADD T4, T1, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t142 to slot 151
    ADD SC, FP, R0
    ADDI SC, SC, 189
    STORE T5, SB, SC
; Spill t143 to slot 152
    ADD SC, FP, R0
    ADDI SC, SC, 190
    STORE S1, SB, SC
; Spill gep_new_bank_f22_op287_t143 to slot 153
    ADD SC, FP, R0
    ADDI SC, SC, 191
    STORE S0, SB, SC
    LI S1, -1
    DIV T5, T4, S1
; Spill gep_new_bank_f22_op287_t143 to slot 154
    ADD SC, FP, R0
    ADDI SC, SC, 192
    STORE S0, SB, SC
    MOD S0, T4, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op304_t147'
; Spill load_f22_op288_t144_resolved_bank_22_f22_op289 to slot 155
    ADD SC, FP, R0
    ADDI SC, SC, 193
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f22_op304_t147 = GP + bank_delta
    ADD T3, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f22_op304_t147)
    ADD T4, S0, R0
; GEP: Setting bank info for t147 to Dynamic("gep_new_bank_f22_op304_t147")
; Load instruction: t148 = load Global("sp")
; Canonicalizing global variable: sp
    LI T0, 100
; LOAD: Pointer load_src_ptr_f22_op306_t148 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T0
    LI S1, 1
    SUB T5, T5, S1
    LI S0, 0
    ADD S1, T5, R0
    ADD T1, S0, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t144 to slot 156
    ADD SC, FP, R0
    ADDI SC, SC, 194
    STORE RV0, SB, SC
; Spill t140 to slot 157
    ADD SC, FP, R0
    ADDI SC, SC, 195
    STORE S2, SB, SC
; Spill gep_new_bank_f22_op278_t140 to slot 158
    ADD SC, FP, R0
    ADDI SC, SC, 196
    STORE T7, SB, SC
    LI S2, -1
    DIV RV0, T1, S2
; Spill gep_new_bank_f22_op278_t140 to slot 159
    ADD SC, FP, R0
    ADDI SC, SC, 197
    STORE T7, SB, SC
    MOD T7, T1, S2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op313_t150'
; Spill store_f22_op292_resolved_bank_22_f22_op293 to slot 160
    ADD SC, FP, R0
    ADDI SC, SC, 198
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f22_op313_t150 = GP + bank_delta
    ADD T6, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f22_op313_t150)
    ADD T1, T7, R0
; GEP: Setting bank info for t150 to Dynamic("gep_new_bank_f22_op313_t150")
; Load instruction: t151 = load FatPtr(FatPointer { addr: Temp(150), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(150), bank: Mixed })
; LOAD: Pointer t150 has bank info: Dynamic("gep_new_bank_f22_op313_t150")
    LI RV0, -1
    BEQ T6, RV0, L_bc_74e2e39b_use_global
    LI S2, -2
    BEQ T6, S2, L_bc_74e2e39b_use_stack
    ADD S1, T6, R0
    BEQ R0, R0, L_bc_74e2e39b_done
L_bc_74e2e39b_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_74e2e39b_done
L_bc_74e2e39b_use_stack:
    ADD S1, SB, R0
L_bc_74e2e39b_done:
; LOAD: Using bank register S1 for load
    LOAD T7, S1, T1
    LI RV0, -1
    BEQ T3, RV0, L_bc_e74ce059_use_global
    LI S2, -2
    BEQ T3, S2, L_bc_e74ce059_use_stack
    ADD S0, T3, R0
    BEQ R0, R0, L_bc_e74ce059_done
L_bc_e74ce059_use_global:
    ADD S0, GP, R0
    BEQ R0, R0, L_bc_e74ce059_done
L_bc_e74ce059_use_stack:
    ADD S0, SB, R0
L_bc_e74ce059_done:
    STORE T7, S0, T4
; Load instruction: t152 = load Global("sp")
; Canonicalizing global variable: sp
    LI RV0, 100
; LOAD: Pointer load_src_ptr_f22_op323_t152 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, RV0
; Spill load_f22_op296_t145_addr to slot 161
    ADD SC, FP, R0
    ADDI SC, SC, 199
    STORE S3, SB, SC
    LI S3, 1
    SUB S2, S2, S3
    LI S3, 0
; Spill t146 to slot 162
    ADD SC, FP, R0
    ADDI SC, SC, 200
    STORE T2, SB, SC
; Spill load_f22_op305_t148_addr to slot 163
    ADD SC, FP, R0
    ADDI SC, SC, 201
    STORE T0, SB, SC
    ADD T0, S2, R0
    ADD T2, S3, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t149 to slot 164
    ADD SC, FP, R0
    ADDI SC, SC, 202
    STORE T5, SB, SC
; Spill t150 to slot 165
    ADD SC, FP, R0
    ADDI SC, SC, 203
    STORE T1, SB, SC
; Spill gep_new_bank_f22_op313_t150 to slot 166
    ADD SC, FP, R0
    ADDI SC, SC, 204
    STORE T6, SB, SC
    LI T1, -1
    DIV T5, T2, T1
; Spill gep_new_bank_f22_op313_t150 to slot 167
    ADD SC, FP, R0
    ADDI SC, SC, 205
    STORE T6, SB, SC
    MOD T6, T2, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op330_t154'
; Spill load_f22_op314_t151_resolved_bank_22_f22_op315 to slot 168
    ADD SC, FP, R0
    ADDI SC, SC, 206
    STORE S1, SB, SC
; Computing new bank gep_new_bank_f22_op330_t154 = GP + bank_delta
    ADD S1, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f22_op330_t154)
    ADD T2, T6, R0
; GEP: Setting bank info for t154 to Dynamic("gep_new_bank_f22_op330_t154")
; Load instruction: t155 = load FatPtr(FatPointer { addr: Temp(133), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(133), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op331_t155 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t133 at FP+23
    ADD T0, FP, R0
    ADDI T0, T0, 23
    LOAD T5, SB, T0
    LI T6, -1
    BEQ S1, T6, L_bc_7f5f70df_use_global
    LI S3, -2
    BEQ S1, S3, L_bc_7f5f70df_use_stack
    ADD T1, S1, R0
    BEQ R0, R0, L_bc_7f5f70df_done
L_bc_7f5f70df_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_7f5f70df_done
L_bc_7f5f70df_use_stack:
    ADD T1, SB, R0
L_bc_7f5f70df_done:
    STORE T5, T1, T2
    BEQ R0, R0, L_exec_prim_120
; Unconditional branch to L_exec_prim_120
; Invalidated 1 alloca bindings
L_exec_prim_120:
    BEQ R0, R0, L_exec_prim_117
; Unconditional branch to L_exec_prim_117
L_exec_prim_116:
; Load instruction: t156 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op337_t156 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD S3, SB, T6
    ADDI T0, T6, 1
; Spill t151 to slot 169
    ADD SC, FP, R0
    ADDI SC, SC, 207
    STORE T7, SB, SC
    LOAD T7, SB, T0
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2430
; Spill t147 to slot 170
    ADD SC, FP, R0
    ADDI SC, SC, 208
    STORE T4, SB, SC
; Spill gep_new_bank_f22_op304_t147 to slot 171
    ADD SC, FP, R0
    ADDI SC, SC, 209
    STORE T3, SB, SC
    LI T4, -1
; Spill live registers before call
; Spill gep_new_bank_f22_op304_t147 to slot 172
    ADD SC, FP, R0
    ADDI SC, SC, 210
    STORE T3, SB, SC
; Spill store_f22_op318_resolved_bank_22_f22_op319 to slot 173
    ADD SC, FP, R0
    ADDI SC, SC, 211
    STORE S0, SB, SC
; Spill load_f22_op322_t152_addr to slot 174
    ADD SC, FP, R0
    ADDI SC, SC, 212
    STORE RV0, SB, SC
; Spill t153 to slot 175
    ADD SC, FP, R0
    ADDI SC, SC, 213
    STORE S2, SB, SC
; Spill t155 to slot 176
    ADD SC, FP, R0
    ADDI SC, SC, 214
    STORE T5, SB, SC
; Spill t154 to slot 177
    ADD SC, FP, R0
    ADDI SC, SC, 215
    STORE T2, SB, SC
; Spill gep_new_bank_f22_op330_t154 to slot 178
    ADD SC, FP, R0
    ADDI SC, SC, 216
    STORE S1, SB, SC
; Spill gep_new_bank_f22_op330_t154 to slot 179
    ADD SC, FP, R0
    ADDI SC, SC, 217
    STORE S1, SB, SC
; Spill store_f22_op333_resolved_bank_22_f22_op334 to slot 180
    ADD SC, FP, R0
    ADDI SC, SC, 218
    STORE T1, SB, SC
; Spill t156 to slot 181
    ADD SC, FP, R0
    ADDI SC, SC, 219
    STORE S3, SB, SC
; Spill load_f22_op340_t156_bank_val to slot 182
    ADD SC, FP, R0
    ADDI SC, SC, 220
    STORE T7, SB, SC
; Spill load_f22_op340_t156_bank_val to slot 183
    ADD SC, FP, R0
    ADDI SC, SC, 221
    STORE T7, SB, SC
; Spill const_f22_op341_2430 to slot 184
    ADD SC, FP, R0
    ADDI SC, SC, 222
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op342 to slot 185
    ADD SC, FP, R0
    ADDI SC, SC, 223
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t157
    BEQ RV0, R0, L_exec_prim_122
; Branch to L_exec_prim_122 if condition is false
    BEQ R0, R0, L_exec_prim_121
; Unconditional branch to L_exec_prim_121 (condition was true)
L_exec_prim_121:
; Load instruction: t158 = load Global("sp")
; Canonicalizing global variable: sp
    LI T3, 100
; LOAD: Pointer load_src_ptr_f22_op344_t158 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S0, GP, T3
    LI S2, 2
    SLT T5, S0, S2
    LI T2, 1
    SUB S0, T2, T5
    BEQ S0, R0, L_exec_prim_126
; Branch to L_exec_prim_126 if condition is false
    BEQ R0, R0, L_exec_prim_124
; Unconditional branch to L_exec_prim_124 (condition was true)
L_exec_prim_124:
; Load instruction: t160 = load Global("sp")
; Canonicalizing global variable: sp
    LI S1, 100
; LOAD: Pointer load_src_ptr_f22_op349_t160 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S1
    LI T6, 2
    SUB T1, T1, T6
    LI S3, 0
    ADD T0, T1, R0
    ADD T7, S3, T0
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV T4, T7, RV0
    MOD T5, T7, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op356_t162'
; Computing new bank gep_new_bank_f22_op356_t162 = GP + bank_delta
    ADD T2, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f22_op356_t162)
    ADD T7, T5, R0
; GEP: Setting bank info for t162 to Dynamic("gep_new_bank_f22_op356_t162")
; Load instruction: t163 = load FatPtr(FatPointer { addr: Temp(162), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(162), bank: Mixed })
; LOAD: Pointer t162 has bank info: Dynamic("gep_new_bank_f22_op356_t162")
    LI S0, -1
    BEQ T2, S0, L_bc_9e6def8b_use_global
    LI T6, -2
    BEQ T2, T6, L_bc_9e6def8b_use_stack
    ADD S2, T2, R0
    BEQ R0, R0, L_bc_9e6def8b_done
L_bc_9e6def8b_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_9e6def8b_done
L_bc_9e6def8b_use_stack:
    ADD S2, SB, R0
L_bc_9e6def8b_done:
; LOAD: Using bank register S2 for load
    LOAD T0, S2, T7
; Spill live registers before call
; Spill load_f22_op343_t158_addr to slot 186
    ADD SC, FP, R0
    ADDI SC, SC, 224
    STORE T3, SB, SC
; Spill load_f22_op348_t160_addr to slot 187
    ADD SC, FP, R0
    ADDI SC, SC, 225
    STORE S1, SB, SC
; Spill t161 to slot 188
    ADD SC, FP, R0
    ADDI SC, SC, 226
    STORE T1, SB, SC
; Spill t162 to slot 189
    ADD SC, FP, R0
    ADDI SC, SC, 227
    STORE T7, SB, SC
; Spill gep_new_bank_f22_op356_t162 to slot 190
    ADD SC, FP, R0
    ADDI SC, SC, 228
    STORE T2, SB, SC
; Spill gep_new_bank_f22_op356_t162 to slot 191
    ADD SC, FP, R0
    ADDI SC, SC, 229
    STORE T2, SB, SC
; Spill load_f22_op357_t163_resolved_bank_22_f22_op358 to slot 192
    ADD SC, FP, R0
    ADDI SC, SC, 230
    STORE S2, SB, SC
; Spill t163 to slot 193
    ADD SC, FP, R0
    ADDI SC, SC, 231
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function push
    CALL push
; Load instruction: t164 = load Global("sp")
; Canonicalizing global variable: sp
    LI T4, 100
; LOAD: Pointer load_src_ptr_f22_op362_t164 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T4
    LI T5, 2
    SUB RV0, RV0, T5
    LI S3, 0
    ADD T6, RV0, R0
    ADD S0, S3, T6
; Runtime bank overflow calculation for dynamic GEP
    LI S1, -1
    DIV T3, S0, S1
    MOD T1, S0, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op369_t166'
; Computing new bank gep_new_bank_f22_op369_t166 = GP + bank_delta
    ADD T7, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f22_op369_t166)
    ADD S0, T1, R0
; GEP: Setting bank info for t166 to Dynamic("gep_new_bank_f22_op369_t166")
; Load instruction: t167 = load FatPtr(FatPointer { addr: Temp(166), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(166), bank: Mixed })
; LOAD: Pointer t166 has bank info: Dynamic("gep_new_bank_f22_op369_t166")
    LI S2, -1
    BEQ T7, S2, L_bc_97af5a86_use_global
    LI T0, -2
    BEQ T7, T0, L_bc_97af5a86_use_stack
    ADD T2, T7, R0
    BEQ R0, R0, L_bc_97af5a86_done
L_bc_97af5a86_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_97af5a86_done
L_bc_97af5a86_use_stack:
    ADD T2, SB, R0
L_bc_97af5a86_done:
; LOAD: Using bank register T2 for load
    LOAD T5, T2, S0
; Spill live registers before call
; Spill load_f22_op361_t164_addr to slot 194
    ADD SC, FP, R0
    ADDI SC, SC, 232
    STORE T4, SB, SC
; Spill t165 to slot 195
    ADD SC, FP, R0
    ADDI SC, SC, 233
    STORE RV0, SB, SC
; Spill t166 to slot 196
    ADD SC, FP, R0
    ADDI SC, SC, 234
    STORE S0, SB, SC
; Spill gep_new_bank_f22_op369_t166 to slot 197
    ADD SC, FP, R0
    ADDI SC, SC, 235
    STORE T7, SB, SC
; Spill gep_new_bank_f22_op369_t166 to slot 198
    ADD SC, FP, R0
    ADDI SC, SC, 236
    STORE T7, SB, SC
; Spill load_f22_op370_t167_resolved_bank_22_f22_op371 to slot 199
    ADD SC, FP, R0
    ADDI SC, SC, 237
    STORE T2, SB, SC
; Spill t167 to slot 200
    ADD SC, FP, R0
    ADDI SC, SC, 238
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_126
; Unconditional branch to L_exec_prim_126
L_exec_prim_126:
    BEQ R0, R0, L_exec_prim_123
; Unconditional branch to L_exec_prim_123
L_exec_prim_122:
; Load instruction: t168 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op374_t168 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD T3, SB, T6
    ADDI S1, T6, 1
    LOAD T1, SB, S1
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2435
    LI S2, -1
; Spill live registers before call
; Spill t168 to slot 201
    ADD SC, FP, R0
    ADDI SC, SC, 239
    STORE T3, SB, SC
; Spill load_f22_op377_t168_bank_val to slot 202
    ADD SC, FP, R0
    ADDI SC, SC, 240
    STORE T1, SB, SC
; Spill load_f22_op377_t168_bank_val to slot 203
    ADD SC, FP, R0
    ADDI SC, SC, 241
    STORE T1, SB, SC
; Spill const_f22_op378_2435 to slot 204
    ADD SC, FP, R0
    ADDI SC, SC, 242
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op379 to slot 205
    ADD SC, FP, R0
    ADDI SC, SC, 243
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t169
    BEQ RV0, R0, L_exec_prim_128
; Branch to L_exec_prim_128 if condition is false
    BEQ R0, R0, L_exec_prim_127
; Unconditional branch to L_exec_prim_127 (condition was true)
L_exec_prim_127:
    BEQ R0, R0, L_exec_prim_129
; Unconditional branch to L_exec_prim_129
L_exec_prim_128:
; Load instruction: t170 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op380_t170 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    LOAD T4, SB, T0
    ADDI S0, T0, 1
    LOAD T7, SB, S0
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2438
    LI T5, -1
; Spill live registers before call
; Spill t170 to slot 206
    ADD SC, FP, R0
    ADDI SC, SC, 244
    STORE T4, SB, SC
; Spill load_f22_op383_t170_bank_val to slot 207
    ADD SC, FP, R0
    ADDI SC, SC, 245
    STORE T7, SB, SC
; Spill load_f22_op383_t170_bank_val to slot 208
    ADD SC, FP, R0
    ADDI SC, SC, 246
    STORE T7, SB, SC
; Spill const_f22_op384_2438 to slot 209
    ADD SC, FP, R0
    ADDI SC, SC, 247
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op385 to slot 210
    ADD SC, FP, R0
    ADDI SC, SC, 248
    STORE T5, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T4, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T5, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t171
    BEQ RV0, R0, L_exec_prim_131
; Branch to L_exec_prim_131 if condition is false
    BEQ R0, R0, L_exec_prim_130
; Unconditional branch to L_exec_prim_130 (condition was true)
L_exec_prim_130:
    BEQ R0, R0, L_exec_prim_132
; Unconditional branch to L_exec_prim_132
L_exec_prim_131:
; Load instruction: t172 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op386_t172 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S1, FP, R0
    ADDI S1, S1, 1
    LOAD T6, SB, S1
    ADDI T3, S1, 1
    LOAD T1, SB, T3
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2443
    LI S2, -1
; Spill live registers before call
; Spill t172 to slot 211
    ADD SC, FP, R0
    ADDI SC, SC, 249
    STORE T6, SB, SC
; Spill load_f22_op389_t172_bank_val to slot 212
    ADD SC, FP, R0
    ADDI SC, SC, 250
    STORE T1, SB, SC
; Spill load_f22_op389_t172_bank_val to slot 213
    ADD SC, FP, R0
    ADDI SC, SC, 251
    STORE T1, SB, SC
; Spill const_f22_op390_2443 to slot 214
    ADD SC, FP, R0
    ADDI SC, SC, 252
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op391 to slot 215
    ADD SC, FP, R0
    ADDI SC, SC, 253
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T6, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t173
    BEQ RV0, R0, L_exec_prim_134
; Branch to L_exec_prim_134 if condition is false
    BEQ R0, R0, L_exec_prim_133
; Unconditional branch to L_exec_prim_133 (condition was true)
L_exec_prim_133:
    BEQ R0, R0, L_exec_prim_135
; Unconditional branch to L_exec_prim_135
L_exec_prim_134:
; Load instruction: t174 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op392_t174 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S0, FP, R0
    ADDI S0, S0, 1
    LOAD T0, SB, S0
    ADDI T4, S0, 1
    LOAD T7, SB, T4
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2448
    LI T5, -1
; Spill live registers before call
; Spill t174 to slot 216
    ADD SC, FP, R0
    ADDI SC, SC, 254
    STORE T0, SB, SC
; Spill load_f22_op395_t174_bank_val to slot 217
    ADD SC, FP, R0
    ADDI SC, SC, 255
    STORE T7, SB, SC
; Spill load_f22_op395_t174_bank_val to slot 218
    ADD SC, FP, R0
    ADDI SC, SC, 256
    STORE T7, SB, SC
; Spill const_f22_op396_2448 to slot 219
    ADD SC, FP, R0
    ADDI SC, SC, 257
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op397 to slot 220
    ADD SC, FP, R0
    ADDI SC, SC, 258
    STORE T5, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T5, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t175
    BEQ RV0, R0, L_exec_prim_137
; Branch to L_exec_prim_137 if condition is false
    BEQ R0, R0, L_exec_prim_136
; Unconditional branch to L_exec_prim_136 (condition was true)
L_exec_prim_136:
    BEQ R0, R0, L_exec_prim_138
; Unconditional branch to L_exec_prim_138
L_exec_prim_137:
; Load instruction: t176 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op398_t176 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    LOAD S1, SB, T3
    ADDI T6, T3, 1
    LOAD T1, SB, T6
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2454
    LI S2, -1
; Spill live registers before call
; Spill t176 to slot 221
    ADD SC, FP, R0
    ADDI SC, SC, 259
    STORE S1, SB, SC
; Spill load_f22_op401_t176_bank_val to slot 222
    ADD SC, FP, R0
    ADDI SC, SC, 260
    STORE T1, SB, SC
; Spill load_f22_op401_t176_bank_val to slot 223
    ADD SC, FP, R0
    ADDI SC, SC, 261
    STORE T1, SB, SC
; Spill const_f22_op402_2454 to slot 224
    ADD SC, FP, R0
    ADDI SC, SC, 262
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op403 to slot 225
    ADD SC, FP, R0
    ADDI SC, SC, 263
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t177
    BEQ RV0, R0, L_exec_prim_140
; Branch to L_exec_prim_140 if condition is false
    BEQ R0, R0, L_exec_prim_139
; Unconditional branch to L_exec_prim_139 (condition was true)
L_exec_prim_139:
    BEQ R0, R0, L_exec_prim_141
; Unconditional branch to L_exec_prim_141
L_exec_prim_140:
; Load instruction: t178 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op404_t178 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T4, FP, R0
    ADDI T4, T4, 1
    LOAD S0, SB, T4
    ADDI T0, T4, 1
    LOAD T7, SB, T0
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2460
    LI T5, -1
; Spill live registers before call
; Spill t178 to slot 226
    ADD SC, FP, R0
    ADDI SC, SC, 264
    STORE S0, SB, SC
; Spill load_f22_op407_t178_bank_val to slot 227
    ADD SC, FP, R0
    ADDI SC, SC, 265
    STORE T7, SB, SC
; Spill load_f22_op407_t178_bank_val to slot 228
    ADD SC, FP, R0
    ADDI SC, SC, 266
    STORE T7, SB, SC
; Spill const_f22_op408_2460 to slot 229
    ADD SC, FP, R0
    ADDI SC, SC, 267
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op409 to slot 230
    ADD SC, FP, R0
    ADDI SC, SC, 268
    STORE T5, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, T5, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t179
    BEQ RV0, R0, L_exec_prim_143
; Branch to L_exec_prim_143 if condition is false
    BEQ R0, R0, L_exec_prim_142
; Unconditional branch to L_exec_prim_142 (condition was true)
L_exec_prim_142:
    BEQ R0, R0, L_exec_prim_144
; Unconditional branch to L_exec_prim_144
L_exec_prim_143:
; Load instruction: t180 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op410_t180 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD T3, SB, T6
    ADDI S1, T6, 1
    LOAD T1, SB, S1
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2467
    LI S2, -1
; Spill live registers before call
; Spill t180 to slot 231
    ADD SC, FP, R0
    ADDI SC, SC, 269
    STORE T3, SB, SC
; Spill load_f22_op413_t180_bank_val to slot 232
    ADD SC, FP, R0
    ADDI SC, SC, 270
    STORE T1, SB, SC
; Spill load_f22_op413_t180_bank_val to slot 233
    ADD SC, FP, R0
    ADDI SC, SC, 271
    STORE T1, SB, SC
; Spill const_f22_op414_2467 to slot 234
    ADD SC, FP, R0
    ADDI SC, SC, 272
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op415 to slot 235
    ADD SC, FP, R0
    ADDI SC, SC, 273
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t181
    BEQ RV0, R0, L_exec_prim_146
; Branch to L_exec_prim_146 if condition is false
    BEQ R0, R0, L_exec_prim_145
; Unconditional branch to L_exec_prim_145 (condition was true)
L_exec_prim_145:
    ADD T0, FP, R0
    ADDI T0, T0, 24
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t183
; Recompute alloca t182 at FP+24
    ADD T4, FP, R0
    ADDI T4, T4, 24
    STORE RV0, SB, T4
    ADD S0, FP, R0
    ADDI S0, S0, 25
; Spill live registers before call
; Spill t183 to slot 236
    ADD SC, FP, R0
    ADDI SC, SC, 274
    STORE RV0, SB, SC
; Call function pop
    CALL pop
; Scalar return value for t185
; Recompute alloca t184 at FP+25
    ADD T7, FP, R0
    ADDI T7, T7, 25
    STORE RV0, SB, T7
; Load instruction: t186 = load FatPtr(FatPointer { addr: Temp(182), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(182), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op418_t186 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t182 at FP+24
    ADD T2, FP, R0
    ADDI T2, T2, 24
    LOAD T5, SB, T2
; Spill live registers before call
; Spill t185 to slot 237
    ADD SC, FP, R0
    ADDI SC, SC, 275
    STORE RV0, SB, SC
; Spill t186 to slot 238
    ADD SC, FP, R0
    ADDI SC, SC, 276
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function rpush
    CALL rpush
; Load instruction: t187 = load FatPtr(FatPointer { addr: Temp(184), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(184), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op420_t187 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t184 at FP+25
    ADD S1, FP, R0
    ADDI S1, S1, 25
    LOAD T6, SB, S1
; Spill live registers before call
; Spill t187 to slot 239
    ADD SC, FP, R0
    ADDI SC, SC, 277
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function rpush
    CALL rpush
    BEQ R0, R0, L_exec_prim_147
; Unconditional branch to L_exec_prim_147
L_exec_prim_146:
; Load instruction: t188 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op422_t188 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    LOAD T1, SB, T3
    ADDI S3, T3, 1
    LOAD S2, SB, S3
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2470
    LI T4, -1
; Spill live registers before call
; Spill t188 to slot 240
    ADD SC, FP, R0
    ADDI SC, SC, 278
    STORE T1, SB, SC
; Spill load_f22_op425_t188_bank_val to slot 241
    ADD SC, FP, R0
    ADDI SC, SC, 279
    STORE S2, SB, SC
; Spill load_f22_op425_t188_bank_val to slot 242
    ADD SC, FP, R0
    ADDI SC, SC, 280
    STORE S2, SB, SC
; Spill const_f22_op426_2470 to slot 243
    ADD SC, FP, R0
    ADDI SC, SC, 281
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op427 to slot 244
    ADD SC, FP, R0
    ADDI SC, SC, 282
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T1, R0
    ADD A1, S2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t189
    BEQ RV0, R0, L_exec_prim_149
; Branch to L_exec_prim_149 if condition is false
    BEQ R0, R0, L_exec_prim_148
; Unconditional branch to L_exec_prim_148 (condition was true)
L_exec_prim_148:
    ADD S0, FP, R0
    ADDI S0, S0, 26
; Spill live registers before call
; Call function rpop
    CALL rpop
; Scalar return value for t191
; Recompute alloca t190 at FP+26
    ADD T7, FP, R0
    ADDI T7, T7, 26
    STORE RV0, SB, T7
    ADD T2, FP, R0
    ADDI T2, T2, 27
; Spill live registers before call
; Spill t191 to slot 245
    ADD SC, FP, R0
    ADDI SC, SC, 283
    STORE RV0, SB, SC
; Call function rpop
    CALL rpop
; Scalar return value for t193
; Recompute alloca t192 at FP+27
    ADD T5, FP, R0
    ADDI T5, T5, 27
    STORE RV0, SB, T5
; Load instruction: t194 = load FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op430_t194 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t190 at FP+26
    ADD S1, FP, R0
    ADDI S1, S1, 26
    LOAD T6, SB, S1
    LI S3, 0
    ADD T6, T6, S3
; Load instruction: t196 = load FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op432_t196 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S1
    LI T1, 1
    ADD T3, T3, T1
    STORE T3, SB, S1
; Load instruction: t198 = load FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op435_t198 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S1
; Load instruction: t199 = load FatPtr(FatPointer { addr: Temp(192), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(192), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op437_t199 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, T5
    SLT S2, S2, T0
    BEQ S2, R0, L_exec_prim_153
; Branch to L_exec_prim_153 if condition is false
    BEQ R0, R0, L_exec_prim_151
; Unconditional branch to L_exec_prim_151 (condition was true)
; Invalidated 2 alloca bindings
L_exec_prim_151:
; Load instruction: t201 = load FatPtr(FatPointer { addr: Temp(192), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(192), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op439_t201 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t192 at FP+27
    ADD T4, FP, R0
    ADDI T4, T4, 27
    LOAD S0, SB, T4
; Spill live registers before call
; Spill t193 to slot 246
    ADD SC, FP, R0
    ADDI SC, SC, 284
    STORE RV0, SB, SC
; Spill t195 to slot 247
    ADD SC, FP, R0
    ADDI SC, SC, 285
    STORE T6, SB, SC
; Spill t197 to slot 248
    ADD SC, FP, R0
    ADDI SC, SC, 286
    STORE T3, SB, SC
; Spill t201 to slot 249
    ADD SC, FP, R0
    ADDI SC, SC, 287
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function rpush
    CALL rpush
; Load instruction: t202 = load FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(190), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op441_t202 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t190 at FP+26
    ADD T7, FP, R0
    ADDI T7, T7, 26
    LOAD T2, SB, T7
; Spill live registers before call
; Spill t202 to slot 250
    ADD SC, FP, R0
    ADDI SC, SC, 288
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function rpush
    CALL rpush
    BEQ R0, R0, L_exec_prim_153
; Unconditional branch to L_exec_prim_153
L_exec_prim_153:
    BEQ R0, R0, L_exec_prim_150
; Unconditional branch to L_exec_prim_150
L_exec_prim_149:
; Load instruction: t203 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op443_t203 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD T1, SB, S3
    ADDI T0, S3, 1
    LOAD S2, SB, T0
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T5, 2475
    LI S1, -1
; Spill live registers before call
; Spill t203 to slot 251
    ADD SC, FP, R0
    ADDI SC, SC, 289
    STORE T1, SB, SC
; Spill load_f22_op446_t203_bank_val to slot 252
    ADD SC, FP, R0
    ADDI SC, SC, 290
    STORE S2, SB, SC
; Spill load_f22_op446_t203_bank_val to slot 253
    ADD SC, FP, R0
    ADDI SC, SC, 291
    STORE S2, SB, SC
; Spill const_f22_op447_2475 to slot 254
    ADD SC, FP, R0
    ADDI SC, SC, 292
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op448 to slot 255
    ADD SC, FP, R0
    ADDI SC, SC, 293
    STORE S1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T1, R0
    ADD A1, S2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, S1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t204
    BEQ RV0, R0, L_exec_prim_155
; Branch to L_exec_prim_155 if condition is false
    BEQ R0, R0, L_exec_prim_154
; Unconditional branch to L_exec_prim_154 (condition was true)
L_exec_prim_154:
; Load instruction: t205 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI T6, 151
; LOAD: Pointer load_src_ptr_f22_op450_t205 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T6
    LI T4, 1
    SLT S0, T3, T4
    LI T7, 1
    SUB T3, T7, S0
    BEQ T3, R0, L_exec_prim_159
; Branch to L_exec_prim_159 if condition is false
    BEQ R0, R0, L_exec_prim_157
; Unconditional branch to L_exec_prim_157 (condition was true)
L_exec_prim_157:
; Load instruction: t207 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI T2, 151
; LOAD: Pointer load_src_ptr_f22_op455_t207 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T2
    LI S3, 1
    SUB T0, T0, S3
    LI T1, 101
    ADD T5, T0, R0
    ADD S2, T1, T5
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV S1, S2, RV0
    MOD S0, S2, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op462_t209'
; Computing new bank gep_new_bank_f22_op462_t209 = GP + bank_delta
    ADD T7, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f22_op462_t209)
    ADD S2, S0, R0
; GEP: Setting bank info for t209 to Dynamic("gep_new_bank_f22_op462_t209")
; Load instruction: t210 = load FatPtr(FatPointer { addr: Temp(209), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(209), bank: Mixed })
; LOAD: Pointer t209 has bank info: Dynamic("gep_new_bank_f22_op462_t209")
    LI T3, -1
    BEQ T7, T3, L_bc_8d253f04_use_global
    LI S3, -2
    BEQ T7, S3, L_bc_8d253f04_use_stack
    ADD T4, T7, R0
    BEQ R0, R0, L_bc_8d253f04_done
L_bc_8d253f04_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_8d253f04_done
L_bc_8d253f04_use_stack:
    ADD T4, SB, R0
L_bc_8d253f04_done:
; LOAD: Using bank register T4 for load
    LOAD T5, T4, S2
; Spill live registers before call
; Spill load_f22_op449_t205_addr to slot 256
    ADD SC, FP, R0
    ADDI SC, SC, 294
    STORE T6, SB, SC
; Spill load_f22_op454_t207_addr to slot 257
    ADD SC, FP, R0
    ADDI SC, SC, 295
    STORE T2, SB, SC
; Spill t208 to slot 258
    ADD SC, FP, R0
    ADDI SC, SC, 296
    STORE T0, SB, SC
; Spill t209 to slot 259
    ADD SC, FP, R0
    ADDI SC, SC, 297
    STORE S2, SB, SC
; Spill gep_new_bank_f22_op462_t209 to slot 260
    ADD SC, FP, R0
    ADDI SC, SC, 298
    STORE T7, SB, SC
; Spill gep_new_bank_f22_op462_t209 to slot 261
    ADD SC, FP, R0
    ADDI SC, SC, 299
    STORE T7, SB, SC
; Spill load_f22_op463_t210_resolved_bank_22_f22_op464 to slot 262
    ADD SC, FP, R0
    ADDI SC, SC, 300
    STORE T4, SB, SC
; Spill t210 to slot 263
    ADD SC, FP, R0
    ADDI SC, SC, 301
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_159
; Unconditional branch to L_exec_prim_159
L_exec_prim_159:
    BEQ R0, R0, L_exec_prim_156
; Unconditional branch to L_exec_prim_156
L_exec_prim_155:
; Load instruction: t211 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op467_t211 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S1, FP, R0
    ADDI S1, S1, 1
    LOAD RV0, SB, S1
    ADDI S0, S1, 1
    LOAD T1, SB, S0
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T3, 2477
    LI S3, -1
; Spill live registers before call
; Spill t211 to slot 264
    ADD SC, FP, R0
    ADDI SC, SC, 302
    STORE RV0, SB, SC
; Spill load_f22_op470_t211_bank_val to slot 265
    ADD SC, FP, R0
    ADDI SC, SC, 303
    STORE T1, SB, SC
; Spill load_f22_op470_t211_bank_val to slot 266
    ADD SC, FP, R0
    ADDI SC, SC, 304
    STORE T1, SB, SC
; Spill const_f22_op471_2477 to slot 267
    ADD SC, FP, R0
    ADDI SC, SC, 305
    STORE T3, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op472 to slot 268
    ADD SC, FP, R0
    ADDI SC, SC, 306
    STORE S3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T3, R0
    ADD A3, S3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t212
    BEQ RV0, R0, L_exec_prim_161
; Branch to L_exec_prim_161 if condition is false
    BEQ R0, R0, L_exec_prim_160
; Unconditional branch to L_exec_prim_160 (condition was true)
L_exec_prim_160:
; Load instruction: t213 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI T6, 151
; LOAD: Pointer load_src_ptr_f22_op474_t213 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T6
    LI T0, 3
    SLT S2, T2, T0
    LI T7, 1
    SUB T2, T7, S2
    BEQ T2, R0, L_exec_prim_165
; Branch to L_exec_prim_165 if condition is false
    BEQ R0, R0, L_exec_prim_163
; Unconditional branch to L_exec_prim_163 (condition was true)
L_exec_prim_163:
; Load instruction: t215 = load Global("rsp")
; Canonicalizing global variable: rsp
    LI T4, 151
; LOAD: Pointer load_src_ptr_f22_op479_t215 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T4
    LI S0, 3
    SUB T5, T5, S0
    LI S1, 101
    ADD T3, T5, R0
    ADD T1, S1, T3
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV S3, T1, RV0
    MOD S2, T1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op486_t217'
; Computing new bank gep_new_bank_f22_op486_t217 = GP + bank_delta
    ADD T7, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f22_op486_t217)
    ADD T1, S2, R0
; GEP: Setting bank info for t217 to Dynamic("gep_new_bank_f22_op486_t217")
; Load instruction: t218 = load FatPtr(FatPointer { addr: Temp(217), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(217), bank: Mixed })
; LOAD: Pointer t217 has bank info: Dynamic("gep_new_bank_f22_op486_t217")
    LI T2, -1
    BEQ T7, T2, L_bc_277e6c9e_use_global
    LI S0, -2
    BEQ T7, S0, L_bc_277e6c9e_use_stack
    ADD T0, T7, R0
    BEQ R0, R0, L_bc_277e6c9e_done
L_bc_277e6c9e_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_277e6c9e_done
L_bc_277e6c9e_use_stack:
    ADD T0, SB, R0
L_bc_277e6c9e_done:
; LOAD: Using bank register T0 for load
    LOAD T3, T0, T1
; Spill live registers before call
; Spill load_f22_op473_t213_addr to slot 269
    ADD SC, FP, R0
    ADDI SC, SC, 307
    STORE T6, SB, SC
; Spill load_f22_op478_t215_addr to slot 270
    ADD SC, FP, R0
    ADDI SC, SC, 308
    STORE T4, SB, SC
; Spill t216 to slot 271
    ADD SC, FP, R0
    ADDI SC, SC, 309
    STORE T5, SB, SC
; Spill t217 to slot 272
    ADD SC, FP, R0
    ADDI SC, SC, 310
    STORE T1, SB, SC
; Spill gep_new_bank_f22_op486_t217 to slot 273
    ADD SC, FP, R0
    ADDI SC, SC, 311
    STORE T7, SB, SC
; Spill gep_new_bank_f22_op486_t217 to slot 274
    ADD SC, FP, R0
    ADDI SC, SC, 312
    STORE T7, SB, SC
; Spill load_f22_op487_t218_resolved_bank_22_f22_op488 to slot 275
    ADD SC, FP, R0
    ADDI SC, SC, 313
    STORE T0, SB, SC
; Spill t218 to slot 276
    ADD SC, FP, R0
    ADDI SC, SC, 314
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function push
    CALL push
    BEQ R0, R0, L_exec_prim_165
; Unconditional branch to L_exec_prim_165
L_exec_prim_165:
    BEQ R0, R0, L_exec_prim_162
; Unconditional branch to L_exec_prim_162
L_exec_prim_161:
; Load instruction: t219 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op491_t219 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD RV0, SB, S3
    ADDI S2, S3, 1
    LOAD S1, SB, S2
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T2, 2479
    LI S0, -1
; Spill live registers before call
; Spill t219 to slot 277
    ADD SC, FP, R0
    ADDI SC, SC, 315
    STORE RV0, SB, SC
; Spill load_f22_op494_t219_bank_val to slot 278
    ADD SC, FP, R0
    ADDI SC, SC, 316
    STORE S1, SB, SC
; Spill load_f22_op494_t219_bank_val to slot 279
    ADD SC, FP, R0
    ADDI SC, SC, 317
    STORE S1, SB, SC
; Spill const_f22_op495_2479 to slot 280
    ADD SC, FP, R0
    ADDI SC, SC, 318
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op496 to slot 281
    ADD SC, FP, R0
    ADDI SC, SC, 319
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, S1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T2, R0
    ADD A3, S0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t220
    BEQ RV0, R0, L_exec_prim_167
; Branch to L_exec_prim_167 if condition is false
    BEQ R0, R0, L_exec_prim_166
; Unconditional branch to L_exec_prim_166 (condition was true)
L_exec_prim_166:
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t221
; Spill live registers before call
; Spill t221 to slot 282
    ADD SC, FP, R0
    ADDI SC, SC, 320
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function print_num
    CALL print_num
    LI T6, 32
; Spill live registers before call
; Spill const_f22_op497_32 to slot 283
    ADD SC, FP, R0
    ADDI SC, SC, 321
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_exec_prim_168
; Unconditional branch to L_exec_prim_168
L_exec_prim_167:
; Load instruction: t222 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op498_t222 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T4, FP, R0
    ADDI T4, T4, 1
    LOAD T5, SB, T4
    ADDI T1, T4, 1
    LOAD T7, SB, T1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2481
    LI T3, -1
; Spill live registers before call
; Spill t222 to slot 284
    ADD SC, FP, R0
    ADDI SC, SC, 322
    STORE T5, SB, SC
; Spill load_f22_op501_t222_bank_val to slot 285
    ADD SC, FP, R0
    ADDI SC, SC, 323
    STORE T7, SB, SC
; Spill load_f22_op501_t222_bank_val to slot 286
    ADD SC, FP, R0
    ADDI SC, SC, 324
    STORE T7, SB, SC
; Spill const_f22_op502_2481 to slot 287
    ADD SC, FP, R0
    ADDI SC, SC, 325
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op503 to slot 288
    ADD SC, FP, R0
    ADDI SC, SC, 326
    STORE T3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, T3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t223
    BEQ RV0, R0, L_exec_prim_170
; Branch to L_exec_prim_170 if condition is false
    BEQ R0, R0, L_exec_prim_169
; Unconditional branch to L_exec_prim_169 (condition was true)
L_exec_prim_169:
    LI S2, 10
; Spill live registers before call
; Spill const_f22_op504_10 to slot 289
    ADD SC, FP, R0
    ADDI SC, SC, 327
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_exec_prim_171
; Unconditional branch to L_exec_prim_171
L_exec_prim_170:
; Load instruction: t224 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op505_t224 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD S1, SB, S3
    ADDI T2, S3, 1
    LOAD S0, SB, T2
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T6, 2484
    LI T1, -1
; Spill live registers before call
; Spill t224 to slot 290
    ADD SC, FP, R0
    ADDI SC, SC, 328
    STORE S1, SB, SC
; Spill load_f22_op508_t224_bank_val to slot 291
    ADD SC, FP, R0
    ADDI SC, SC, 329
    STORE S0, SB, SC
; Spill load_f22_op508_t224_bank_val to slot 292
    ADD SC, FP, R0
    ADDI SC, SC, 330
    STORE S0, SB, SC
; Spill const_f22_op509_2484 to slot 293
    ADD SC, FP, R0
    ADDI SC, SC, 331
    STORE T6, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op510 to slot 294
    ADD SC, FP, R0
    ADDI SC, SC, 332
    STORE T1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, S0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T6, R0
    ADD A3, T1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t225
    BEQ RV0, R0, L_exec_prim_173
; Branch to L_exec_prim_173 if condition is false
    BEQ R0, R0, L_exec_prim_172
; Unconditional branch to L_exec_prim_172 (condition was true)
L_exec_prim_172:
    LI T4, 2487
    LI T5, -1
; Spill live registers before call
; Spill const_f22_op511_2487 to slot 295
    ADD SC, FP, R0
    ADDI SC, SC, 333
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op512 to slot 296
    ADD SC, FP, R0
    ADDI SC, SC, 334
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T4, R0
    ADD A1, T5, R0
; Call function puts
    CALL puts
; Scalar return value for t226
    ADD T7, FP, R0
    ADDI T7, T7, 28
    LI T0, 0
    STORE T0, SB, T7
    BEQ R0, R0, L_exec_prim_175
; Unconditional branch to L_exec_prim_175
; Invalidated 1 alloca bindings
L_exec_prim_175:
; Load instruction: t228 = load FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op515_t228 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t227 at FP+28
    ADD T3, FP, R0
    ADDI T3, T3, 28
    LOAD S2, SB, T3
; Load instruction: t229 = load Global("sp")
; Canonicalizing global variable: sp
    LI T2, 100
; LOAD: Pointer load_src_ptr_f22_op518_t229 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T2
    SLT S2, S2, S3
    BEQ S2, R0, L_exec_prim_178
; Branch to L_exec_prim_178 if condition is false
    BEQ R0, R0, L_exec_prim_176
; Unconditional branch to L_exec_prim_176 (condition was true)
; Invalidated 1 alloca bindings
L_exec_prim_176:
    LI S1, 32
; Spill live registers before call
; Spill t226 to slot 297
    ADD SC, FP, R0
    ADDI SC, SC, 335
    STORE RV0, SB, SC
; Spill load_f22_op517_t229_addr to slot 298
    ADD SC, FP, R0
    ADDI SC, SC, 336
    STORE T2, SB, SC
; Spill const_f22_op520_32 to slot 299
    ADD SC, FP, R0
    ADDI SC, SC, 337
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Load instruction: t231 = load FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op521_t231 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t227 at FP+28
    ADD S0, FP, R0
    ADDI S0, S0, 28
    LOAD T6, SB, S0
    LI T1, 0
    ADD T5, T6, R0
    ADD T4, T1, T5
; Runtime bank overflow calculation for dynamic GEP
    LI T7, -1
    DIV T0, T4, T7
    MOD S3, T4, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f22_op528_t232'
; Computing new bank gep_new_bank_f22_op528_t232 = GP + bank_delta
    ADD S2, GP, T0
; Result bank tracked as Dynamic(gep_new_bank_f22_op528_t232)
    ADD T4, S3, R0
; GEP: Setting bank info for t232 to Dynamic("gep_new_bank_f22_op528_t232")
; Load instruction: t233 = load FatPtr(FatPointer { addr: Temp(232), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(232), bank: Mixed })
; LOAD: Pointer t232 has bank info: Dynamic("gep_new_bank_f22_op528_t232")
    LI RV0, -1
    BEQ S2, RV0, L_bc_7f59b2de_use_global
    LI T2, -2
    BEQ S2, T2, L_bc_7f59b2de_use_stack
    ADD T3, S2, R0
    BEQ R0, R0, L_bc_7f59b2de_done
L_bc_7f59b2de_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_7f59b2de_done
L_bc_7f59b2de_use_stack:
    ADD T3, SB, R0
L_bc_7f59b2de_done:
; LOAD: Using bank register T3 for load
    LOAD S1, T3, T4
; Spill live registers before call
; Spill t231 to slot 300
    ADD SC, FP, R0
    ADDI SC, SC, 338
    STORE T6, SB, SC
; Spill t232 to slot 301
    ADD SC, FP, R0
    ADDI SC, SC, 339
    STORE T4, SB, SC
; Spill gep_new_bank_f22_op528_t232 to slot 302
    ADD SC, FP, R0
    ADDI SC, SC, 340
    STORE S2, SB, SC
; Spill gep_new_bank_f22_op528_t232 to slot 303
    ADD SC, FP, R0
    ADDI SC, SC, 341
    STORE S2, SB, SC
; Spill load_f22_op529_t233_resolved_bank_22_f22_op530 to slot 304
    ADD SC, FP, R0
    ADDI SC, SC, 342
    STORE T3, SB, SC
; Spill t233 to slot 305
    ADD SC, FP, R0
    ADDI SC, SC, 343
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function print_num
    CALL print_num
    BEQ R0, R0, L_exec_prim_177
; Unconditional branch to L_exec_prim_177
L_exec_prim_177:
; Load instruction: t234 = load FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op533_t234 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t227 at FP+28
    ADD T5, FP, R0
    ADDI T5, T5, 28
    LOAD T0, SB, T5
    LI T7, 0
    ADD T0, T0, T7
; Load instruction: t236 = load FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(227), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op535_t236 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, T5
    LI T1, 1
    ADD S3, S3, T1
    STORE S3, SB, T5
    BEQ R0, R0, L_exec_prim_175
; Unconditional branch to L_exec_prim_175
; Invalidated 1 alloca bindings
L_exec_prim_178:
    LI RV0, 10
; Spill live registers before call
; Spill t235 to slot 306
    ADD SC, FP, R0
    ADDI SC, SC, 344
    STORE T0, SB, SC
; Spill t237 to slot 307
    ADD SC, FP, R0
    ADDI SC, SC, 345
    STORE S3, SB, SC
; Spill const_f22_op538_10 to slot 308
    ADD SC, FP, R0
    ADDI SC, SC, 346
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_exec_prim_174
; Unconditional branch to L_exec_prim_174
L_exec_prim_173:
; Load instruction: t238 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op539_t238 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD T2, FP, R0
    ADDI T2, T2, 1
    LOAD S0, SB, T2
    ADDI T6, T2, 1
    LOAD T4, SB, T6
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S2, 2494
    LI T3, -1
; Spill live registers before call
; Spill t238 to slot 309
    ADD SC, FP, R0
    ADDI SC, SC, 347
    STORE S0, SB, SC
; Spill load_f22_op542_t238_bank_val to slot 310
    ADD SC, FP, R0
    ADDI SC, SC, 348
    STORE T4, SB, SC
; Spill load_f22_op542_t238_bank_val to slot 311
    ADD SC, FP, R0
    ADDI SC, SC, 349
    STORE T4, SB, SC
; Spill const_f22_op543_2494 to slot 312
    ADD SC, FP, R0
    ADDI SC, SC, 350
    STORE S2, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op544 to slot 313
    ADD SC, FP, R0
    ADDI SC, SC, 351
    STORE T3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T4, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S2, R0
    ADD A3, T3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t239
    BEQ RV0, R0, L_exec_prim_180
; Branch to L_exec_prim_180 if condition is false
    BEQ R0, R0, L_exec_prim_179
; Unconditional branch to L_exec_prim_179 (condition was true)
L_exec_prim_179:
    LI S1, 2500
    LI T7, -1
; Spill live registers before call
; Spill const_f22_op545_2500 to slot 314
    ADD SC, FP, R0
    ADDI SC, SC, 352
    STORE S1, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op546 to slot 315
    ADD SC, FP, R0
    ADDI SC, SC, 353
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T7, R0
; Call function puts
    CALL puts
; Scalar return value for t240
    ADD T1, FP, R0
    ADDI T1, T1, 29
    LI T5, 0
    STORE T5, SB, T1
    BEQ R0, R0, L_exec_prim_182
; Unconditional branch to L_exec_prim_182
; Invalidated 1 alloca bindings
L_exec_prim_182:
; Load instruction: t242 = load FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op549_t242 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t241 at FP+29
    ADD T0, FP, R0
    ADDI T0, T0, 29
    LOAD S3, SB, T0
; Load instruction: t243 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f22_op552_t243 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T6
    SLT S3, S3, T2
    BEQ S3, R0, L_exec_prim_185
; Branch to L_exec_prim_185 if condition is false
    BEQ R0, R0, L_exec_prim_183
; Unconditional branch to L_exec_prim_183 (condition was true)
; Invalidated 1 alloca bindings
L_exec_prim_183:
    LI S0, 32
; Spill live registers before call
; Spill t240 to slot 316
    ADD SC, FP, R0
    ADDI SC, SC, 354
    STORE RV0, SB, SC
; Spill load_f22_op551_t243_addr to slot 317
    ADD SC, FP, R0
    ADDI SC, SC, 355
    STORE T6, SB, SC
; Spill const_f22_op554_32 to slot 318
    ADD SC, FP, R0
    ADDI SC, SC, 356
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
; Load instruction: t245 = load FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op555_t245 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t241 at FP+29
    ADD T4, FP, R0
    ADDI T4, T4, 29
    LOAD S2, SB, T4
; Spill live registers before call
; Spill t245 to slot 319
    ADD SC, FP, R0
    ADDI SC, SC, 357
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t246
; Spill live registers before call
; Spill t246 to slot 320
    ADD SC, FP, R0
    ADDI SC, SC, 358
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, RV1, R0
; Call function puts
    CALL puts
; Scalar return value for t247
    BEQ R0, R0, L_exec_prim_184
; Unconditional branch to L_exec_prim_184
L_exec_prim_184:
; Load instruction: t248 = load FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op557_t248 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t241 at FP+29
    ADD T3, FP, R0
    ADDI T3, T3, 29
    LOAD S1, SB, T3
    LI T7, 0
    ADD S1, S1, T7
; Load instruction: t250 = load FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(241), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op559_t250 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, T3
    LI T1, 1
    ADD T5, T5, T1
    STORE T5, SB, T3
    BEQ R0, R0, L_exec_prim_182
; Unconditional branch to L_exec_prim_182
; Invalidated 1 alloca bindings
L_exec_prim_185:
    LI T2, 10
; Spill live registers before call
; Spill t247 to slot 321
    ADD SC, FP, R0
    ADDI SC, SC, 359
    STORE RV0, SB, SC
; Spill t249 to slot 322
    ADD SC, FP, R0
    ADDI SC, SC, 360
    STORE S1, SB, SC
; Spill t251 to slot 323
    ADD SC, FP, R0
    ADDI SC, SC, 361
    STORE T5, SB, SC
; Spill const_f22_op562_10 to slot 324
    ADD SC, FP, R0
    ADDI SC, SC, 362
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_exec_prim_181
; Unconditional branch to L_exec_prim_181
L_exec_prim_180:
; Load instruction: t252 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f22_op563_t252 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t2 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD T0, SB, S3
    ADDI T6, S3, 1
    LOAD S0, SB, T6
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T4, 2507
    LI S2, -1
; Spill live registers before call
; Spill t252 to slot 325
    ADD SC, FP, R0
    ADDI SC, SC, 363
    STORE T0, SB, SC
; Spill load_f22_op566_t252_bank_val to slot 326
    ADD SC, FP, R0
    ADDI SC, SC, 364
    STORE S0, SB, SC
; Spill load_f22_op566_t252_bank_val to slot 327
    ADD SC, FP, R0
    ADDI SC, SC, 365
    STORE S0, SB, SC
; Spill const_f22_op567_2507 to slot 328
    ADD SC, FP, R0
    ADDI SC, SC, 366
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_22_f22_op568 to slot 329
    ADD SC, FP, R0
    ADDI SC, SC, 367
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, S0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t253
    BEQ RV0, R0, L_exec_prim_188
; Branch to L_exec_prim_188 if condition is false
    BEQ R0, R0, L_exec_prim_186
; Unconditional branch to L_exec_prim_186 (condition was true)
L_exec_prim_186:
    LI T7, 0
    LI T1, 2355
    STORE T7, GP, T1
    BEQ R0, R0, L_exec_prim_188
; Unconditional branch to L_exec_prim_188
L_exec_prim_188:
    BEQ R0, R0, L_exec_prim_181
; Unconditional branch to L_exec_prim_181
L_exec_prim_181:
    BEQ R0, R0, L_exec_prim_174
; Unconditional branch to L_exec_prim_174
L_exec_prim_174:
    BEQ R0, R0, L_exec_prim_171
; Unconditional branch to L_exec_prim_171
L_exec_prim_171:
    BEQ R0, R0, L_exec_prim_168
; Unconditional branch to L_exec_prim_168
L_exec_prim_168:
    BEQ R0, R0, L_exec_prim_162
; Unconditional branch to L_exec_prim_162
L_exec_prim_162:
    BEQ R0, R0, L_exec_prim_156
; Unconditional branch to L_exec_prim_156
L_exec_prim_156:
    BEQ R0, R0, L_exec_prim_150
; Unconditional branch to L_exec_prim_150
L_exec_prim_150:
    BEQ R0, R0, L_exec_prim_147
; Unconditional branch to L_exec_prim_147
L_exec_prim_147:
    BEQ R0, R0, L_exec_prim_144
; Unconditional branch to L_exec_prim_144
L_exec_prim_144:
    BEQ R0, R0, L_exec_prim_141
; Unconditional branch to L_exec_prim_141
L_exec_prim_141:
    BEQ R0, R0, L_exec_prim_138
; Unconditional branch to L_exec_prim_138
L_exec_prim_138:
    BEQ R0, R0, L_exec_prim_135
; Unconditional branch to L_exec_prim_135
L_exec_prim_135:
    BEQ R0, R0, L_exec_prim_132
; Unconditional branch to L_exec_prim_132
L_exec_prim_132:
    BEQ R0, R0, L_exec_prim_129
; Unconditional branch to L_exec_prim_129
L_exec_prim_129:
    BEQ R0, R0, L_exec_prim_123
; Unconditional branch to L_exec_prim_123
L_exec_prim_123:
    BEQ R0, R0, L_exec_prim_117
; Unconditional branch to L_exec_prim_117
L_exec_prim_117:
    BEQ R0, R0, L_exec_prim_111
; Unconditional branch to L_exec_prim_111
L_exec_prim_111:
    BEQ R0, R0, L_exec_prim_105
; Unconditional branch to L_exec_prim_105
L_exec_prim_105:
    BEQ R0, R0, L_exec_prim_102
; Unconditional branch to L_exec_prim_102
L_exec_prim_102:
    BEQ R0, R0, L_exec_prim_96
; Unconditional branch to L_exec_prim_96
L_exec_prim_96:
    BEQ R0, R0, L_exec_prim_90
; Unconditional branch to L_exec_prim_90
L_exec_prim_90:
    BEQ R0, R0, L_exec_prim_84
; Unconditional branch to L_exec_prim_84
L_exec_prim_84:
    BEQ R0, R0, L_exec_prim_78
; Unconditional branch to L_exec_prim_78
L_exec_prim_78:
    BEQ R0, R0, L_exec_prim_72
; Unconditional branch to L_exec_prim_72
L_exec_prim_72:
    BEQ R0, R0, L_exec_prim_66
; Unconditional branch to L_exec_prim_66
L_exec_prim_66:
    BEQ R0, R0, L_exec_prim_63
; Unconditional branch to L_exec_prim_63
L_exec_prim_63:
    BEQ R0, R0, L_exec_prim_60
; Unconditional branch to L_exec_prim_60
L_exec_prim_60:
    BEQ R0, R0, L_exec_prim_57
; Unconditional branch to L_exec_prim_57
L_exec_prim_57:
; Jump to epilogue
    BEQ R0, R0, L_exec_prim_99999
L_exec_prim_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
find_matching:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 17 slots for locals
    ADDI SP, SP, 17
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 1 from A1
    ADD S2, A1, R0
; Load param 1 bank from A2
; Load param 2 from FP-7
    ADDI SC, FP, -7
    LOAD S1, SB, SC
; Load param 2 bank from FP-8
    ADDI SC, FP, -8
    LOAD S0, SB, SC
L_find_matching_189:
    ADD T7, FP, R0
    STORE S3, SB, T7
    ADD T6, FP, R0
    ADDI T6, T6, 1
    STORE S2, SB, T6
    ADDI T5, T6, 1
    STORE A2, SB, T5
    ADD T4, FP, R0
    ADDI T4, T4, 3
    STORE S1, SB, T4
    ADDI T3, T4, 1
    STORE S0, SB, T3
    ADD T2, FP, R0
    ADDI T2, T2, 5
    LI T1, 1
    STORE T1, SB, T2
    ADD T0, FP, R0
    ADDI T0, T0, 6
; Load instruction: t8 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op15_t8 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, T7
    LI T3, 1
    ADD T5, T5, T3
    STORE T5, SB, T0
    BEQ R0, R0, L_find_matching_190
; Unconditional branch to L_find_matching_190
; Invalidated 5 alloca bindings
L_find_matching_190:
; Load instruction: t10 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op18_t10 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+6
    ADD T1, FP, R0
    ADDI T1, T1, 6
    LOAD T3, SB, T1
; Load instruction: t11 = load Global("here")
; Canonicalizing global variable: here
    LI T0, 2353
; LOAD: Pointer load_src_ptr_f24_op21_t11 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T0
    SLT T3, T3, T2
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op23_t13 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+5
    ADD T4, FP, R0
    ADDI T4, T4, 5
    LOAD T6, SB, T4
    LI T7, 0
    SLT T6, T7, T6
    AND T3, T3, T6
    BEQ T3, R0, L_find_matching_192
; Branch to L_find_matching_192 if condition is false
    BEQ R0, R0, L_find_matching_191
; Unconditional branch to L_find_matching_191 (condition was true)
; Invalidated 2 alloca bindings
L_find_matching_191:
; Load instruction: t16 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op25_t16 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+6
    ADD T2, FP, R0
    ADDI T2, T2, 6
    LOAD T7, SB, T2
    LI T6, 1853
    ADD T1, T7, R0
    ADD T3, T6, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill param_bank_f24_op4_2 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S0, SB, SC
    LI S0, -1
    DIV T4, T3, S0
; Spill t0 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S3, SB, SC
    MOD S3, T3, S0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f24_op32_t17'
; Spill t1 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE S2, SB, SC
; Computing new bank gep_new_bank_f24_op32_t17 = GP + bank_delta
    ADD S2, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f24_op32_t17)
    ADD T3, S3, R0
; GEP: Setting bank info for t17 to Dynamic("gep_new_bank_f24_op32_t17")
; Load instruction: t18 = load FatPtr(FatPointer { addr: Temp(17), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(17), bank: Mixed })
; LOAD: Pointer t17 has bank info: Dynamic("gep_new_bank_f24_op32_t17")
    LI T4, -1
    BEQ S2, T4, L_bc_a84d150b_use_global
    LI S0, -2
    BEQ S2, S0, L_bc_a84d150b_use_stack
    ADD T1, S2, R0
    BEQ R0, R0, L_bc_a84d150b_done
L_bc_a84d150b_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_a84d150b_done
L_bc_a84d150b_use_stack:
    ADD T1, SB, R0
L_bc_a84d150b_done:
; LOAD: Using bank register T1 for load
    LOAD S3, T1, T3
    LI T6, 0
    SLT T4, S3, T6
    LI S0, 1
    SUB S3, S0, T4
; Load instruction: t20 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op39_t20 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, T2
    LI S0, 1853
; Spill t2 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE S1, SB, SC
    ADD S1, T4, R0
    ADD T6, S0, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t9 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T5, SB, SC
; Spill load_f24_op20_t11_addr to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T0, SB, SC
    LI T0, -1
    DIV T5, T6, T0
; Spill t16 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T7, SB, SC
    MOD T7, T6, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f24_op46_t21'
; Spill t17 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T3, SB, SC
; Spill gep_new_bank_f24_op32_t17 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S2, SB, SC
; Computing new bank gep_new_bank_f24_op46_t21 = GP + bank_delta
    ADD T3, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f24_op46_t21)
    ADD T6, T7, R0
; GEP: Setting bank info for t21 to Dynamic("gep_new_bank_f24_op46_t21")
; Load instruction: t22 = load FatPtr(FatPointer { addr: Temp(21), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(21), bank: Mixed })
; LOAD: Pointer t21 has bank info: Dynamic("gep_new_bank_f24_op46_t21")
    LI T5, -1
    BEQ T3, T5, L_bc_37b12404_use_global
    LI T0, -2
    BEQ T3, T0, L_bc_37b12404_use_stack
    ADD S1, T3, R0
    BEQ R0, R0, L_bc_37b12404_done
L_bc_37b12404_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_37b12404_done
L_bc_37b12404_use_stack:
    ADD S1, SB, R0
L_bc_37b12404_done:
; LOAD: Using bank register S1 for load
    LOAD T7, S1, T6
; Load instruction: t23 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S0, 1852
; LOAD: Pointer load_src_ptr_f24_op52_t23 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, S0
    SLT T7, T7, T5
    AND S3, S3, T7
    BEQ S3, R0, L_find_matching_195
; Branch to L_find_matching_195 if condition is false
    BEQ R0, R0, L_find_matching_193
; Unconditional branch to L_find_matching_193 (condition was true)
; Invalidated 1 alloca bindings
L_find_matching_193:
    ADD T0, FP, R0
    ADDI T0, T0, 7
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op54_t27 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+6
    ADD T5, FP, R0
    ADDI T5, T5, 6
    LOAD T7, SB, T5
    LI S3, 1853
; Spill gep_new_bank_f24_op32_t17 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S2, SB, SC
    ADD S2, T7, R0
    ADD T2, S3, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f24_op33_t18_resolved_bank_24_f24_op34 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T1, SB, SC
; Spill t20 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T4, SB, SC
    LI T4, -1
    DIV T1, T2, T4
; Spill t21 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T6, SB, SC
; Spill gep_new_bank_f24_op46_t21 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T3, SB, SC
    MOD T6, T2, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f24_op61_t28'
; Spill gep_new_bank_f24_op46_t21 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f24_op61_t28 = GP + bank_delta
    ADD T3, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f24_op61_t28)
    ADD T2, T6, R0
; GEP: Setting bank info for t28 to Dynamic("gep_new_bank_f24_op61_t28")
; Load instruction: t29 = load FatPtr(FatPointer { addr: Temp(28), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(28), bank: Mixed })
; LOAD: Pointer t28 has bank info: Dynamic("gep_new_bank_f24_op61_t28")
    LI T1, -1
    BEQ T3, T1, L_bc_90796ec4_use_global
    LI T4, -2
    BEQ T3, T4, L_bc_90796ec4_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_90796ec4_done
L_bc_90796ec4_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_90796ec4_done
L_bc_90796ec4_use_stack:
    ADD S2, SB, R0
L_bc_90796ec4_done:
; LOAD: Using bank register S2 for load
    LOAD T6, S2, T2
; Spill live registers before call
; Spill load_f24_op47_t22_resolved_bank_24_f24_op48 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE S1, SB, SC
; Spill load_f24_op51_t23_addr to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE S0, SB, SC
; Spill t27 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T7, SB, SC
; Spill t28 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T2, SB, SC
; Spill gep_new_bank_f24_op61_t28 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE T3, SB, SC
; Spill gep_new_bank_f24_op61_t28 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T3, SB, SC
; Spill load_f24_op62_t29_resolved_bank_24_f24_op63 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S2, SB, SC
; Spill t29 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t30
; Recompute alloca t26 at FP+7
    ADD S3, FP, R0
    ADDI S3, S3, 7
    STORE RV0, SB, S3
    ADDI T1, S3, 1
    STORE RV1, SB, T1
; Load instruction: t31 = load FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op68_t31 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S3
    ADDI S1, S3, 1
    LOAD S0, SB, S1
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op72_t32 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    LOAD T5, SB, T0
    ADDI T7, T0, 1
    LOAD T2, SB, T7
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t30 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE RV0, SB, SC
; Spill t31 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T4, SB, SC
; Spill load_f24_op71_t31_bank_val to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE S0, SB, SC
; Spill load_f24_op71_t31_bank_val to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S0, SB, SC
; Spill t32 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T5, SB, SC
; Spill load_f24_op75_t32_bank_val to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T2, SB, SC
; Spill load_f24_op75_t32_bank_val to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T4, R0
    ADD A1, S0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, T2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t33
    BEQ RV0, R0, L_find_matching_197
; Branch to L_find_matching_197 if condition is false
    BEQ R0, R0, L_find_matching_196
; Unconditional branch to L_find_matching_196 (condition was true)
L_find_matching_196:
; Load instruction: t34 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op76_t34 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+5
    ADD T3, FP, R0
    ADDI T3, T3, 5
    LOAD S2, SB, T3
    LI T6, 0
    ADD S2, S2, T6
; Load instruction: t36 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op78_t36 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, T3
    LI S1, 1
    ADD T1, T1, S1
    STORE T1, SB, T3
    BEQ R0, R0, L_find_matching_198
; Unconditional branch to L_find_matching_198
; Invalidated 1 alloca bindings
L_find_matching_197:
; Load instruction: t38 = load FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op81_t38 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t26 at FP+7
    ADD T7, FP, R0
    ADDI T7, T7, 7
    LOAD S3, SB, T7
    ADDI T0, T7, 1
    LOAD T4, SB, T0
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t39 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op85_t39 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD S0, FP, R0
    ADDI S0, S0, 3
    LOAD T5, SB, S0
    ADDI T2, S0, 1
    LOAD RV0, SB, T2
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t35 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE S2, SB, SC
; Spill t37 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T1, SB, SC
; Spill t38 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE S3, SB, SC
; Spill load_f24_op84_t38_bank_val to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T4, SB, SC
; Spill load_f24_op84_t38_bank_val to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T4, SB, SC
; Spill t39 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T5, SB, SC
; Spill load_f24_op88_t39_bank_val to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE RV0, SB, SC
; Spill load_f24_op88_t39_bank_val to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE RV0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, T4, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, RV0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t40
    BEQ RV0, R0, L_find_matching_201
; Branch to L_find_matching_201 if condition is false
    BEQ R0, R0, L_find_matching_199
; Unconditional branch to L_find_matching_199 (condition was true)
L_find_matching_199:
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op89_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+5
    ADD T6, FP, R0
    ADDI T6, T6, 5
    LOAD S1, SB, T6
    LI T3, 0
    ADD S1, S1, T3
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op91_t43 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, T6
    LI T2, 1
    SUB T0, T0, T2
    STORE T0, SB, T6
; Load instruction: t45 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op94_t45 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T6
    LI T1, 0
    XOR T7, S2, T1
    LI S0, 1
    SLTU S2, T7, S0
    BEQ S2, R0, L_find_matching_204
; Branch to L_find_matching_204 if condition is false
    BEQ R0, R0, L_find_matching_202
; Unconditional branch to L_find_matching_202 (condition was true)
; Invalidated 1 alloca bindings
L_find_matching_202:
; Load instruction: t47 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op98_t47 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+6
    ADD S3, FP, R0
    ADDI S3, S3, 6
    LOAD T4, SB, S3
    MOVE RV0, T4
; Jump to epilogue
    BEQ R0, R0, L_find_matching_99999
    BEQ R0, R0, L_find_matching_204
; Unconditional branch to L_find_matching_204
; Invalidated 1 alloca bindings
L_find_matching_204:
    BEQ R0, R0, L_find_matching_201
; Unconditional branch to L_find_matching_201
L_find_matching_201:
    BEQ R0, R0, L_find_matching_198
; Unconditional branch to L_find_matching_198
L_find_matching_198:
    BEQ R0, R0, L_find_matching_195
; Unconditional branch to L_find_matching_195
L_find_matching_195:
; Load instruction: t48 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op100_t48 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t7 at FP+6
    ADD T5, FP, R0
    ADDI T5, T5, 6
    LOAD RV0, SB, T5
    LI T3, 0
    ADD RV0, RV0, T3
; Load instruction: t50 = load FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(7), bank: Stack })
; LOAD: Pointer load_src_ptr_f24_op102_t50 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, T5
    LI T7, 1
    ADD T2, T2, T7
    STORE T2, SB, T5
    BEQ R0, R0, L_find_matching_190
; Unconditional branch to L_find_matching_190
; Invalidated 1 alloca bindings
L_find_matching_192:
    LI S0, 0
    LI T1, 1
    SUB S0, S0, T1
    MOVE RV0, S0
; Jump to epilogue
    BEQ R0, R0, L_find_matching_99999
L_find_matching_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
find_else:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 14 slots for locals
    ADDI SP, SP, 14
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 1 from A1
    ADD S2, A1, R0
L_find_else_205:
    ADD S1, FP, R0
    STORE S3, SB, S1
    ADD S0, FP, R0
    ADDI S0, S0, 1
    STORE S2, SB, S0
    ADD T7, FP, R0
    ADDI T7, T7, 2
    LI T6, 0
    STORE T6, SB, T7
    ADD T5, FP, R0
    ADDI T5, T5, 3
; Load instruction: t6 = load FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(2), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op6_t6 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S1
    LI T3, 1
    ADD T4, T4, T3
    STORE T4, SB, T5
    BEQ R0, R0, L_find_else_206
; Unconditional branch to L_find_else_206
; Invalidated 4 alloca bindings
L_find_else_206:
; Load instruction: t8 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op9_t8 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD T2, FP, R0
    ADDI T2, T2, 3
    LOAD T1, SB, T2
; Load instruction: t9 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op11_t9 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    LOAD T6, SB, T0
    SLT T1, T1, T6
    BEQ T1, R0, L_find_else_208
; Branch to L_find_else_208 if condition is false
    BEQ R0, R0, L_find_else_207
; Unconditional branch to L_find_else_207 (condition was true)
; Invalidated 2 alloca bindings
L_find_else_207:
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op13_t11 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD T3, FP, R0
    ADDI T3, T3, 3
    LOAD T5, SB, T3
    LI T7, 1853
    ADD S1, T5, R0
    ADD S0, T7, S1
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV T6, S0, T1
    MOD T0, S0, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f26_op20_t12'
; Computing new bank gep_new_bank_f26_op20_t12 = GP + bank_delta
    ADD T2, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f26_op20_t12)
    ADD S0, T0, R0
; GEP: Setting bank info for t12 to Dynamic("gep_new_bank_f26_op20_t12")
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(12), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Mixed })
; LOAD: Pointer t12 has bank info: Dynamic("gep_new_bank_f26_op20_t12")
    LI T6, -1
    BEQ T2, T6, L_bc_be2b7c8a_use_global
    LI T1, -2
    BEQ T2, T1, L_bc_be2b7c8a_use_stack
    ADD S1, T2, R0
    BEQ R0, R0, L_bc_be2b7c8a_done
L_bc_be2b7c8a_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_be2b7c8a_done
L_bc_be2b7c8a_use_stack:
    ADD S1, SB, R0
L_bc_be2b7c8a_done:
; LOAD: Using bank register S1 for load
    LOAD T0, S1, S0
    LI T7, 0
    SLT T6, T0, T7
    LI T1, 1
    SUB T0, T1, T6
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op27_t15 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, T3
    LI T1, 1853
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE S3, SB, SC
    ADD S3, T6, R0
    ADD T7, T1, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S2, SB, SC
; Spill t7 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T4, SB, SC
    LI T4, -1
    DIV S2, T7, T4
; Spill t11 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T5, SB, SC
    MOD T5, T7, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f26_op34_t16'
; Spill t12 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S0, SB, SC
; Spill gep_new_bank_f26_op20_t12 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f26_op34_t16 = GP + bank_delta
    ADD S0, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f26_op34_t16)
    ADD T7, T5, R0
; GEP: Setting bank info for t16 to Dynamic("gep_new_bank_f26_op34_t16")
; Load instruction: t17 = load FatPtr(FatPointer { addr: Temp(16), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(16), bank: Mixed })
; LOAD: Pointer t16 has bank info: Dynamic("gep_new_bank_f26_op34_t16")
    LI S2, -1
    BEQ S0, S2, L_bc_b59aa9cc_use_global
    LI T4, -2
    BEQ S0, T4, L_bc_b59aa9cc_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_b59aa9cc_done
L_bc_b59aa9cc_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_b59aa9cc_done
L_bc_b59aa9cc_use_stack:
    ADD S3, SB, R0
L_bc_b59aa9cc_done:
; LOAD: Using bank register S3 for load
    LOAD T5, S3, T7
; Load instruction: t18 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f26_op40_t18 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T1
    SLT T5, T5, S2
    AND T0, T0, T5
    BEQ T0, R0, L_find_else_211
; Branch to L_find_else_211 if condition is false
    BEQ R0, R0, L_find_else_209
; Unconditional branch to L_find_else_209 (condition was true)
; Invalidated 1 alloca bindings
L_find_else_209:
    ADD T4, FP, R0
    ADDI T4, T4, 4
; Load instruction: t22 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op42_t22 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD S2, FP, R0
    ADDI S2, S2, 3
    LOAD T5, SB, S2
    LI T0, 1853
; Spill gep_new_bank_f26_op20_t12 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T2, SB, SC
    ADD T2, T5, R0
    ADD T3, T0, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f26_op21_t13_resolved_bank_26_f26_op22 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE S1, SB, SC
; Spill t15 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T6, SB, SC
    LI T6, -1
    DIV S1, T3, T6
; Spill t16 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T7, SB, SC
; Spill gep_new_bank_f26_op34_t16 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S0, SB, SC
    MOD T7, T3, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f26_op49_t23'
; Spill gep_new_bank_f26_op34_t16 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S0, SB, SC
; Computing new bank gep_new_bank_f26_op49_t23 = GP + bank_delta
    ADD S0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f26_op49_t23)
    ADD T3, T7, R0
; GEP: Setting bank info for t23 to Dynamic("gep_new_bank_f26_op49_t23")
; Load instruction: t24 = load FatPtr(FatPointer { addr: Temp(23), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(23), bank: Mixed })
; LOAD: Pointer t23 has bank info: Dynamic("gep_new_bank_f26_op49_t23")
    LI S1, -1
    BEQ S0, S1, L_bc_a6eafa74_use_global
    LI T6, -2
    BEQ S0, T6, L_bc_a6eafa74_use_stack
    ADD T2, S0, R0
    BEQ R0, R0, L_bc_a6eafa74_done
L_bc_a6eafa74_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_a6eafa74_done
L_bc_a6eafa74_use_stack:
    ADD T2, SB, R0
L_bc_a6eafa74_done:
; LOAD: Using bank register T2 for load
    LOAD T7, T2, T3
; Spill live registers before call
; Spill load_f26_op35_t17_resolved_bank_26_f26_op36 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S3, SB, SC
; Spill load_f26_op39_t18_addr to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T1, SB, SC
; Spill t22 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T5, SB, SC
; Spill t23 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T3, SB, SC
; Spill gep_new_bank_f26_op49_t23 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE S0, SB, SC
; Spill gep_new_bank_f26_op49_t23 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S0, SB, SC
; Spill load_f26_op50_t24_resolved_bank_26_f26_op51 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T2, SB, SC
; Spill t24 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t25
; Recompute alloca t21 at FP+4
    ADD T0, FP, R0
    ADDI T0, T0, 4
    STORE RV0, SB, T0
    ADDI S1, T0, 1
    STORE RV1, SB, S1
; Load instruction: t26 = load FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op56_t26 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, T0
    ADDI S3, T0, 1
    LOAD T1, SB, S3
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T4, 2511
    LI S2, -1
; Spill live registers before call
; Spill t25 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE RV0, SB, SC
; Spill t26 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T6, SB, SC
; Spill load_f26_op59_t26_bank_val to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE T1, SB, SC
; Spill load_f26_op59_t26_bank_val to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T1, SB, SC
; Spill const_f26_op60_2511 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_26_f26_op61 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T6, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t27
    BEQ RV0, R0, L_find_else_213
; Branch to L_find_else_213 if condition is false
    BEQ R0, R0, L_find_else_212
; Unconditional branch to L_find_else_212 (condition was true)
L_find_else_212:
; Load instruction: t28 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op62_t28 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T5, FP, R0
    ADDI T5, T5, 2
    LOAD T3, SB, T5
    LI S0, 0
    ADD T3, T3, S0
; Load instruction: t30 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op64_t30 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, T5
    LI T7, 1
    ADD T2, T2, T7
    STORE T2, SB, T5
    BEQ R0, R0, L_find_else_214
; Unconditional branch to L_find_else_214
; Invalidated 1 alloca bindings
L_find_else_213:
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op67_t32 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t21 at FP+4
    ADD S1, FP, R0
    ADDI S1, S1, 4
    LOAD S3, SB, S1
    ADDI T0, S1, 1
    LOAD T6, SB, T0
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T1, 2514
    LI T4, -1
; Spill live registers before call
; Spill t29 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T3, SB, SC
; Spill t31 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T2, SB, SC
; Spill t32 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE S3, SB, SC
; Spill load_f26_op70_t32_bank_val to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE T6, SB, SC
; Spill load_f26_op70_t32_bank_val to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T6, SB, SC
; Spill const_f26_op71_2514 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T1, SB, SC
; Spill call_arg_fp_global_tag_26_f26_op72 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, T6, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T1, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t33
    BEQ RV0, R0, L_find_else_216
; Branch to L_find_else_216 if condition is false
    BEQ R0, R0, L_find_else_215
; Unconditional branch to L_find_else_215 (condition was true)
L_find_else_215:
; Load instruction: t34 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op73_t34 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
    LOAD S0, SB, S2
    LI T7, 0
    ADD S0, S0, T7
; Load instruction: t36 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op75_t36 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S2
    LI T0, 1
    SUB T5, T5, T0
    STORE T5, SB, S2
    BEQ R0, R0, L_find_else_217
; Unconditional branch to L_find_else_217
; Invalidated 1 alloca bindings
L_find_else_216:
; Load instruction: t38 = load FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(21), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op78_t38 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t21 at FP+4
    ADD T3, FP, R0
    ADDI T3, T3, 4
    LOAD T2, SB, T3
    ADDI S1, T3, 1
    LOAD S3, SB, S1
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T6, 2519
    LI T1, -1
; Spill live registers before call
; Spill t35 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE S0, SB, SC
; Spill t37 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T5, SB, SC
; Spill t38 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T2, SB, SC
; Spill load_f26_op81_t38_bank_val to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE S3, SB, SC
; Spill load_f26_op81_t38_bank_val to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE S3, SB, SC
; Spill const_f26_op82_2519 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T6, SB, SC
; Spill call_arg_fp_global_tag_26_f26_op83 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, S3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T6, R0
    ADD A3, T1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t39
; Load instruction: t40 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op84_t40 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T4, FP, R0
    ADDI T4, T4, 2
    LOAD T7, SB, T4
    LI T0, 0
    XOR S2, T7, T0
    LI S1, 1
    SLTU T7, S2, S1
    AND RV0, RV0, T7
    BEQ RV0, R0, L_find_else_220
; Branch to L_find_else_220 if condition is false
    BEQ R0, R0, L_find_else_218
; Unconditional branch to L_find_else_218 (condition was true)
; Invalidated 1 alloca bindings
L_find_else_218:
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op88_t43 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD S0, FP, R0
    ADDI S0, S0, 3
    LOAD T5, SB, S0
    MOVE RV0, T5
; Jump to epilogue
    BEQ R0, R0, L_find_else_99999
    BEQ R0, R0, L_find_else_220
; Unconditional branch to L_find_else_220
; Invalidated 1 alloca bindings
L_find_else_220:
    BEQ R0, R0, L_find_else_217
; Unconditional branch to L_find_else_217
L_find_else_217:
    BEQ R0, R0, L_find_else_214
; Unconditional branch to L_find_else_214
L_find_else_214:
    BEQ R0, R0, L_find_else_211
; Unconditional branch to L_find_else_211
L_find_else_211:
; Load instruction: t44 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op90_t44 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+3
    ADD T3, FP, R0
    ADDI T3, T3, 3
    LOAD T2, SB, T3
    LI S3, 0
    ADD T2, T2, S3
; Load instruction: t46 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f26_op92_t46 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, T3
    LI T1, 1
    ADD T6, T6, T1
    STORE T6, SB, T3
    BEQ R0, R0, L_find_else_206
; Unconditional branch to L_find_else_206
; Invalidated 1 alloca bindings
L_find_else_208:
    LI S2, 0
    LI S1, 1
    SUB S2, S2, S1
    MOVE RV0, S2
; Jump to epilogue
    BEQ R0, R0, L_find_else_99999
L_find_else_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
execute:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 22 slots for locals
    ADDI SP, SP, 22
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_execute_221:
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op2_t2 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S2
    LI S0, 0
    SLT S1, S1, S0
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op4_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S2
; Load instruction: t5 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f28_op7_t5 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    SLT T4, T7, T5
    LI T3, 1
    SUB T7, T3, T4
    OR S1, S1, T7
    BEQ S1, R0, L_execute_224
; Branch to L_execute_224 if condition is false
    BEQ R0, R0, L_execute_222
; Unconditional branch to L_execute_222 (condition was true)
; Invalidated 1 alloca bindings
L_execute_222:
; Jump to epilogue
    BEQ R0, R0, L_execute_99999
    BEQ R0, R0, L_execute_224
; Unconditional branch to L_execute_224
L_execute_224:
; Load instruction: t8 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op11_t8 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T2, FP, R0
    LOAD T1, SB, T2
    LI T0, 1752
    ADD T4, T1, R0
    ADD S0, T0, T4
; Runtime bank overflow calculation for dynamic GEP
    LI T5, -1
    DIV T3, S0, T5
    MOD T7, S0, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op18_t9'
; Computing new bank gep_new_bank_f28_op18_t9 = GP + bank_delta
    ADD S1, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f28_op18_t9)
    ADD S0, T7, R0
; GEP: Setting bank info for t9 to Dynamic("gep_new_bank_f28_op18_t9")
; Load instruction: t10 = load FatPtr(FatPointer { addr: Temp(9), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Mixed })
; LOAD: Pointer t9 has bank info: Dynamic("gep_new_bank_f28_op18_t9")
    LI T4, -1
    BEQ S1, T4, L_bc_937108e6_use_global
    LI T3, -2
    BEQ S1, T3, L_bc_937108e6_use_stack
    ADD S2, S1, R0
    BEQ R0, R0, L_bc_937108e6_done
L_bc_937108e6_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_937108e6_done
L_bc_937108e6_use_stack:
    ADD S2, SB, R0
L_bc_937108e6_done:
; LOAD: Using bank register S2 for load
    LOAD T5, S2, S0
    BEQ T5, R0, L_execute_226
; Branch to L_execute_226 if condition is false
    BEQ R0, R0, L_execute_225
; Unconditional branch to L_execute_225 (condition was true)
; Invalidated 1 alloca bindings
L_execute_225:
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op23_t11 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T7, FP, R0
    LOAD T0, SB, T7
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S3, SB, SC
; Spill load_f28_op6_t5_addr to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T6, SB, SC
; Spill t8 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T1, SB, SC
; Spill t9 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S0, SB, SC
; Spill gep_new_bank_f28_op18_t9 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S1, SB, SC
; Spill gep_new_bank_f28_op18_t9 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE S1, SB, SC
; Spill load_f28_op19_t10_resolved_bank_28_f28_op20 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S2, SB, SC
; Spill t11 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function exec_prim
    CALL exec_prim
    BEQ R0, R0, L_execute_227
; Unconditional branch to L_execute_227
L_execute_226:
    ADD T4, FP, R0
    ADDI T4, T4, 1
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op25_t13 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T3, FP, R0
    LOAD T5, SB, T3
    LI T2, 1802
    ADD T6, T5, R0
    ADD S3, T2, T6
; Runtime bank overflow calculation for dynamic GEP
    LI S0, -1
    DIV T1, S3, S0
    MOD S1, S3, S0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op32_t14'
; Computing new bank gep_new_bank_f28_op32_t14 = GP + bank_delta
    ADD S2, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f28_op32_t14)
    ADD S3, S1, R0
; GEP: Setting bank info for t14 to Dynamic("gep_new_bank_f28_op32_t14")
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; LOAD: Pointer t14 has bank info: Dynamic("gep_new_bank_f28_op32_t14")
    LI T0, -1
    BEQ S2, T0, L_bc_464ec45f_use_global
    LI T6, -2
    BEQ S2, T6, L_bc_464ec45f_use_stack
    ADD T7, S2, R0
    BEQ R0, R0, L_bc_464ec45f_done
L_bc_464ec45f_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_464ec45f_done
L_bc_464ec45f_use_stack:
    ADD T7, SB, R0
L_bc_464ec45f_done:
; LOAD: Using bank register T7 for load
    LOAD T1, T7, S3
    STORE T1, SB, T4
    BEQ R0, R0, L_execute_228
; Unconditional branch to L_execute_228
; Invalidated 2 alloca bindings
L_execute_228:
; Load instruction: t16 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op38_t16 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S0, FP, R0
    ADDI S0, S0, 1
    LOAD S1, SB, S0
    LI T2, 1853
    ADD T6, S1, R0
    ADD T0, T2, T6
; Runtime bank overflow calculation for dynamic GEP
    LI T4, -1
    DIV T3, T0, T4
; Spill t13 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T5, SB, SC
    MOD T5, T0, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op45_t17'
; Spill t14 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S3, SB, SC
; Spill gep_new_bank_f28_op32_t14 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE S2, SB, SC
; Computing new bank gep_new_bank_f28_op45_t17 = GP + bank_delta
    ADD S3, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f28_op45_t17)
    ADD T0, T5, R0
; GEP: Setting bank info for t17 to Dynamic("gep_new_bank_f28_op45_t17")
; Load instruction: t18 = load FatPtr(FatPointer { addr: Temp(17), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(17), bank: Mixed })
; LOAD: Pointer t17 has bank info: Dynamic("gep_new_bank_f28_op45_t17")
    LI T3, -1
    BEQ S3, T3, L_bc_48d0b1eb_use_global
    LI T4, -2
    BEQ S3, T4, L_bc_48d0b1eb_use_stack
    ADD T6, S3, R0
    BEQ R0, R0, L_bc_48d0b1eb_done
L_bc_48d0b1eb_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_48d0b1eb_done
L_bc_48d0b1eb_use_stack:
    ADD T6, SB, R0
L_bc_48d0b1eb_done:
; LOAD: Using bank register T6 for load
    LOAD T5, T6, T0
    LI T2, 0
    LI T3, 1
    SUB T2, T2, T3
    XOR T4, T5, T2
    LI T3, 0
    SLTU T5, T3, T4
    BEQ T5, R0, L_execute_230
; Branch to L_execute_230 if condition is false
    BEQ R0, R0, L_execute_229
; Unconditional branch to L_execute_229 (condition was true)
; Invalidated 1 alloca bindings
L_execute_229:
; Load instruction: t21 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op52_t21 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD T4, FP, R0
    ADDI T4, T4, 1
    LOAD T3, SB, T4
    LI T2, 1853
    ADD S0, T3, R0
    ADD T5, T2, S0
; Runtime bank overflow calculation for dynamic GEP
; Spill gep_new_bank_f28_op32_t14 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE S2, SB, SC
; Spill load_f28_op33_t15_resolved_bank_28_f28_op34 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T7, SB, SC
    LI T7, -1
    DIV S2, T5, T7
; Spill t15 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T1, SB, SC
    MOD T1, T5, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op59_t22'
; Spill t16 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S1, SB, SC
; Computing new bank gep_new_bank_f28_op59_t22 = GP + bank_delta
    ADD S1, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f28_op59_t22)
    ADD T5, T1, R0
; GEP: Setting bank info for t22 to Dynamic("gep_new_bank_f28_op59_t22")
; Load instruction: t23 = load FatPtr(FatPointer { addr: Temp(22), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Mixed })
; LOAD: Pointer t22 has bank info: Dynamic("gep_new_bank_f28_op59_t22")
    LI S2, -1
    BEQ S1, S2, L_bc_88a6e60b_use_global
    LI T7, -2
    BEQ S1, T7, L_bc_88a6e60b_use_stack
    ADD S0, S1, R0
    BEQ R0, R0, L_bc_88a6e60b_done
L_bc_88a6e60b_use_global:
    ADD S0, GP, R0
    BEQ R0, R0, L_bc_88a6e60b_done
L_bc_88a6e60b_use_stack:
    ADD S0, SB, R0
L_bc_88a6e60b_done:
; LOAD: Using bank register S0 for load
    LOAD T1, S0, T5
    LI T2, 0
    SLT S2, T1, T2
    LI T7, 1
    SUB T1, T7, S2
; Load instruction: t25 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op66_t25 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T4
    LI T7, 1853
; Spill t17 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T0, SB, SC
; Spill gep_new_bank_f28_op45_t17 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE S3, SB, SC
    ADD T0, S2, R0
    ADD T2, T7, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill gep_new_bank_f28_op45_t17 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE S3, SB, SC
; Spill load_f28_op46_t18_resolved_bank_28_f28_op47 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T6, SB, SC
    LI T6, -1
    DIV S3, T2, T6
; Spill t21 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T3, SB, SC
    MOD T3, T2, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op73_t26'
; Spill t22 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T5, SB, SC
; Spill gep_new_bank_f28_op59_t22 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S1, SB, SC
; Computing new bank gep_new_bank_f28_op73_t26 = GP + bank_delta
    ADD T5, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f28_op73_t26)
    ADD T2, T3, R0
; GEP: Setting bank info for t26 to Dynamic("gep_new_bank_f28_op73_t26")
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; LOAD: Pointer t26 has bank info: Dynamic("gep_new_bank_f28_op73_t26")
    LI S3, -1
    BEQ T5, S3, L_bc_cbcda08e_use_global
    LI T6, -2
    BEQ T5, T6, L_bc_cbcda08e_use_stack
    ADD T0, T5, R0
    BEQ R0, R0, L_bc_cbcda08e_done
L_bc_cbcda08e_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_cbcda08e_done
L_bc_cbcda08e_use_stack:
    ADD T0, SB, R0
L_bc_cbcda08e_done:
; LOAD: Using bank register T0 for load
    LOAD T3, T0, T2
; Load instruction: t28 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f28_op79_t28 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T7
    SLT T3, T3, S3
    AND T1, T1, T3
    BEQ T1, R0, L_execute_232
; Branch to L_execute_232 if condition is false
    BEQ R0, R0, L_execute_231
; Unconditional branch to L_execute_231 (condition was true)
; Invalidated 1 alloca bindings
L_execute_231:
    ADD T6, FP, R0
    ADDI T6, T6, 2
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op81_t32 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD T3, SB, S3
    LI T1, 1853
; Spill gep_new_bank_f28_op59_t22 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE S1, SB, SC
    ADD S1, T3, R0
    ADD T4, T1, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f28_op60_t23_resolved_bank_28_f28_op61 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE S0, SB, SC
; Spill t25 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE S2, SB, SC
    LI S2, -1
    DIV S0, T4, S2
; Spill t26 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T2, SB, SC
; Spill gep_new_bank_f28_op73_t26 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T5, SB, SC
    MOD T2, T4, S2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op88_t33'
; Spill gep_new_bank_f28_op73_t26 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T5, SB, SC
; Computing new bank gep_new_bank_f28_op88_t33 = GP + bank_delta
    ADD T5, GP, S0
; Result bank tracked as Dynamic(gep_new_bank_f28_op88_t33)
    ADD T4, T2, R0
; GEP: Setting bank info for t33 to Dynamic("gep_new_bank_f28_op88_t33")
; Load instruction: t34 = load FatPtr(FatPointer { addr: Temp(33), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(33), bank: Mixed })
; LOAD: Pointer t33 has bank info: Dynamic("gep_new_bank_f28_op88_t33")
    LI S0, -1
    BEQ T5, S0, L_bc_6b53f7e9_use_global
    LI S2, -2
    BEQ T5, S2, L_bc_6b53f7e9_use_stack
    ADD S1, T5, R0
    BEQ R0, R0, L_bc_6b53f7e9_done
L_bc_6b53f7e9_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_6b53f7e9_done
L_bc_6b53f7e9_use_stack:
    ADD S1, SB, R0
L_bc_6b53f7e9_done:
; LOAD: Using bank register S1 for load
    LOAD T2, S1, T4
; Spill live registers before call
; Spill load_f28_op74_t27_resolved_bank_28_f28_op75 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T0, SB, SC
; Spill load_f28_op78_t28_addr to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T7, SB, SC
; Spill t32 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T3, SB, SC
; Spill t33 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T4, SB, SC
; Spill gep_new_bank_f28_op88_t33 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE T5, SB, SC
; Spill gep_new_bank_f28_op88_t33 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE T5, SB, SC
; Spill load_f28_op89_t34_resolved_bank_28_f28_op90 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE S1, SB, SC
; Spill t34 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t35
; Recompute alloca t31 at FP+2
    ADD T1, FP, R0
    ADDI T1, T1, 2
    STORE RV0, SB, T1
    ADDI S0, T1, 1
    STORE RV1, SB, S0
; Load instruction: t36 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op95_t36 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T1
    ADDI T0, T1, 1
    LOAD T7, SB, T0
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T6, 2524
    LI S3, -1
; Spill live registers before call
; Spill t35 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE RV0, SB, SC
; Spill t36 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE S2, SB, SC
; Spill load_f28_op98_t36_bank_val to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE T7, SB, SC
; Spill load_f28_op98_t36_bank_val to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE T7, SB, SC
; Spill const_f28_op99_2524 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T6, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op100 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE S3, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T6, R0
    ADD A3, S3, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t37
    BEQ RV0, R0, L_execute_235
; Branch to L_execute_235 if condition is false
    BEQ R0, R0, L_execute_234
; Unconditional branch to L_execute_234 (condition was true)
L_execute_234:
    ADD T3, FP, R0
    ADDI T3, T3, 4
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t39
; Recompute alloca t38 at FP+4
    ADD T4, FP, R0
    ADDI T4, T4, 4
    STORE RV0, SB, T4
    ADD T5, FP, R0
    ADDI T5, T5, 5
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op102_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S1, FP, R0
    ADDI S1, S1, 1
    LOAD T2, SB, S1
    LI S0, 2527
    LI T0, -1
    LI T1, 2530
    LI S2, -1
; Spill live registers before call
; Spill t39 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE RV0, SB, SC
; Spill t41 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T2, SB, SC
; Spill const_f28_op104_2527 to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE S0, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op105 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T0, SB, SC
; Spill const_f28_op106_2530 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE T1, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op107 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE S2, SB, SC
; Pushing 1 arguments to stack
; Push arg 2 (fat ptr) to stack
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE T1, SB, SP
    ADDI SP, SP, 1
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Arg 1 (fat ptr) to A1,A2
    ADD A1, S0, R0
    ADD A2, T0, R0
; Pushed 2 words to stack
; Call function find_matching
    CALL find_matching
; Scalar return value for t42
; Clean up 2 words from stack
    ADDI SP, SP, -2
; Recompute alloca t40 at FP+5
    ADD T7, FP, R0
    ADDI T7, T7, 5
    STORE RV0, SB, T7
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(38), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(38), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op109_t43 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t38 at FP+4
    ADD T6, FP, R0
    ADDI T6, T6, 4
    LOAD S3, SB, T6
    LI T3, 0
    XOR T4, S3, T3
    LI T5, 1
    SLTU S3, T4, T5
; Load instruction: t45 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op113_t45 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, T7
    LI T2, 0
    SLT S0, S1, T2
    LI T0, 1
    SUB S1, T0, S0
    AND S3, S3, S1
    BEQ S3, R0, L_execute_239
; Branch to L_execute_239 if condition is false
    BEQ R0, R0, L_execute_237
; Unconditional branch to L_execute_237 (condition was true)
; Invalidated 2 alloca bindings
L_execute_237:
    ADD T1, FP, R0
    ADDI T1, T1, 6
; Load instruction: t49 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op117_t49 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S2, FP, R0
    ADDI S2, S2, 1
    LOAD T4, SB, S2
; Load instruction: t50 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op119_t50 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t40 at FP+5
    ADD T5, FP, R0
    ADDI T5, T5, 5
    LOAD T3, SB, T5
; Spill live registers before call
; Spill t42 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE RV0, SB, SC
; Spill t49 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE T4, SB, SC
; Spill t50 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE T3, SB, SC
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Arg 1 (scalar) to A1
    ADD A1, T3, R0
; Call function find_else
    CALL find_else
; Scalar return value for t51
; Recompute alloca t48 at FP+6
    ADD S0, FP, R0
    ADDI S0, S0, 6
    STORE RV0, SB, S0
; Load instruction: t52 = load FatPtr(FatPointer { addr: Temp(48), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(48), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op122_t52 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    LI T2, 0
    SLT S1, T0, T2
    LI S3, 1
    SUB T0, S3, S1
    BEQ T0, R0, L_execute_241
; Branch to L_execute_241 if condition is false
    BEQ R0, R0, L_execute_240
; Unconditional branch to L_execute_240 (condition was true)
; Invalidated 1 alloca bindings
L_execute_240:
; Load instruction: t54 = load FatPtr(FatPointer { addr: Temp(48), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(48), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op126_t54 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t48 at FP+6
    ADD T6, FP, R0
    ADDI T6, T6, 6
    LOAD T7, SB, T6
; Recompute alloca t12 at FP+1
    ADD T1, FP, R0
    ADDI T1, T1, 1
    STORE T7, SB, T1
    BEQ R0, R0, L_execute_242
; Unconditional branch to L_execute_242
; Invalidated 2 alloca bindings
L_execute_241:
; Load instruction: t55 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op129_t55 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t40 at FP+5
    ADD S2, FP, R0
    ADDI S2, S2, 5
    LOAD T5, SB, S2
; Recompute alloca t12 at FP+1
    ADD T4, FP, R0
    ADDI T4, T4, 1
    STORE T5, SB, T4
    BEQ R0, R0, L_execute_242
; Unconditional branch to L_execute_242
; Invalidated 2 alloca bindings
L_execute_242:
    BEQ R0, R0, L_execute_239
; Unconditional branch to L_execute_239
L_execute_239:
    BEQ R0, R0, L_execute_236
; Unconditional branch to L_execute_236
L_execute_235:
; Load instruction: t56 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op132_t56 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD T3, FP, R0
    ADDI T3, T3, 2
    LOAD S1, SB, T3
    ADDI S3, T3, 1
    LOAD T2, SB, S3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2535
    LI S0, -1
; Spill live registers before call
; Spill t51 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE RV0, SB, SC
; Spill t54 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE T7, SB, SC
; Spill t55 to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE T5, SB, SC
; Spill t56 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE S1, SB, SC
; Spill load_f28_op135_t56_bank_val to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE T2, SB, SC
; Spill load_f28_op135_t56_bank_val to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE T2, SB, SC
; Spill const_f28_op136_2535 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op137 to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T2, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, S0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t57
    BEQ RV0, R0, L_execute_244
; Branch to L_execute_244 if condition is false
    BEQ R0, R0, L_execute_243
; Unconditional branch to L_execute_243 (condition was true)
L_execute_243:
    ADD T1, FP, R0
    ADDI T1, T1, 7
; Load instruction: t59 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op138_t59 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD T4, SB, T6
    LI S2, 2540
    LI S3, -1
    LI T7, 2543
    LI T5, -1
; Spill live registers before call
; Spill t59 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE T4, SB, SC
; Spill const_f28_op140_2540 to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE S2, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op141 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE S3, SB, SC
; Spill const_f28_op142_2543 to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op143 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE T5, SB, SC
; Pushing 1 arguments to stack
; Push arg 2 (fat ptr) to stack
    STORE T5, SB, SP
    ADDI SP, SP, 1
    STORE T7, SB, SP
    ADDI SP, SP, 1
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Arg 1 (fat ptr) to A1,A2
    ADD A1, S2, R0
    ADD A2, S3, R0
; Pushed 2 words to stack
; Call function find_matching
    CALL find_matching
; Scalar return value for t60
; Clean up 2 words from stack
    ADDI SP, SP, -2
; Recompute alloca t58 at FP+7
    ADD T3, FP, R0
    ADDI T3, T3, 7
    STORE RV0, SB, T3
; Load instruction: t61 = load FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op145_t61 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, T3
    LI T2, 0
    SLT T0, S1, T2
    LI S0, 1
    SUB S1, S0, T0
    BEQ S1, R0, L_execute_248
; Branch to L_execute_248 if condition is false
    BEQ R0, R0, L_execute_246
; Unconditional branch to L_execute_246 (condition was true)
; Invalidated 1 alloca bindings
L_execute_246:
; Load instruction: t63 = load FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(58), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op149_t63 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t58 at FP+7
    ADD T1, FP, R0
    ADDI T1, T1, 7
    LOAD T6, SB, T1
; Recompute alloca t12 at FP+1
    ADD T4, FP, R0
    ADDI T4, T4, 1
    STORE T6, SB, T4
    BEQ R0, R0, L_execute_248
; Unconditional branch to L_execute_248
; Invalidated 2 alloca bindings
L_execute_248:
    BEQ R0, R0, L_execute_245
; Unconditional branch to L_execute_245
L_execute_244:
; Load instruction: t64 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op152_t64 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
    LOAD S3, SB, S2
    ADDI T7, S2, 1
    LOAD T5, SB, T7
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T0, 2548
    LI S0, -1
; Spill live registers before call
; Spill t60 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE RV0, SB, SC
; Spill t63 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE T6, SB, SC
; Spill t64 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE S3, SB, SC
; Spill load_f28_op155_t64_bank_val to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE T5, SB, SC
; Spill load_f28_op155_t64_bank_val to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE T5, SB, SC
; Spill const_f28_op156_2548 to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE T0, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op157 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, T5, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T0, R0
    ADD A3, S0, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t65
    BEQ RV0, R0, L_execute_250
; Branch to L_execute_250 if condition is false
    BEQ R0, R0, L_execute_249
; Unconditional branch to L_execute_249 (condition was true)
L_execute_249:
    BEQ R0, R0, L_execute_251
; Unconditional branch to L_execute_251
L_execute_250:
; Load instruction: t66 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op158_t66 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD T2, FP, R0
    ADDI T2, T2, 2
    LOAD S1, SB, T2
    ADDI T3, T2, 1
    LOAD T1, SB, T3
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T4, 2553
    LI T7, -1
; Spill live registers before call
; Spill t66 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE S1, SB, SC
; Spill load_f28_op161_t66_bank_val to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE T1, SB, SC
; Spill load_f28_op161_t66_bank_val to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE T1, SB, SC
; Spill const_f28_op162_2553 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op163 to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE T7, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, T7, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t67
    BEQ RV0, R0, L_execute_253
; Branch to L_execute_253 if condition is false
    BEQ R0, R0, L_execute_252
; Unconditional branch to L_execute_252 (condition was true)
L_execute_252:
; Load instruction: t68 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op164_t68 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD T6, FP, R0
    ADDI T6, T6, 1
    LOAD S2, SB, T6
; Spill live registers before call
; Spill t68 to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function rpush
    CALL rpush
    BEQ R0, R0, L_execute_254
; Unconditional branch to L_execute_254
L_execute_253:
; Load instruction: t69 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op166_t69 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD S3, FP, R0
    ADDI S3, S3, 2
    LOAD T5, SB, S3
    ADDI T0, S3, 1
    LOAD S0, SB, T0
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T3, 2559
    LI T2, -1
; Spill live registers before call
; Spill t69 to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE T5, SB, SC
; Spill load_f28_op169_t69_bank_val to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 100
    STORE S0, SB, SC
; Spill load_f28_op169_t69_bank_val to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 101
    STORE S0, SB, SC
; Spill const_f28_op170_2559 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 102
    STORE T3, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op171 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 103
    STORE T2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, S0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T3, R0
    ADD A3, T2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t70
    BEQ RV0, R0, L_execute_256
; Branch to L_execute_256 if condition is false
    BEQ R0, R0, L_execute_255
; Unconditional branch to L_execute_255 (condition was true)
L_execute_255:
    ADD S1, FP, R0
    ADDI S1, S1, 8
; Spill live registers before call
; Call function pop
    CALL pop
; Scalar return value for t72
; Recompute alloca t71 at FP+8
    ADD T1, FP, R0
    ADDI T1, T1, 8
    STORE RV0, SB, T1
; Load instruction: t73 = load FatPtr(FatPointer { addr: Temp(71), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(71), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op173_t73 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, T1
    LI T7, 0
    XOR T6, T4, T7
    LI S2, 1
    SLTU T4, T6, S2
    BEQ T4, R0, L_execute_260
; Branch to L_execute_260 if condition is false
    BEQ R0, R0, L_execute_258
; Unconditional branch to L_execute_258 (condition was true)
; Invalidated 1 alloca bindings
L_execute_258:
; Spill live registers before call
; Spill t72 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 104
    STORE RV0, SB, SC
; Call function rpop
    CALL rpop
; Scalar return value for t75
    ADD T0, FP, R0
    ADDI T0, T0, 9
; Load instruction: t77 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op177_t77 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD T5, SB, S3
    LI S0, 2565
    LI T3, -1
    LI T2, 2571
    LI S1, -1
; Spill live registers before call
; Spill t75 to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 105
    STORE RV0, SB, SC
; Spill t77 to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 106
    STORE T5, SB, SC
; Spill const_f28_op179_2565 to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 107
    STORE S0, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op180 to slot 86
    ADD SC, FP, R0
    ADDI SC, SC, 108
    STORE T3, SB, SC
; Spill const_f28_op181_2571 to slot 87
    ADD SC, FP, R0
    ADDI SC, SC, 109
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op182 to slot 88
    ADD SC, FP, R0
    ADDI SC, SC, 110
    STORE S1, SB, SC
; Pushing 1 arguments to stack
; Push arg 2 (fat ptr) to stack
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE T2, SB, SP
    ADDI SP, SP, 1
; Setting up 2 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Arg 1 (fat ptr) to A1,A2
    ADD A1, S0, R0
    ADD A2, T3, R0
; Pushed 2 words to stack
; Call function find_matching
    CALL find_matching
; Scalar return value for t78
; Clean up 2 words from stack
    ADDI SP, SP, -2
; Recompute alloca t76 at FP+9
    ADD T6, FP, R0
    ADDI T6, T6, 9
    STORE RV0, SB, T6
; Load instruction: t79 = load FatPtr(FatPointer { addr: Temp(76), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(76), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op184_t79 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T6
    LI T7, 0
    SLT T4, S2, T7
    LI T1, 1
    SUB S2, T1, T4
    BEQ S2, R0, L_execute_263
; Branch to L_execute_263 if condition is false
    BEQ R0, R0, L_execute_261
; Unconditional branch to L_execute_261 (condition was true)
; Invalidated 1 alloca bindings
L_execute_261:
; Load instruction: t81 = load FatPtr(FatPointer { addr: Temp(76), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(76), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op188_t81 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t76 at FP+9
    ADD T0, FP, R0
    ADDI T0, T0, 9
    LOAD S3, SB, T0
; Recompute alloca t12 at FP+1
    ADD T5, FP, R0
    ADDI T5, T5, 1
    STORE S3, SB, T5
    BEQ R0, R0, L_execute_263
; Unconditional branch to L_execute_263
; Invalidated 2 alloca bindings
L_execute_263:
    BEQ R0, R0, L_execute_260
; Unconditional branch to L_execute_260
L_execute_260:
    BEQ R0, R0, L_execute_257
; Unconditional branch to L_execute_257
L_execute_256:
; Load instruction: t82 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op191_t82 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD S0, FP, R0
    ADDI S0, S0, 2
    LOAD T3, SB, S0
    ADDI T2, S0, 1
    LOAD S1, SB, T2
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T4, 2578
    LI T1, -1
; Spill live registers before call
; Spill t78 to slot 89
    ADD SC, FP, R0
    ADDI SC, SC, 111
    STORE RV0, SB, SC
; Spill t81 to slot 90
    ADD SC, FP, R0
    ADDI SC, SC, 112
    STORE S3, SB, SC
; Spill t82 to slot 91
    ADD SC, FP, R0
    ADDI SC, SC, 113
    STORE T3, SB, SC
; Spill load_f28_op194_t82_bank_val to slot 92
    ADD SC, FP, R0
    ADDI SC, SC, 114
    STORE S1, SB, SC
; Spill load_f28_op194_t82_bank_val to slot 93
    ADD SC, FP, R0
    ADDI SC, SC, 115
    STORE S1, SB, SC
; Spill const_f28_op195_2578 to slot 94
    ADD SC, FP, R0
    ADDI SC, SC, 116
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op196 to slot 95
    ADD SC, FP, R0
    ADDI SC, SC, 117
    STORE T1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, S1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, T1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t83
    BEQ RV0, R0, L_execute_265
; Branch to L_execute_265 if condition is false
    BEQ R0, R0, L_execute_264
; Unconditional branch to L_execute_264 (condition was true)
L_execute_264:
    ADD T7, FP, R0
    ADDI T7, T7, 10
; Spill live registers before call
; Call function rpop
    CALL rpop
; Scalar return value for t85
; Recompute alloca t84 at FP+10
    ADD S2, FP, R0
    ADDI S2, S2, 10
    STORE RV0, SB, S2
; Load instruction: t86 = load FatPtr(FatPointer { addr: Temp(84), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(84), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op198_t86 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S2
    LI T0, 1
    SUB T6, T6, T0
; Recompute alloca t12 at FP+1
    ADD T5, FP, R0
    ADDI T5, T5, 1
    STORE T6, SB, T5
    BEQ R0, R0, L_execute_266
; Unconditional branch to L_execute_266
; Invalidated 2 alloca bindings
L_execute_265:
; Load instruction: t88 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op201_t88 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD T2, FP, R0
    ADDI T2, T2, 2
    LOAD S3, SB, T2
    ADDI S0, T2, 1
    LOAD T3, SB, S0
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S1, 2585
    LI T4, -1
; Spill live registers before call
; Spill t85 to slot 96
    ADD SC, FP, R0
    ADDI SC, SC, 118
    STORE RV0, SB, SC
; Spill t87 to slot 97
    ADD SC, FP, R0
    ADDI SC, SC, 119
    STORE T6, SB, SC
; Spill t88 to slot 98
    ADD SC, FP, R0
    ADDI SC, SC, 120
    STORE S3, SB, SC
; Spill load_f28_op204_t88_bank_val to slot 99
    ADD SC, FP, R0
    ADDI SC, SC, 121
    STORE T3, SB, SC
; Spill load_f28_op204_t88_bank_val to slot 100
    ADD SC, FP, R0
    ADDI SC, SC, 122
    STORE T3, SB, SC
; Spill const_f28_op205_2585 to slot 101
    ADD SC, FP, R0
    ADDI SC, SC, 123
    STORE S1, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op206 to slot 102
    ADD SC, FP, R0
    ADDI SC, SC, 124
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, T3, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S1, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t89
    BEQ RV0, R0, L_execute_268
; Branch to L_execute_268 if condition is false
    BEQ R0, R0, L_execute_267
; Unconditional branch to L_execute_267 (condition was true)
L_execute_267:
; Load instruction: t90 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op207_t90 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD T1, FP, R0
    ADDI T1, T1, 1
    LOAD T7, SB, T1
    LI T0, 1853
    ADD S2, T7, R0
    ADD T5, T0, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T6, -1
    DIV S0, T5, T6
    MOD T2, T5, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op214_t91'
; Computing new bank gep_new_bank_f28_op214_t91 = GP + bank_delta
    ADD S3, GP, S0
; Result bank tracked as Dynamic(gep_new_bank_f28_op214_t91)
    ADD T5, T2, R0
; GEP: Setting bank info for t91 to Dynamic("gep_new_bank_f28_op214_t91")
; Load instruction: t92 = load FatPtr(FatPointer { addr: Temp(91), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(91), bank: Mixed })
; LOAD: Pointer t91 has bank info: Dynamic("gep_new_bank_f28_op214_t91")
    LI S1, -1
    BEQ S3, S1, L_bc_ed5bb720_use_global
    LI T4, -2
    BEQ S3, T4, L_bc_ed5bb720_use_stack
    ADD T3, S3, R0
    BEQ R0, R0, L_bc_ed5bb720_done
L_bc_ed5bb720_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_ed5bb720_done
L_bc_ed5bb720_use_stack:
    ADD T3, SB, R0
L_bc_ed5bb720_done:
; LOAD: Using bank register T3 for load
    LOAD RV0, T3, T5
; Spill live registers before call
; Spill t90 to slot 103
    ADD SC, FP, R0
    ADDI SC, SC, 125
    STORE T7, SB, SC
; Spill t91 to slot 104
    ADD SC, FP, R0
    ADDI SC, SC, 126
    STORE T5, SB, SC
; Spill gep_new_bank_f28_op214_t91 to slot 105
    ADD SC, FP, R0
    ADDI SC, SC, 127
    STORE S3, SB, SC
; Spill gep_new_bank_f28_op214_t91 to slot 106
    ADD SC, FP, R0
    ADDI SC, SC, 128
    STORE S3, SB, SC
; Spill load_f28_op215_t92_resolved_bank_28_f28_op216 to slot 107
    ADD SC, FP, R0
    ADDI SC, SC, 129
    STORE T3, SB, SC
; Spill t92 to slot 108
    ADD SC, FP, R0
    ADDI SC, SC, 130
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function exec_prim
    CALL exec_prim
; Load instruction: t93 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op219_t93 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S2, FP, R0
    ADDI S2, S2, 1
    LOAD S0, SB, S2
; Spill live registers before call
; Spill t93 to slot 109
    ADD SC, FP, R0
    ADDI SC, SC, 131
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function rpush
    CALL rpush
    BEQ R0, R0, L_execute_269
; Unconditional branch to L_execute_269
L_execute_268:
; Load instruction: t94 = load FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(31), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op221_t94 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t31 at FP+2
    ADD T6, FP, R0
    ADDI T6, T6, 2
    LOAD T2, SB, T6
    ADDI T0, T6, 1
    LOAD S1, SB, T0
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T4, 2588
    LI T1, -1
; Spill live registers before call
; Spill t94 to slot 110
    ADD SC, FP, R0
    ADDI SC, SC, 132
    STORE T2, SB, SC
; Spill load_f28_op224_t94_bank_val to slot 111
    ADD SC, FP, R0
    ADDI SC, SC, 133
    STORE S1, SB, SC
; Spill load_f28_op224_t94_bank_val to slot 112
    ADD SC, FP, R0
    ADDI SC, SC, 134
    STORE S1, SB, SC
; Spill const_f28_op225_2588 to slot 113
    ADD SC, FP, R0
    ADDI SC, SC, 135
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_28_f28_op226 to slot 114
    ADD SC, FP, R0
    ADDI SC, SC, 136
    STORE T1, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, S1, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, T1, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t95
    BEQ RV0, R0, L_execute_271
; Branch to L_execute_271 if condition is false
    BEQ R0, R0, L_execute_270
; Unconditional branch to L_execute_270 (condition was true)
L_execute_270:
    ADD T7, FP, R0
    ADDI T7, T7, 11
; Spill live registers before call
; Call function rpop
    CALL rpop
; Scalar return value for t97
; Recompute alloca t96 at FP+11
    ADD T5, FP, R0
    ADDI T5, T5, 11
    STORE RV0, SB, T5
    ADD S3, FP, R0
    ADDI S3, S3, 12
; Spill live registers before call
; Spill t97 to slot 115
    ADD SC, FP, R0
    ADDI SC, SC, 137
    STORE RV0, SB, SC
; Call function rpop
    CALL rpop
; Scalar return value for t99
; Recompute alloca t98 at FP+12
    ADD T3, FP, R0
    ADDI T3, T3, 12
    STORE RV0, SB, T3
    ADD S2, FP, R0
    ADDI S2, S2, 13
; Spill live registers before call
; Spill t99 to slot 116
    ADD SC, FP, R0
    ADDI SC, SC, 138
    STORE RV0, SB, SC
; Call function rpop
    CALL rpop
; Scalar return value for t101
; Recompute alloca t100 at FP+13
    ADD S0, FP, R0
    ADDI S0, S0, 13
    STORE RV0, SB, S0
; Load instruction: t102 = load FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op230_t102 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t98 at FP+12
    ADD T0, FP, R0
    ADDI T0, T0, 12
    LOAD T6, SB, T0
    LI T2, 0
    ADD T6, T6, T2
; Load instruction: t104 = load FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op232_t104 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, T0
    LI T4, 1
    ADD S1, S1, T4
    STORE S1, SB, T0
; Load instruction: t106 = load FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op235_t106 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, T0
; Load instruction: t107 = load FatPtr(FatPointer { addr: Temp(100), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(100), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op237_t107 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    SLT T1, T1, T7
    BEQ T1, R0, L_execute_275
; Branch to L_execute_275 if condition is false
    BEQ R0, R0, L_execute_273
; Unconditional branch to L_execute_273 (condition was true)
; Invalidated 2 alloca bindings
L_execute_273:
; Load instruction: t109 = load FatPtr(FatPointer { addr: Temp(100), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(100), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op239_t109 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t100 at FP+13
    ADD T5, FP, R0
    ADDI T5, T5, 13
    LOAD S3, SB, T5
; Spill live registers before call
; Spill t101 to slot 117
    ADD SC, FP, R0
    ADDI SC, SC, 139
    STORE RV0, SB, SC
; Spill t103 to slot 118
    ADD SC, FP, R0
    ADDI SC, SC, 140
    STORE T6, SB, SC
; Spill t105 to slot 119
    ADD SC, FP, R0
    ADDI SC, SC, 141
    STORE S1, SB, SC
; Spill t109 to slot 120
    ADD SC, FP, R0
    ADDI SC, SC, 142
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function rpush
    CALL rpush
; Load instruction: t110 = load FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(98), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op241_t110 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t98 at FP+12
    ADD T3, FP, R0
    ADDI T3, T3, 12
    LOAD S2, SB, T3
; Spill live registers before call
; Spill t110 to slot 121
    ADD SC, FP, R0
    ADDI SC, SC, 143
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function rpush
    CALL rpush
; Load instruction: t111 = load FatPtr(FatPointer { addr: Temp(96), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(96), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op243_t111 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t96 at FP+11
    ADD T2, FP, R0
    ADDI T2, T2, 11
    LOAD T4, SB, T2
; Spill live registers before call
; Spill t111 to slot 122
    ADD SC, FP, R0
    ADDI SC, SC, 144
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function rpush
    CALL rpush
; Load instruction: t112 = load FatPtr(FatPointer { addr: Temp(96), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(96), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op245_t112 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t96 at FP+11
    ADD T7, FP, R0
    ADDI T7, T7, 11
    LOAD T1, SB, T7
; Recompute alloca t12 at FP+1
    ADD T0, FP, R0
    ADDI T0, T0, 1
    STORE T1, SB, T0
    BEQ R0, R0, L_execute_275
; Unconditional branch to L_execute_275
; Invalidated 2 alloca bindings
L_execute_275:
    BEQ R0, R0, L_execute_272
; Unconditional branch to L_execute_272
L_execute_271:
; Load instruction: t113 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op248_t113 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S0, FP, R0
    ADDI S0, S0, 1
    LOAD RV0, SB, S0
    LI T6, 1853
    ADD T5, RV0, R0
    ADD S1, T6, T5
; Runtime bank overflow calculation for dynamic GEP
    LI T3, -1
    DIV S3, S1, T3
    MOD S2, S1, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op255_t114'
; Computing new bank gep_new_bank_f28_op255_t114 = GP + bank_delta
    ADD T2, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f28_op255_t114)
    ADD S1, S2, R0
; GEP: Setting bank info for t114 to Dynamic("gep_new_bank_f28_op255_t114")
; Load instruction: t115 = load FatPtr(FatPointer { addr: Temp(114), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(114), bank: Mixed })
; LOAD: Pointer t114 has bank info: Dynamic("gep_new_bank_f28_op255_t114")
    LI T0, -1
    BEQ T2, T0, L_bc_eb4556b3_use_global
    LI T7, -2
    BEQ T2, T7, L_bc_eb4556b3_use_stack
    ADD T4, T2, R0
    BEQ R0, R0, L_bc_eb4556b3_done
L_bc_eb4556b3_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_eb4556b3_done
L_bc_eb4556b3_use_stack:
    ADD T4, SB, R0
L_bc_eb4556b3_done:
; LOAD: Using bank register T4 for load
    LOAD T5, T4, S1
; Spill live registers before call
; Spill t112 to slot 123
    ADD SC, FP, R0
    ADDI SC, SC, 145
    STORE T1, SB, SC
; Spill t113 to slot 124
    ADD SC, FP, R0
    ADDI SC, SC, 146
    STORE RV0, SB, SC
; Spill t114 to slot 125
    ADD SC, FP, R0
    ADDI SC, SC, 147
    STORE S1, SB, SC
; Spill gep_new_bank_f28_op255_t114 to slot 126
    ADD SC, FP, R0
    ADDI SC, SC, 148
    STORE T2, SB, SC
; Spill gep_new_bank_f28_op255_t114 to slot 127
    ADD SC, FP, R0
    ADDI SC, SC, 149
    STORE T2, SB, SC
; Spill load_f28_op256_t115_resolved_bank_28_f28_op257 to slot 128
    ADD SC, FP, R0
    ADDI SC, SC, 150
    STORE T4, SB, SC
; Spill t115 to slot 129
    ADD SC, FP, R0
    ADDI SC, SC, 151
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function execute
    CALL execute
    BEQ R0, R0, L_execute_272
; Unconditional branch to L_execute_272
L_execute_272:
    BEQ R0, R0, L_execute_269
; Unconditional branch to L_execute_269
L_execute_269:
    BEQ R0, R0, L_execute_266
; Unconditional branch to L_execute_266
L_execute_266:
    BEQ R0, R0, L_execute_257
; Unconditional branch to L_execute_257
L_execute_257:
    BEQ R0, R0, L_execute_254
; Unconditional branch to L_execute_254
L_execute_254:
    BEQ R0, R0, L_execute_251
; Unconditional branch to L_execute_251
L_execute_251:
    BEQ R0, R0, L_execute_245
; Unconditional branch to L_execute_245
L_execute_245:
    BEQ R0, R0, L_execute_236
; Unconditional branch to L_execute_236
L_execute_236:
    BEQ R0, R0, L_execute_233
; Unconditional branch to L_execute_233
L_execute_232:
; Load instruction: t116 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op260_t116 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S3, FP, R0
    ADDI S3, S3, 1
    LOAD T3, SB, S3
    LI S2, 1853
    ADD T0, T3, R0
    ADD T6, S2, T0
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV T7, T6, T1
    MOD S0, T6, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op267_t117'
; Computing new bank gep_new_bank_f28_op267_t117 = GP + bank_delta
    ADD RV0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f28_op267_t117)
    ADD T6, S0, R0
; GEP: Setting bank info for t117 to Dynamic("gep_new_bank_f28_op267_t117")
; Load instruction: t118 = load FatPtr(FatPointer { addr: Temp(117), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(117), bank: Mixed })
; LOAD: Pointer t117 has bank info: Dynamic("gep_new_bank_f28_op267_t117")
    LI T2, -1
    BEQ RV0, T2, L_bc_b75fef0c_use_global
    LI T4, -2
    BEQ RV0, T4, L_bc_b75fef0c_use_stack
    ADD S1, RV0, R0
    BEQ R0, R0, L_bc_b75fef0c_done
L_bc_b75fef0c_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_b75fef0c_done
L_bc_b75fef0c_use_stack:
    ADD S1, SB, R0
L_bc_b75fef0c_done:
; LOAD: Using bank register S1 for load
    LOAD T5, S1, T6
    LI T0, 10000
    SLT T7, T5, T0
    LI T1, 1
    SUB T5, T1, T7
    BEQ T5, R0, L_execute_278
; Branch to L_execute_278 if condition is false
    BEQ R0, R0, L_execute_276
; Unconditional branch to L_execute_276 (condition was true)
; Invalidated 1 alloca bindings
L_execute_276:
; Load instruction: t120 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op274_t120 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD S0, FP, R0
    ADDI S0, S0, 1
    LOAD S2, SB, S0
    LI T2, 1853
    ADD T7, S2, R0
    ADD T4, T2, T7
; Runtime bank overflow calculation for dynamic GEP
    LI T0, -1
    DIV T1, T4, T0
    MOD T5, T4, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f28_op281_t121'
; Computing new bank gep_new_bank_f28_op281_t121 = GP + bank_delta
    ADD S3, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f28_op281_t121)
    ADD T4, T5, R0
; GEP: Setting bank info for t121 to Dynamic("gep_new_bank_f28_op281_t121")
; Load instruction: t122 = load FatPtr(FatPointer { addr: Temp(121), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(121), bank: Mixed })
; LOAD: Pointer t121 has bank info: Dynamic("gep_new_bank_f28_op281_t121")
    LI T1, -1
    BEQ S3, T1, L_bc_ebf4903b_use_global
    LI T0, -2
    BEQ S3, T0, L_bc_ebf4903b_use_stack
    ADD T7, S3, R0
    BEQ R0, R0, L_bc_ebf4903b_done
L_bc_ebf4903b_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_ebf4903b_done
L_bc_ebf4903b_use_stack:
    ADD T7, SB, R0
L_bc_ebf4903b_done:
; LOAD: Using bank register T7 for load
    LOAD T5, T7, T4
    LI T2, 10000
    SUB T5, T5, T2
; Spill live registers before call
; Spill t116 to slot 130
    ADD SC, FP, R0
    ADDI SC, SC, 152
    STORE T3, SB, SC
; Spill t117 to slot 131
    ADD SC, FP, R0
    ADDI SC, SC, 153
    STORE T6, SB, SC
; Spill gep_new_bank_f28_op267_t117 to slot 132
    ADD SC, FP, R0
    ADDI SC, SC, 154
    STORE RV0, SB, SC
; Spill gep_new_bank_f28_op267_t117 to slot 133
    ADD SC, FP, R0
    ADDI SC, SC, 155
    STORE RV0, SB, SC
; Spill load_f28_op268_t118_resolved_bank_28_f28_op269 to slot 134
    ADD SC, FP, R0
    ADDI SC, SC, 156
    STORE S1, SB, SC
; Spill t120 to slot 135
    ADD SC, FP, R0
    ADDI SC, SC, 157
    STORE S2, SB, SC
; Spill t121 to slot 136
    ADD SC, FP, R0
    ADDI SC, SC, 158
    STORE T4, SB, SC
; Spill gep_new_bank_f28_op281_t121 to slot 137
    ADD SC, FP, R0
    ADDI SC, SC, 159
    STORE S3, SB, SC
; Spill gep_new_bank_f28_op281_t121 to slot 138
    ADD SC, FP, R0
    ADDI SC, SC, 160
    STORE S3, SB, SC
; Spill load_f28_op282_t122_resolved_bank_28_f28_op283 to slot 139
    ADD SC, FP, R0
    ADDI SC, SC, 161
    STORE T7, SB, SC
; Spill t123 to slot 140
    ADD SC, FP, R0
    ADDI SC, SC, 162
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function push
    CALL push
    BEQ R0, R0, L_execute_278
; Unconditional branch to L_execute_278
L_execute_278:
    BEQ R0, R0, L_execute_233
; Unconditional branch to L_execute_233
L_execute_233:
; Load instruction: t124 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op286_t124 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t12 at FP+1
    ADD T1, FP, R0
    ADDI T1, T1, 1
    LOAD T0, SB, T1
    LI T2, 0
    ADD T0, T0, T2
; Load instruction: t126 = load FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(12), bank: Stack })
; LOAD: Pointer load_src_ptr_f28_op288_t126 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, T1
    LI T6, 1
    ADD T3, T3, T6
    STORE T3, SB, T1
    BEQ R0, R0, L_execute_228
; Unconditional branch to L_execute_228
; Invalidated 1 alloca bindings
L_execute_230:
    BEQ R0, R0, L_execute_227
; Unconditional branch to L_execute_227
L_execute_227:
; Jump to epilogue
    BEQ R0, R0, L_execute_99999
L_execute_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
init_dict:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 10 slots for locals
    ADDI SP, SP, 10
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
L_init_dict_279:
    ADD S3, FP, R0
; Load instruction: t1 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op1_t1 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, S2
; Spill live registers before call
; Spill load_f30_op0_t1_addr to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 10
    STORE S2, SB, SC
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 11
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t2
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T7, S0, 1
    STORE RV1, SB, T7
; Load instruction: t3 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op5_t3 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T5, S0, 1
    LOAD T4, SB, T5
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T3, T6, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t4 to Dynamic("load_f30_op8_t3_bank_val")
    LI T2, 43
    LI T0, -1
    BEQ T4, T0, L_bc_495bfc2e_use_global
    LI S3, -2
    BEQ T4, S3, L_bc_495bfc2e_use_stack
    ADD T1, T4, R0
    BEQ R0, R0, L_bc_495bfc2e_done
L_bc_495bfc2e_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_495bfc2e_done
L_bc_495bfc2e_use_stack:
    ADD T1, SB, R0
L_bc_495bfc2e_done:
    STORE T2, T1, T3
; Load instruction: t5 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op14_t5 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI S1, S0, 1
    LOAD T7, SB, S1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t6 to Dynamic("load_f30_op17_t5_bank_val")
    LI T0, 0
    LI T2, -1
    BEQ T7, T2, L_bc_02cf3b2b_use_global
    LI S1, -2
    BEQ T7, S1, L_bc_02cf3b2b_use_stack
    ADD S3, T7, R0
    BEQ R0, R0, L_bc_02cf3b2b_done
L_bc_02cf3b2b_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_02cf3b2b_done
L_bc_02cf3b2b_use_stack:
    ADD S3, SB, R0
L_bc_02cf3b2b_done:
    STORE T0, S3, T5
; Load instruction: t7 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op24_t7 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T2
    LI T0, 1752
; Spill t2 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE RV0, SB, SC
; Spill t3 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T6, SB, SC
; Spill load_f30_op8_t3_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T4, SB, SC
    ADD T6, S1, R0
    ADD RV0, T0, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t4 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T3, SB, SC
; Spill load_f30_op8_t3_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T4, SB, SC
; Spill load_f30_op8_t3_bank_val to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T4, SB, SC
    LI T4, -1
    DIV T3, RV0, T4
; Spill store_f30_op10_resolved_bank_30_f30_op11 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T1, SB, SC
    MOD T1, RV0, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op31_t8'
; Computing new bank gep_new_bank_f30_op31_t8 = GP + bank_delta
    ADD S0, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f30_op31_t8)
    ADD RV0, T1, R0
; GEP: Setting bank info for t8 to Dynamic("gep_new_bank_f30_op31_t8")
    LI T6, 1
    LI T4, -1
    BEQ S0, T4, L_bc_5f60a445_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_5f60a445_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_5f60a445_done
L_bc_5f60a445_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_5f60a445_done
L_bc_5f60a445_use_stack:
    ADD T3, SB, R0
L_bc_5f60a445_done:
    STORE T6, T3, RV0
; Load instruction: t9 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op38_t9 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T0
    LI T1, 1802
; Spill t5 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE S2, SB, SC
; Spill load_f30_op17_t5_bank_val to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T7, SB, SC
    ADD S2, T4, R0
    ADD T6, T1, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t6 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T5, SB, SC
; Spill load_f30_op17_t5_bank_val to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T7, SB, SC
; Spill load_f30_op17_t5_bank_val to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T7, SB, SC
    LI T7, -1
    DIV T5, T6, T7
; Spill store_f30_op19_resolved_bank_30_f30_op20 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S3, SB, SC
    MOD S3, T6, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op45_t10'
; Spill load_f30_op23_t7_addr to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op45_t10 = GP + bank_delta
    ADD T2, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f30_op45_t10)
    ADD T6, S3, R0
; GEP: Setting bank info for t10 to Dynamic("gep_new_bank_f30_op45_t10")
    LI S2, 0
    LI T7, -1
    BEQ T2, T7, L_bc_349d45d8_use_global
    LI S3, -2
    BEQ T2, S3, L_bc_349d45d8_use_stack
    ADD T5, T2, R0
    BEQ R0, R0, L_bc_349d45d8_done
L_bc_349d45d8_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_349d45d8_done
L_bc_349d45d8_use_stack:
    ADD T5, SB, R0
L_bc_349d45d8_done:
    STORE S2, T5, T6
; Load instruction: t11 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op52_t11 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T1
    LI S3, 0
    ADD T7, T7, S3
; Load instruction: t13 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op55_t13 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, S2
; Spill t7 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE S1, SB, SC
    LI S1, 1
    ADD S3, S3, S1
    LI S1, 1852
    STORE S3, GP, S1
; Load instruction: t15 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op60_t15 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t8 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op31_t8 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S0, SB, SC
    LOAD RV0, GP, S1
; Spill live registers before call
; Spill gep_new_bank_f30_op31_t8 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE S0, SB, SC
; Spill store_f30_op33_resolved_bank_30_f30_op34 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T3, SB, SC
; Spill load_f30_op37_t9_addr to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE T0, SB, SC
; Spill t9 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T4, SB, SC
; Spill t10 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op45_t10 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op45_t10 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T2, SB, SC
; Spill store_f30_op47_resolved_bank_30_f30_op48 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE T5, SB, SC
; Spill load_f30_op51_t11_addr to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T1, SB, SC
; Spill t12 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T7, SB, SC
; Spill load_f30_op54_t13_addr to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE S2, SB, SC
; Spill t14 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE S3, SB, SC
; Spill load_f30_op59_t15_addr to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE S1, SB, SC
; Spill t15 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t16
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T3, S0, 1
    STORE RV1, SB, T3
; Load instruction: t17 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op64_t17 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T4, S0, 1
    LOAD T6, SB, T4
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, T0, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t18 to Dynamic("load_f30_op67_t17_bank_val")
    LI T5, 45
    LI T7, -1
    BEQ T6, T7, L_bc_2960de99_use_global
    LI S2, -2
    BEQ T6, S2, L_bc_2960de99_use_stack
    ADD T1, T6, R0
    BEQ R0, R0, L_bc_2960de99_done
L_bc_2960de99_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_2960de99_done
L_bc_2960de99_use_stack:
    ADD T1, SB, R0
L_bc_2960de99_done:
    STORE T5, T1, T2
; Load instruction: t19 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op73_t19 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI S1, S0, 1
    LOAD T3, SB, S1
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S3, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t20 to Dynamic("load_f30_op76_t19_bank_val")
    LI T7, 0
    LI T5, -1
    BEQ T3, T5, L_bc_ef953604_use_global
    LI S1, -2
    BEQ T3, S1, L_bc_ef953604_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_ef953604_done
L_bc_ef953604_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_ef953604_done
L_bc_ef953604_use_stack:
    ADD S2, SB, R0
L_bc_ef953604_done:
    STORE T7, S2, T4
; Load instruction: t21 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op83_t21 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T5
    LI T7, 1752
; Spill t16 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE RV0, SB, SC
; Spill t17 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T0, SB, SC
; Spill load_f30_op67_t17_bank_val to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T6, SB, SC
    ADD T0, S1, R0
    ADD RV0, T7, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t18 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T2, SB, SC
; Spill load_f30_op67_t17_bank_val to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T6, SB, SC
; Spill load_f30_op67_t17_bank_val to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T6, SB, SC
    LI T6, -1
    DIV T2, RV0, T6
; Spill store_f30_op69_resolved_bank_30_f30_op70 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T1, SB, SC
    MOD T1, RV0, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op90_t22'
; Computing new bank gep_new_bank_f30_op90_t22 = GP + bank_delta
    ADD S0, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f30_op90_t22)
    ADD RV0, T1, R0
; GEP: Setting bank info for t22 to Dynamic("gep_new_bank_f30_op90_t22")
    LI T0, 1
    LI T6, -1
    BEQ S0, T6, L_bc_ad89a3b4_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_ad89a3b4_use_stack
    ADD T2, S0, R0
    BEQ R0, R0, L_bc_ad89a3b4_done
L_bc_ad89a3b4_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_ad89a3b4_done
L_bc_ad89a3b4_use_stack:
    ADD T2, SB, R0
L_bc_ad89a3b4_done:
    STORE T0, T2, RV0
; Load instruction: t23 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op97_t23 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T7
    LI T1, 1802
; Spill t19 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE S3, SB, SC
; Spill load_f30_op76_t19_bank_val to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T3, SB, SC
    ADD S3, T6, R0
    ADD T0, T1, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t20 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T4, SB, SC
; Spill load_f30_op76_t19_bank_val to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T3, SB, SC
; Spill load_f30_op76_t19_bank_val to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE T3, SB, SC
    LI T3, -1
    DIV T4, T0, T3
; Spill store_f30_op78_resolved_bank_30_f30_op79 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE S2, SB, SC
    MOD S2, T0, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op104_t24'
; Spill load_f30_op82_t21_addr to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE T5, SB, SC
; Computing new bank gep_new_bank_f30_op104_t24 = GP + bank_delta
    ADD T5, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op104_t24)
    ADD T0, S2, R0
; GEP: Setting bank info for t24 to Dynamic("gep_new_bank_f30_op104_t24")
    LI S3, 0
    LI T3, -1
    BEQ T5, T3, L_bc_25d14de9_use_global
    LI S2, -2
    BEQ T5, S2, L_bc_25d14de9_use_stack
    ADD T4, T5, R0
    BEQ R0, R0, L_bc_25d14de9_done
L_bc_25d14de9_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_25d14de9_done
L_bc_25d14de9_use_stack:
    ADD T4, SB, R0
L_bc_25d14de9_done:
    STORE S3, T4, T0
; Load instruction: t25 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op111_t25 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T1
    LI S2, 0
    ADD T3, T3, S2
; Load instruction: t27 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op114_t27 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
; Spill t21 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE S1, SB, SC
    LI S1, 1
    ADD S2, S2, S1
    LI S1, 1852
    STORE S2, GP, S1
; Load instruction: t29 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op119_t29 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t22 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op90_t22 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE S0, SB, SC
    LOAD RV0, GP, S1
; Spill live registers before call
; Spill gep_new_bank_f30_op90_t22 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE S0, SB, SC
; Spill store_f30_op92_resolved_bank_30_f30_op93 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE T2, SB, SC
; Spill load_f30_op96_t23_addr to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T7, SB, SC
; Spill t23 to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE T6, SB, SC
; Spill t24 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE T0, SB, SC
; Spill gep_new_bank_f30_op104_t24 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T5, SB, SC
; Spill gep_new_bank_f30_op104_t24 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE T5, SB, SC
; Spill store_f30_op106_resolved_bank_30_f30_op107 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T4, SB, SC
; Spill load_f30_op110_t25_addr to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE T1, SB, SC
; Spill t26 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE T3, SB, SC
; Spill load_f30_op113_t27_addr to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE S3, SB, SC
; Spill t28 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE S2, SB, SC
; Spill load_f30_op118_t29_addr to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE S1, SB, SC
; Spill t29 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t30
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T2, S0, 1
    STORE RV1, SB, T2
; Load instruction: t31 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op123_t31 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T6, S0, 1
    LOAD T0, SB, T6
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T5, T7, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t32 to Dynamic("load_f30_op126_t31_bank_val")
    LI T4, 42
    LI T3, -1
    BEQ T0, T3, L_bc_34a5bfea_use_global
    LI S3, -2
    BEQ T0, S3, L_bc_34a5bfea_use_stack
    ADD T1, T0, R0
    BEQ R0, R0, L_bc_34a5bfea_done
L_bc_34a5bfea_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_34a5bfea_done
L_bc_34a5bfea_use_stack:
    ADD T1, SB, R0
L_bc_34a5bfea_done:
    STORE T4, T1, T5
; Load instruction: t33 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op132_t33 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI S1, S0, 1
    LOAD T2, SB, S1
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t34 to Dynamic("load_f30_op135_t33_bank_val")
    LI T3, 0
    LI T4, -1
    BEQ T2, T4, L_bc_faa7a82f_use_global
    LI S1, -2
    BEQ T2, S1, L_bc_faa7a82f_use_stack
    ADD S3, T2, R0
    BEQ R0, R0, L_bc_faa7a82f_done
L_bc_faa7a82f_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_faa7a82f_done
L_bc_faa7a82f_use_stack:
    ADD S3, SB, R0
L_bc_faa7a82f_done:
    STORE T3, S3, T6
; Load instruction: t35 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op142_t35 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T4
    LI T3, 1752
; Spill t30 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE RV0, SB, SC
; Spill t31 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE T7, SB, SC
; Spill load_f30_op126_t31_bank_val to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE T0, SB, SC
    ADD T7, S1, R0
    ADD RV0, T3, T7
; Runtime bank overflow calculation for dynamic GEP
; Spill t32 to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE T5, SB, SC
; Spill load_f30_op126_t31_bank_val to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE T0, SB, SC
; Spill load_f30_op126_t31_bank_val to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE T0, SB, SC
    LI T0, -1
    DIV T5, RV0, T0
; Spill store_f30_op128_resolved_bank_30_f30_op129 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE T1, SB, SC
    MOD T1, RV0, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op149_t36'
; Computing new bank gep_new_bank_f30_op149_t36 = GP + bank_delta
    ADD S0, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f30_op149_t36)
    ADD RV0, T1, R0
; GEP: Setting bank info for t36 to Dynamic("gep_new_bank_f30_op149_t36")
    LI T7, 1
    LI T0, -1
    BEQ S0, T0, L_bc_6e3754a7_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_6e3754a7_use_stack
    ADD T5, S0, R0
    BEQ R0, R0, L_bc_6e3754a7_done
L_bc_6e3754a7_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_6e3754a7_done
L_bc_6e3754a7_use_stack:
    ADD T5, SB, R0
L_bc_6e3754a7_done:
    STORE T7, T5, RV0
; Load instruction: t37 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op156_t37 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T3
    LI T1, 1802
; Spill t33 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE S2, SB, SC
; Spill load_f30_op135_t33_bank_val to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE T2, SB, SC
    ADD S2, T0, R0
    ADD T7, T1, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t34 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE T6, SB, SC
; Spill load_f30_op135_t33_bank_val to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T2, SB, SC
; Spill load_f30_op135_t33_bank_val to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE T2, SB, SC
    LI T2, -1
    DIV T6, T7, T2
; Spill store_f30_op137_resolved_bank_30_f30_op138 to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE S3, SB, SC
    MOD S3, T7, T2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op163_t38'
; Spill load_f30_op141_t35_addr to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE T4, SB, SC
; Computing new bank gep_new_bank_f30_op163_t38 = GP + bank_delta
    ADD T4, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f30_op163_t38)
    ADD T7, S3, R0
; GEP: Setting bank info for t38 to Dynamic("gep_new_bank_f30_op163_t38")
    LI S2, 0
    LI T2, -1
    BEQ T4, T2, L_bc_0e9f9808_use_global
    LI S3, -2
    BEQ T4, S3, L_bc_0e9f9808_use_stack
    ADD T6, T4, R0
    BEQ R0, R0, L_bc_0e9f9808_done
L_bc_0e9f9808_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_0e9f9808_done
L_bc_0e9f9808_use_stack:
    ADD T6, SB, R0
L_bc_0e9f9808_done:
    STORE S2, T6, T7
; Load instruction: t39 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op170_t39 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T1
    LI S3, 0
    ADD T2, T2, S3
; Load instruction: t41 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op173_t41 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, S2
; Spill t35 to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE S1, SB, SC
    LI S1, 1
    ADD S3, S3, S1
    LI S1, 1852
    STORE S3, GP, S1
; Load instruction: t43 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op178_t43 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t36 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op149_t36 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE S0, SB, SC
    LOAD RV0, GP, S1
; Spill live registers before call
; Spill gep_new_bank_f30_op149_t36 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE S0, SB, SC
; Spill store_f30_op151_resolved_bank_30_f30_op152 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE T5, SB, SC
; Spill load_f30_op155_t37_addr to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE T3, SB, SC
; Spill t37 to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE T0, SB, SC
; Spill t38 to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op163_t38 to slot 86
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op163_t38 to slot 87
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE T4, SB, SC
; Spill store_f30_op165_resolved_bank_30_f30_op166 to slot 88
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE T6, SB, SC
; Spill load_f30_op169_t39_addr to slot 89
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE T1, SB, SC
; Spill t40 to slot 90
    ADD SC, FP, R0
    ADDI SC, SC, 100
    STORE T2, SB, SC
; Spill load_f30_op172_t41_addr to slot 91
    ADD SC, FP, R0
    ADDI SC, SC, 101
    STORE S2, SB, SC
; Spill t42 to slot 92
    ADD SC, FP, R0
    ADDI SC, SC, 102
    STORE S3, SB, SC
; Spill load_f30_op177_t43_addr to slot 93
    ADD SC, FP, R0
    ADDI SC, SC, 103
    STORE S1, SB, SC
; Spill t43 to slot 94
    ADD SC, FP, R0
    ADDI SC, SC, 104
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t44
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T5, S0, 1
    STORE RV1, SB, T5
; Load instruction: t45 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op182_t45 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T0, S0, 1
    LOAD T7, SB, T0
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T4, T3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t46 to Dynamic("load_f30_op185_t45_bank_val")
    LI T6, 47
    LI T2, -1
    BEQ T7, T2, L_bc_940d6540_use_global
    LI S2, -2
    BEQ T7, S2, L_bc_940d6540_use_stack
    ADD T1, T7, R0
    BEQ R0, R0, L_bc_940d6540_done
L_bc_940d6540_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_940d6540_done
L_bc_940d6540_use_stack:
    ADD T1, SB, R0
L_bc_940d6540_done:
    STORE T6, T1, T4
; Load instruction: t47 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op191_t47 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI S1, S0, 1
    LOAD T5, SB, S1
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T0, S3, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t48 to Dynamic("load_f30_op194_t47_bank_val")
    LI T2, 0
    LI T6, -1
    BEQ T5, T6, L_bc_ee794cb0_use_global
    LI S1, -2
    BEQ T5, S1, L_bc_ee794cb0_use_stack
    ADD S2, T5, R0
    BEQ R0, R0, L_bc_ee794cb0_done
L_bc_ee794cb0_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_ee794cb0_done
L_bc_ee794cb0_use_stack:
    ADD S2, SB, R0
L_bc_ee794cb0_done:
    STORE T2, S2, T0
; Load instruction: t49 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op201_t49 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T6
    LI T2, 1752
; Spill t44 to slot 95
    ADD SC, FP, R0
    ADDI SC, SC, 105
    STORE RV0, SB, SC
; Spill t45 to slot 96
    ADD SC, FP, R0
    ADDI SC, SC, 106
    STORE T3, SB, SC
; Spill load_f30_op185_t45_bank_val to slot 97
    ADD SC, FP, R0
    ADDI SC, SC, 107
    STORE T7, SB, SC
    ADD T3, S1, R0
    ADD RV0, T2, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t46 to slot 98
    ADD SC, FP, R0
    ADDI SC, SC, 108
    STORE T4, SB, SC
; Spill load_f30_op185_t45_bank_val to slot 99
    ADD SC, FP, R0
    ADDI SC, SC, 109
    STORE T7, SB, SC
; Spill load_f30_op185_t45_bank_val to slot 100
    ADD SC, FP, R0
    ADDI SC, SC, 110
    STORE T7, SB, SC
    LI T7, -1
    DIV T4, RV0, T7
; Spill store_f30_op187_resolved_bank_30_f30_op188 to slot 101
    ADD SC, FP, R0
    ADDI SC, SC, 111
    STORE T1, SB, SC
    MOD T1, RV0, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op208_t50'
; Computing new bank gep_new_bank_f30_op208_t50 = GP + bank_delta
    ADD S0, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op208_t50)
    ADD RV0, T1, R0
; GEP: Setting bank info for t50 to Dynamic("gep_new_bank_f30_op208_t50")
    LI T3, 1
    LI T7, -1
    BEQ S0, T7, L_bc_b61c43b4_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_b61c43b4_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_b61c43b4_done
L_bc_b61c43b4_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_b61c43b4_done
L_bc_b61c43b4_use_stack:
    ADD T4, SB, R0
L_bc_b61c43b4_done:
    STORE T3, T4, RV0
; Load instruction: t51 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op215_t51 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T2
    LI T1, 1802
; Spill t47 to slot 102
    ADD SC, FP, R0
    ADDI SC, SC, 112
    STORE S3, SB, SC
; Spill load_f30_op194_t47_bank_val to slot 103
    ADD SC, FP, R0
    ADDI SC, SC, 113
    STORE T5, SB, SC
    ADD S3, T7, R0
    ADD T3, T1, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t48 to slot 104
    ADD SC, FP, R0
    ADDI SC, SC, 114
    STORE T0, SB, SC
; Spill load_f30_op194_t47_bank_val to slot 105
    ADD SC, FP, R0
    ADDI SC, SC, 115
    STORE T5, SB, SC
; Spill load_f30_op194_t47_bank_val to slot 106
    ADD SC, FP, R0
    ADDI SC, SC, 116
    STORE T5, SB, SC
    LI T5, -1
    DIV T0, T3, T5
; Spill store_f30_op196_resolved_bank_30_f30_op197 to slot 107
    ADD SC, FP, R0
    ADDI SC, SC, 117
    STORE S2, SB, SC
    MOD S2, T3, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op222_t52'
; Spill load_f30_op200_t49_addr to slot 108
    ADD SC, FP, R0
    ADDI SC, SC, 118
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f30_op222_t52 = GP + bank_delta
    ADD T6, GP, T0
; Result bank tracked as Dynamic(gep_new_bank_f30_op222_t52)
    ADD T3, S2, R0
; GEP: Setting bank info for t52 to Dynamic("gep_new_bank_f30_op222_t52")
    LI S3, 0
    LI T5, -1
    BEQ T6, T5, L_bc_1a73eb73_use_global
    LI S2, -2
    BEQ T6, S2, L_bc_1a73eb73_use_stack
    ADD T0, T6, R0
    BEQ R0, R0, L_bc_1a73eb73_done
L_bc_1a73eb73_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_1a73eb73_done
L_bc_1a73eb73_use_stack:
    ADD T0, SB, R0
L_bc_1a73eb73_done:
    STORE S3, T0, T3
; Load instruction: t53 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op229_t53 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T1
    LI S2, 0
    ADD T5, T5, S2
; Load instruction: t55 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op232_t55 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
; Spill t49 to slot 109
    ADD SC, FP, R0
    ADDI SC, SC, 119
    STORE S1, SB, SC
    LI S1, 1
    ADD S2, S2, S1
    LI S1, 1852
    STORE S2, GP, S1
; Load instruction: t57 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op237_t57 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t50 to slot 110
    ADD SC, FP, R0
    ADDI SC, SC, 120
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op208_t50 to slot 111
    ADD SC, FP, R0
    ADDI SC, SC, 121
    STORE S0, SB, SC
    LOAD RV0, GP, S1
; Spill live registers before call
; Spill gep_new_bank_f30_op208_t50 to slot 112
    ADD SC, FP, R0
    ADDI SC, SC, 122
    STORE S0, SB, SC
; Spill store_f30_op210_resolved_bank_30_f30_op211 to slot 113
    ADD SC, FP, R0
    ADDI SC, SC, 123
    STORE T4, SB, SC
; Spill load_f30_op214_t51_addr to slot 114
    ADD SC, FP, R0
    ADDI SC, SC, 124
    STORE T2, SB, SC
; Spill t51 to slot 115
    ADD SC, FP, R0
    ADDI SC, SC, 125
    STORE T7, SB, SC
; Spill t52 to slot 116
    ADD SC, FP, R0
    ADDI SC, SC, 126
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op222_t52 to slot 117
    ADD SC, FP, R0
    ADDI SC, SC, 127
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op222_t52 to slot 118
    ADD SC, FP, R0
    ADDI SC, SC, 128
    STORE T6, SB, SC
; Spill store_f30_op224_resolved_bank_30_f30_op225 to slot 119
    ADD SC, FP, R0
    ADDI SC, SC, 129
    STORE T0, SB, SC
; Spill load_f30_op228_t53_addr to slot 120
    ADD SC, FP, R0
    ADDI SC, SC, 130
    STORE T1, SB, SC
; Spill t54 to slot 121
    ADD SC, FP, R0
    ADDI SC, SC, 131
    STORE T5, SB, SC
; Spill load_f30_op231_t55_addr to slot 122
    ADD SC, FP, R0
    ADDI SC, SC, 132
    STORE S3, SB, SC
; Spill t56 to slot 123
    ADD SC, FP, R0
    ADDI SC, SC, 133
    STORE S2, SB, SC
; Spill load_f30_op236_t57_addr to slot 124
    ADD SC, FP, R0
    ADDI SC, SC, 134
    STORE S1, SB, SC
; Spill t57 to slot 125
    ADD SC, FP, R0
    ADDI SC, SC, 135
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t58
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T4, S0, 1
    STORE RV1, SB, T4
; Load instruction: t59 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op241_t59 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T7, S0, 1
    LOAD T3, SB, T7
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T6, T2, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t60 to Dynamic("load_f30_op244_t59_bank_val")
    LI T0, 77
    LI T5, -1
    BEQ T3, T5, L_bc_7e00ef05_use_global
    LI S3, -2
    BEQ T3, S3, L_bc_7e00ef05_use_stack
    ADD T1, T3, R0
    BEQ R0, R0, L_bc_7e00ef05_done
L_bc_7e00ef05_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_7e00ef05_done
L_bc_7e00ef05_use_stack:
    ADD T1, SB, R0
L_bc_7e00ef05_done:
    STORE T0, T1, T6
; Load instruction: t61 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op250_t61 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI S1, S0, 1
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t62 to Dynamic("load_f30_op253_t61_bank_val")
    LI T5, 79
    LI T0, -1
    BEQ T4, T0, L_bc_df27ecdb_use_global
    LI S1, -2
    BEQ T4, S1, L_bc_df27ecdb_use_stack
    ADD S3, T4, R0
    BEQ R0, R0, L_bc_df27ecdb_done
L_bc_df27ecdb_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_df27ecdb_done
L_bc_df27ecdb_use_stack:
    ADD S3, SB, R0
L_bc_df27ecdb_done:
    STORE T5, S3, T7
; Load instruction: t63 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op259_t63 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S1, S0, 1
    LOAD T5, SB, S1
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, T0, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t64 to Dynamic("load_f30_op262_t63_bank_val")
; Spill t58 to slot 126
    ADD SC, FP, R0
    ADDI SC, SC, 136
    STORE RV0, SB, SC
    LI RV0, 68
; Spill t59 to slot 127
    ADD SC, FP, R0
    ADDI SC, SC, 137
    STORE T2, SB, SC
; Spill load_f30_op244_t59_bank_val to slot 128
    ADD SC, FP, R0
    ADDI SC, SC, 138
    STORE T3, SB, SC
; Spill t60 to slot 129
    ADD SC, FP, R0
    ADDI SC, SC, 139
    STORE T6, SB, SC
; Spill load_f30_op244_t59_bank_val to slot 130
    ADD SC, FP, R0
    ADDI SC, SC, 140
    STORE T3, SB, SC
    LI T6, -1
    BEQ T5, T6, L_bc_454427bd_use_global
; Spill load_f30_op244_t59_bank_val to slot 131
    ADD SC, FP, R0
    ADDI SC, SC, 141
    STORE T3, SB, SC
    LI T3, -2
    BEQ T5, T3, L_bc_454427bd_use_stack
    ADD T2, T5, R0
    BEQ R0, R0, L_bc_454427bd_done
L_bc_454427bd_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_454427bd_done
L_bc_454427bd_use_stack:
    ADD T2, SB, R0
L_bc_454427bd_done:
    STORE RV0, T2, S1
; Load instruction: t65 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op268_t65 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T3, S0, 1
    LOAD RV0, SB, T3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T6, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t66 to Dynamic("load_f30_op271_t65_bank_val")
; Spill store_f30_op246_resolved_bank_30_f30_op247 to slot 132
    ADD SC, FP, R0
    ADDI SC, SC, 142
    STORE T1, SB, SC
    LI T1, 0
; Spill t61 to slot 133
    ADD SC, FP, R0
    ADDI SC, SC, 143
    STORE S2, SB, SC
; Spill load_f30_op253_t61_bank_val to slot 134
    ADD SC, FP, R0
    ADDI SC, SC, 144
    STORE T4, SB, SC
; Spill t62 to slot 135
    ADD SC, FP, R0
    ADDI SC, SC, 145
    STORE T7, SB, SC
; Spill load_f30_op253_t61_bank_val to slot 136
    ADD SC, FP, R0
    ADDI SC, SC, 146
    STORE T4, SB, SC
    LI T7, -1
    BEQ RV0, T7, L_bc_57100772_use_global
; Spill load_f30_op253_t61_bank_val to slot 137
    ADD SC, FP, R0
    ADDI SC, SC, 147
    STORE T4, SB, SC
    LI T4, -2
    BEQ RV0, T4, L_bc_57100772_use_stack
    ADD S2, RV0, R0
    BEQ R0, R0, L_bc_57100772_done
L_bc_57100772_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_57100772_done
L_bc_57100772_use_stack:
    ADD S2, SB, R0
L_bc_57100772_done:
    STORE T1, S2, T3
; Load instruction: t67 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op278_t67 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T7
    LI T1, 1752
; Spill store_f30_op255_resolved_bank_30_f30_op256 to slot 138
    ADD SC, FP, R0
    ADDI SC, SC, 148
    STORE S3, SB, SC
; Spill t63 to slot 139
    ADD SC, FP, R0
    ADDI SC, SC, 149
    STORE T0, SB, SC
; Spill load_f30_op262_t63_bank_val to slot 140
    ADD SC, FP, R0
    ADDI SC, SC, 150
    STORE T5, SB, SC
    ADD T0, T4, R0
    ADD S3, T1, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t64 to slot 141
    ADD SC, FP, R0
    ADDI SC, SC, 151
    STORE S1, SB, SC
; Spill load_f30_op262_t63_bank_val to slot 142
    ADD SC, FP, R0
    ADDI SC, SC, 152
    STORE T5, SB, SC
; Spill load_f30_op262_t63_bank_val to slot 143
    ADD SC, FP, R0
    ADDI SC, SC, 153
    STORE T5, SB, SC
    LI T5, -1
    DIV S1, S3, T5
; Spill store_f30_op264_resolved_bank_30_f30_op265 to slot 144
    ADD SC, FP, R0
    ADDI SC, SC, 154
    STORE T2, SB, SC
    MOD T2, S3, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op285_t68'
; Computing new bank gep_new_bank_f30_op285_t68 = GP + bank_delta
    ADD S0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op285_t68)
    ADD S3, T2, R0
; GEP: Setting bank info for t68 to Dynamic("gep_new_bank_f30_op285_t68")
    LI T0, 1
    LI T5, -1
    BEQ S0, T5, L_bc_b305cb72_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_b305cb72_use_stack
    ADD S1, S0, R0
    BEQ R0, R0, L_bc_b305cb72_done
L_bc_b305cb72_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_b305cb72_done
L_bc_b305cb72_use_stack:
    ADD S1, SB, R0
L_bc_b305cb72_done:
    STORE T0, S1, S3
; Load instruction: t69 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op292_t69 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T1
    LI T2, 1802
; Spill t65 to slot 145
    ADD SC, FP, R0
    ADDI SC, SC, 155
    STORE T6, SB, SC
; Spill load_f30_op271_t65_bank_val to slot 146
    ADD SC, FP, R0
    ADDI SC, SC, 156
    STORE RV0, SB, SC
    ADD T6, T5, R0
    ADD T0, T2, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t66 to slot 147
    ADD SC, FP, R0
    ADDI SC, SC, 157
    STORE T3, SB, SC
; Spill load_f30_op271_t65_bank_val to slot 148
    ADD SC, FP, R0
    ADDI SC, SC, 158
    STORE RV0, SB, SC
; Spill load_f30_op271_t65_bank_val to slot 149
    ADD SC, FP, R0
    ADDI SC, SC, 159
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T3, T0, RV0
; Spill store_f30_op273_resolved_bank_30_f30_op274 to slot 150
    ADD SC, FP, R0
    ADDI SC, SC, 160
    STORE S2, SB, SC
    MOD S2, T0, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op299_t70'
; Spill load_f30_op277_t67_addr to slot 151
    ADD SC, FP, R0
    ADDI SC, SC, 161
    STORE T7, SB, SC
; Computing new bank gep_new_bank_f30_op299_t70 = GP + bank_delta
    ADD T7, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f30_op299_t70)
    ADD T0, S2, R0
; GEP: Setting bank info for t70 to Dynamic("gep_new_bank_f30_op299_t70")
    LI T6, 0
    LI RV0, -1
    BEQ T7, RV0, L_bc_2eb81734_use_global
    LI S2, -2
    BEQ T7, S2, L_bc_2eb81734_use_stack
    ADD T3, T7, R0
    BEQ R0, R0, L_bc_2eb81734_done
L_bc_2eb81734_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_2eb81734_done
L_bc_2eb81734_use_stack:
    ADD T3, SB, R0
L_bc_2eb81734_done:
    STORE T6, T3, T0
; Load instruction: t71 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op306_t71 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T2
    LI S2, 0
    ADD RV0, RV0, S2
; Load instruction: t73 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op309_t73 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T6
; Spill t67 to slot 152
    ADD SC, FP, R0
    ADDI SC, SC, 162
    STORE T4, SB, SC
    LI T4, 1
    ADD S2, S2, T4
    LI T4, 1852
    STORE S2, GP, T4
; Load instruction: t75 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op314_t75 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t68 to slot 153
    ADD SC, FP, R0
    ADDI SC, SC, 163
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op285_t68 to slot 154
    ADD SC, FP, R0
    ADDI SC, SC, 164
    STORE S0, SB, SC
    LOAD S3, GP, T4
; Spill live registers before call
; Spill gep_new_bank_f30_op285_t68 to slot 155
    ADD SC, FP, R0
    ADDI SC, SC, 165
    STORE S0, SB, SC
; Spill store_f30_op287_resolved_bank_30_f30_op288 to slot 156
    ADD SC, FP, R0
    ADDI SC, SC, 166
    STORE S1, SB, SC
; Spill load_f30_op291_t69_addr to slot 157
    ADD SC, FP, R0
    ADDI SC, SC, 167
    STORE T1, SB, SC
; Spill t69 to slot 158
    ADD SC, FP, R0
    ADDI SC, SC, 168
    STORE T5, SB, SC
; Spill t70 to slot 159
    ADD SC, FP, R0
    ADDI SC, SC, 169
    STORE T0, SB, SC
; Spill gep_new_bank_f30_op299_t70 to slot 160
    ADD SC, FP, R0
    ADDI SC, SC, 170
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op299_t70 to slot 161
    ADD SC, FP, R0
    ADDI SC, SC, 171
    STORE T7, SB, SC
; Spill store_f30_op301_resolved_bank_30_f30_op302 to slot 162
    ADD SC, FP, R0
    ADDI SC, SC, 172
    STORE T3, SB, SC
; Spill load_f30_op305_t71_addr to slot 163
    ADD SC, FP, R0
    ADDI SC, SC, 173
    STORE T2, SB, SC
; Spill t72 to slot 164
    ADD SC, FP, R0
    ADDI SC, SC, 174
    STORE RV0, SB, SC
; Spill load_f30_op308_t73_addr to slot 165
    ADD SC, FP, R0
    ADDI SC, SC, 175
    STORE T6, SB, SC
; Spill t74 to slot 166
    ADD SC, FP, R0
    ADDI SC, SC, 176
    STORE S2, SB, SC
; Spill load_f30_op313_t75_addr to slot 167
    ADD SC, FP, R0
    ADDI SC, SC, 177
    STORE T4, SB, SC
; Spill t75 to slot 168
    ADD SC, FP, R0
    ADDI SC, SC, 178
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t76
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S1, S0, 1
    STORE RV1, SB, S1
; Load instruction: t77 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op318_t77 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T5, S0, 1
    LOAD T0, SB, T5
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, T1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t78 to Dynamic("load_f30_op321_t77_bank_val")
    LI T3, 61
    LI T6, -1
    BEQ T0, T6, L_bc_97e22ea5_use_global
    LI S2, -2
    BEQ T0, S2, L_bc_97e22ea5_use_stack
    ADD T2, T0, R0
    BEQ R0, R0, L_bc_97e22ea5_done
L_bc_97e22ea5_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_97e22ea5_done
L_bc_97e22ea5_use_stack:
    ADD T2, SB, R0
L_bc_97e22ea5_done:
    STORE T3, T2, T7
; Load instruction: t79 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op327_t79 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI S3, S0, 1
    LOAD S1, SB, S3
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, T4, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t80 to Dynamic("load_f30_op330_t79_bank_val")
    LI T6, 0
    LI T3, -1
    BEQ S1, T3, L_bc_30ac00bc_use_global
    LI S3, -2
    BEQ S1, S3, L_bc_30ac00bc_use_stack
    ADD S2, S1, R0
    BEQ R0, R0, L_bc_30ac00bc_done
L_bc_30ac00bc_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_30ac00bc_done
L_bc_30ac00bc_use_stack:
    ADD S2, SB, R0
L_bc_30ac00bc_done:
    STORE T6, S2, T5
; Load instruction: t81 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op337_t81 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T3
    LI T6, 1752
; Spill t76 to slot 169
    ADD SC, FP, R0
    ADDI SC, SC, 179
    STORE RV0, SB, SC
; Spill t77 to slot 170
    ADD SC, FP, R0
    ADDI SC, SC, 180
    STORE T1, SB, SC
; Spill load_f30_op321_t77_bank_val to slot 171
    ADD SC, FP, R0
    ADDI SC, SC, 181
    STORE T0, SB, SC
    ADD T1, S3, R0
    ADD RV0, T6, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill t78 to slot 172
    ADD SC, FP, R0
    ADDI SC, SC, 182
    STORE T7, SB, SC
; Spill load_f30_op321_t77_bank_val to slot 173
    ADD SC, FP, R0
    ADDI SC, SC, 183
    STORE T0, SB, SC
; Spill load_f30_op321_t77_bank_val to slot 174
    ADD SC, FP, R0
    ADDI SC, SC, 184
    STORE T0, SB, SC
    LI T0, -1
    DIV T7, RV0, T0
; Spill store_f30_op323_resolved_bank_30_f30_op324 to slot 175
    ADD SC, FP, R0
    ADDI SC, SC, 185
    STORE T2, SB, SC
    MOD T2, RV0, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op344_t82'
; Computing new bank gep_new_bank_f30_op344_t82 = GP + bank_delta
    ADD S0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op344_t82)
    ADD RV0, T2, R0
; GEP: Setting bank info for t82 to Dynamic("gep_new_bank_f30_op344_t82")
    LI T1, 1
    LI T0, -1
    BEQ S0, T0, L_bc_fd88b528_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_fd88b528_use_stack
    ADD T7, S0, R0
    BEQ R0, R0, L_bc_fd88b528_done
L_bc_fd88b528_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_fd88b528_done
L_bc_fd88b528_use_stack:
    ADD T7, SB, R0
L_bc_fd88b528_done:
    STORE T1, T7, RV0
; Load instruction: t83 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op351_t83 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T6
    LI T2, 1802
; Spill t79 to slot 176
    ADD SC, FP, R0
    ADDI SC, SC, 186
    STORE T4, SB, SC
; Spill load_f30_op330_t79_bank_val to slot 177
    ADD SC, FP, R0
    ADDI SC, SC, 187
    STORE S1, SB, SC
    ADD T4, T0, R0
    ADD T1, T2, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t80 to slot 178
    ADD SC, FP, R0
    ADDI SC, SC, 188
    STORE T5, SB, SC
; Spill load_f30_op330_t79_bank_val to slot 179
    ADD SC, FP, R0
    ADDI SC, SC, 189
    STORE S1, SB, SC
; Spill load_f30_op330_t79_bank_val to slot 180
    ADD SC, FP, R0
    ADDI SC, SC, 190
    STORE S1, SB, SC
    LI S1, -1
    DIV T5, T1, S1
; Spill store_f30_op332_resolved_bank_30_f30_op333 to slot 181
    ADD SC, FP, R0
    ADDI SC, SC, 191
    STORE S2, SB, SC
    MOD S2, T1, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op358_t84'
; Spill load_f30_op336_t81_addr to slot 182
    ADD SC, FP, R0
    ADDI SC, SC, 192
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f30_op358_t84 = GP + bank_delta
    ADD T3, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f30_op358_t84)
    ADD T1, S2, R0
; GEP: Setting bank info for t84 to Dynamic("gep_new_bank_f30_op358_t84")
    LI T4, 0
    LI S1, -1
    BEQ T3, S1, L_bc_df2275e0_use_global
    LI S2, -2
    BEQ T3, S2, L_bc_df2275e0_use_stack
    ADD T5, T3, R0
    BEQ R0, R0, L_bc_df2275e0_done
L_bc_df2275e0_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_df2275e0_done
L_bc_df2275e0_use_stack:
    ADD T5, SB, R0
L_bc_df2275e0_done:
    STORE T4, T5, T1
; Load instruction: t85 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op365_t85 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T2
    LI S2, 0
    ADD S1, S1, S2
; Load instruction: t87 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op368_t87 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T4
; Spill t81 to slot 183
    ADD SC, FP, R0
    ADDI SC, SC, 193
    STORE S3, SB, SC
    LI S3, 1
    ADD S2, S2, S3
    LI S3, 1852
    STORE S2, GP, S3
; Load instruction: t89 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op373_t89 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t82 to slot 184
    ADD SC, FP, R0
    ADDI SC, SC, 194
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op344_t82 to slot 185
    ADD SC, FP, R0
    ADDI SC, SC, 195
    STORE S0, SB, SC
    LOAD RV0, GP, S3
; Spill live registers before call
; Spill gep_new_bank_f30_op344_t82 to slot 186
    ADD SC, FP, R0
    ADDI SC, SC, 196
    STORE S0, SB, SC
; Spill store_f30_op346_resolved_bank_30_f30_op347 to slot 187
    ADD SC, FP, R0
    ADDI SC, SC, 197
    STORE T7, SB, SC
; Spill load_f30_op350_t83_addr to slot 188
    ADD SC, FP, R0
    ADDI SC, SC, 198
    STORE T6, SB, SC
; Spill t83 to slot 189
    ADD SC, FP, R0
    ADDI SC, SC, 199
    STORE T0, SB, SC
; Spill t84 to slot 190
    ADD SC, FP, R0
    ADDI SC, SC, 200
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op358_t84 to slot 191
    ADD SC, FP, R0
    ADDI SC, SC, 201
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op358_t84 to slot 192
    ADD SC, FP, R0
    ADDI SC, SC, 202
    STORE T3, SB, SC
; Spill store_f30_op360_resolved_bank_30_f30_op361 to slot 193
    ADD SC, FP, R0
    ADDI SC, SC, 203
    STORE T5, SB, SC
; Spill load_f30_op364_t85_addr to slot 194
    ADD SC, FP, R0
    ADDI SC, SC, 204
    STORE T2, SB, SC
; Spill t86 to slot 195
    ADD SC, FP, R0
    ADDI SC, SC, 205
    STORE S1, SB, SC
; Spill load_f30_op367_t87_addr to slot 196
    ADD SC, FP, R0
    ADDI SC, SC, 206
    STORE T4, SB, SC
; Spill t88 to slot 197
    ADD SC, FP, R0
    ADDI SC, SC, 207
    STORE S2, SB, SC
; Spill load_f30_op372_t89_addr to slot 198
    ADD SC, FP, R0
    ADDI SC, SC, 208
    STORE S3, SB, SC
; Spill t89 to slot 199
    ADD SC, FP, R0
    ADDI SC, SC, 209
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t90
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T7, S0, 1
    STORE RV1, SB, T7
; Load instruction: t91 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op377_t91 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T0, S0, 1
    LOAD T1, SB, T0
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T3, T6, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t92 to Dynamic("load_f30_op380_t91_bank_val")
    LI T5, 60
    LI S1, -1
    BEQ T1, S1, L_bc_d83f7b05_use_global
    LI T4, -2
    BEQ T1, T4, L_bc_d83f7b05_use_stack
    ADD T2, T1, R0
    BEQ R0, R0, L_bc_d83f7b05_done
L_bc_d83f7b05_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_d83f7b05_done
L_bc_d83f7b05_use_stack:
    ADD T2, SB, R0
L_bc_d83f7b05_done:
    STORE T5, T2, T3
; Load instruction: t93 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op386_t93 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI S3, S0, 1
    LOAD T7, SB, S3
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T0, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t94 to Dynamic("load_f30_op389_t93_bank_val")
    LI S1, 0
    LI T5, -1
    BEQ T7, T5, L_bc_552ae404_use_global
    LI S3, -2
    BEQ T7, S3, L_bc_552ae404_use_stack
    ADD T4, T7, R0
    BEQ R0, R0, L_bc_552ae404_done
L_bc_552ae404_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_552ae404_done
L_bc_552ae404_use_stack:
    ADD T4, SB, R0
L_bc_552ae404_done:
    STORE S1, T4, T0
; Load instruction: t95 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op396_t95 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T5
    LI S1, 1752
; Spill t90 to slot 200
    ADD SC, FP, R0
    ADDI SC, SC, 210
    STORE RV0, SB, SC
; Spill t91 to slot 201
    ADD SC, FP, R0
    ADDI SC, SC, 211
    STORE T6, SB, SC
; Spill load_f30_op380_t91_bank_val to slot 202
    ADD SC, FP, R0
    ADDI SC, SC, 212
    STORE T1, SB, SC
    ADD T6, S3, R0
    ADD RV0, S1, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t92 to slot 203
    ADD SC, FP, R0
    ADDI SC, SC, 213
    STORE T3, SB, SC
; Spill load_f30_op380_t91_bank_val to slot 204
    ADD SC, FP, R0
    ADDI SC, SC, 214
    STORE T1, SB, SC
; Spill load_f30_op380_t91_bank_val to slot 205
    ADD SC, FP, R0
    ADDI SC, SC, 215
    STORE T1, SB, SC
    LI T1, -1
    DIV T3, RV0, T1
; Spill store_f30_op382_resolved_bank_30_f30_op383 to slot 206
    ADD SC, FP, R0
    ADDI SC, SC, 216
    STORE T2, SB, SC
    MOD T2, RV0, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op403_t96'
; Computing new bank gep_new_bank_f30_op403_t96 = GP + bank_delta
    ADD S0, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f30_op403_t96)
    ADD RV0, T2, R0
; GEP: Setting bank info for t96 to Dynamic("gep_new_bank_f30_op403_t96")
    LI T6, 1
    LI T1, -1
    BEQ S0, T1, L_bc_108629c5_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_108629c5_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_108629c5_done
L_bc_108629c5_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_108629c5_done
L_bc_108629c5_use_stack:
    ADD T3, SB, R0
L_bc_108629c5_done:
    STORE T6, T3, RV0
; Load instruction: t97 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op410_t97 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S1
    LI T2, 1802
; Spill t93 to slot 207
    ADD SC, FP, R0
    ADDI SC, SC, 217
    STORE S2, SB, SC
; Spill load_f30_op389_t93_bank_val to slot 208
    ADD SC, FP, R0
    ADDI SC, SC, 218
    STORE T7, SB, SC
    ADD S2, T1, R0
    ADD T6, T2, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t94 to slot 209
    ADD SC, FP, R0
    ADDI SC, SC, 219
    STORE T0, SB, SC
; Spill load_f30_op389_t93_bank_val to slot 210
    ADD SC, FP, R0
    ADDI SC, SC, 220
    STORE T7, SB, SC
; Spill load_f30_op389_t93_bank_val to slot 211
    ADD SC, FP, R0
    ADDI SC, SC, 221
    STORE T7, SB, SC
    LI T7, -1
    DIV T0, T6, T7
; Spill store_f30_op391_resolved_bank_30_f30_op392 to slot 212
    ADD SC, FP, R0
    ADDI SC, SC, 222
    STORE T4, SB, SC
    MOD T4, T6, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op417_t98'
; Spill load_f30_op395_t95_addr to slot 213
    ADD SC, FP, R0
    ADDI SC, SC, 223
    STORE T5, SB, SC
; Computing new bank gep_new_bank_f30_op417_t98 = GP + bank_delta
    ADD T5, GP, T0
; Result bank tracked as Dynamic(gep_new_bank_f30_op417_t98)
    ADD T6, T4, R0
; GEP: Setting bank info for t98 to Dynamic("gep_new_bank_f30_op417_t98")
    LI S2, 0
    LI T7, -1
    BEQ T5, T7, L_bc_decf27d6_use_global
    LI T4, -2
    BEQ T5, T4, L_bc_decf27d6_use_stack
    ADD T0, T5, R0
    BEQ R0, R0, L_bc_decf27d6_done
L_bc_decf27d6_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_decf27d6_done
L_bc_decf27d6_use_stack:
    ADD T0, SB, R0
L_bc_decf27d6_done:
    STORE S2, T0, T6
; Load instruction: t99 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op424_t99 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T2
    LI T4, 0
    ADD T7, T7, T4
; Load instruction: t101 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op427_t101 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, S2
; Spill t95 to slot 214
    ADD SC, FP, R0
    ADDI SC, SC, 224
    STORE S3, SB, SC
    LI S3, 1
    ADD T4, T4, S3
    LI S3, 1852
    STORE T4, GP, S3
; Load instruction: t103 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op432_t103 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t96 to slot 215
    ADD SC, FP, R0
    ADDI SC, SC, 225
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op403_t96 to slot 216
    ADD SC, FP, R0
    ADDI SC, SC, 226
    STORE S0, SB, SC
    LOAD RV0, GP, S3
; Spill live registers before call
; Spill gep_new_bank_f30_op403_t96 to slot 217
    ADD SC, FP, R0
    ADDI SC, SC, 227
    STORE S0, SB, SC
; Spill store_f30_op405_resolved_bank_30_f30_op406 to slot 218
    ADD SC, FP, R0
    ADDI SC, SC, 228
    STORE T3, SB, SC
; Spill load_f30_op409_t97_addr to slot 219
    ADD SC, FP, R0
    ADDI SC, SC, 229
    STORE S1, SB, SC
; Spill t97 to slot 220
    ADD SC, FP, R0
    ADDI SC, SC, 230
    STORE T1, SB, SC
; Spill t98 to slot 221
    ADD SC, FP, R0
    ADDI SC, SC, 231
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op417_t98 to slot 222
    ADD SC, FP, R0
    ADDI SC, SC, 232
    STORE T5, SB, SC
; Spill gep_new_bank_f30_op417_t98 to slot 223
    ADD SC, FP, R0
    ADDI SC, SC, 233
    STORE T5, SB, SC
; Spill store_f30_op419_resolved_bank_30_f30_op420 to slot 224
    ADD SC, FP, R0
    ADDI SC, SC, 234
    STORE T0, SB, SC
; Spill load_f30_op423_t99_addr to slot 225
    ADD SC, FP, R0
    ADDI SC, SC, 235
    STORE T2, SB, SC
; Spill t100 to slot 226
    ADD SC, FP, R0
    ADDI SC, SC, 236
    STORE T7, SB, SC
; Spill load_f30_op426_t101_addr to slot 227
    ADD SC, FP, R0
    ADDI SC, SC, 237
    STORE S2, SB, SC
; Spill t102 to slot 228
    ADD SC, FP, R0
    ADDI SC, SC, 238
    STORE T4, SB, SC
; Spill load_f30_op431_t103_addr to slot 229
    ADD SC, FP, R0
    ADDI SC, SC, 239
    STORE S3, SB, SC
; Spill t103 to slot 230
    ADD SC, FP, R0
    ADDI SC, SC, 240
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t104
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T3, S0, 1
    STORE RV1, SB, T3
; Load instruction: t105 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op436_t105 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI T1, S0, 1
    LOAD T6, SB, T1
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T5, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t106 to Dynamic("load_f30_op439_t105_bank_val")
    LI T0, 62
    LI T7, -1
    BEQ T6, T7, L_bc_fcde05dc_use_global
    LI S2, -2
    BEQ T6, S2, L_bc_fcde05dc_use_stack
    ADD T2, T6, R0
    BEQ R0, R0, L_bc_fcde05dc_done
L_bc_fcde05dc_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_fcde05dc_done
L_bc_fcde05dc_use_stack:
    ADD T2, SB, R0
L_bc_fcde05dc_done:
    STORE T0, T2, T5
; Load instruction: t107 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op445_t107 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI S3, S0, 1
    LOAD T3, SB, S3
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T4, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t108 to Dynamic("load_f30_op448_t107_bank_val")
    LI T7, 0
    LI T0, -1
    BEQ T3, T0, L_bc_ceb958fd_use_global
    LI S3, -2
    BEQ T3, S3, L_bc_ceb958fd_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_ceb958fd_done
L_bc_ceb958fd_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_ceb958fd_done
L_bc_ceb958fd_use_stack:
    ADD S2, SB, R0
L_bc_ceb958fd_done:
    STORE T7, S2, T1
; Load instruction: t109 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op455_t109 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T0
    LI T7, 1752
; Spill t104 to slot 231
    ADD SC, FP, R0
    ADDI SC, SC, 241
    STORE RV0, SB, SC
; Spill t105 to slot 232
    ADD SC, FP, R0
    ADDI SC, SC, 242
    STORE S1, SB, SC
; Spill load_f30_op439_t105_bank_val to slot 233
    ADD SC, FP, R0
    ADDI SC, SC, 243
    STORE T6, SB, SC
    ADD S1, S3, R0
    ADD RV0, T7, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t106 to slot 234
    ADD SC, FP, R0
    ADDI SC, SC, 244
    STORE T5, SB, SC
; Spill load_f30_op439_t105_bank_val to slot 235
    ADD SC, FP, R0
    ADDI SC, SC, 245
    STORE T6, SB, SC
; Spill load_f30_op439_t105_bank_val to slot 236
    ADD SC, FP, R0
    ADDI SC, SC, 246
    STORE T6, SB, SC
    LI T6, -1
    DIV T5, RV0, T6
; Spill store_f30_op441_resolved_bank_30_f30_op442 to slot 237
    ADD SC, FP, R0
    ADDI SC, SC, 247
    STORE T2, SB, SC
    MOD T2, RV0, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op462_t110'
; Computing new bank gep_new_bank_f30_op462_t110 = GP + bank_delta
    ADD S0, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f30_op462_t110)
    ADD RV0, T2, R0
; GEP: Setting bank info for t110 to Dynamic("gep_new_bank_f30_op462_t110")
    LI S1, 1
    LI T6, -1
    BEQ S0, T6, L_bc_ae9d4ca9_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_ae9d4ca9_use_stack
    ADD T5, S0, R0
    BEQ R0, R0, L_bc_ae9d4ca9_done
L_bc_ae9d4ca9_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_ae9d4ca9_done
L_bc_ae9d4ca9_use_stack:
    ADD T5, SB, R0
L_bc_ae9d4ca9_done:
    STORE S1, T5, RV0
; Load instruction: t111 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op469_t111 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T7
    LI T2, 1802
; Spill t107 to slot 238
    ADD SC, FP, R0
    ADDI SC, SC, 248
    STORE T4, SB, SC
; Spill load_f30_op448_t107_bank_val to slot 239
    ADD SC, FP, R0
    ADDI SC, SC, 249
    STORE T3, SB, SC
    ADD T4, T6, R0
    ADD S1, T2, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t108 to slot 240
    ADD SC, FP, R0
    ADDI SC, SC, 250
    STORE T1, SB, SC
; Spill load_f30_op448_t107_bank_val to slot 241
    ADD SC, FP, R0
    ADDI SC, SC, 251
    STORE T3, SB, SC
; Spill load_f30_op448_t107_bank_val to slot 242
    ADD SC, FP, R0
    ADDI SC, SC, 252
    STORE T3, SB, SC
    LI T3, -1
    DIV T1, S1, T3
; Spill store_f30_op450_resolved_bank_30_f30_op451 to slot 243
    ADD SC, FP, R0
    ADDI SC, SC, 253
    STORE S2, SB, SC
    MOD S2, S1, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op476_t112'
; Spill load_f30_op454_t109_addr to slot 244
    ADD SC, FP, R0
    ADDI SC, SC, 254
    STORE T0, SB, SC
; Computing new bank gep_new_bank_f30_op476_t112 = GP + bank_delta
    ADD T0, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f30_op476_t112)
    ADD S1, S2, R0
; GEP: Setting bank info for t112 to Dynamic("gep_new_bank_f30_op476_t112")
    LI T4, 0
    LI T3, -1
    BEQ T0, T3, L_bc_a178589b_use_global
    LI S2, -2
    BEQ T0, S2, L_bc_a178589b_use_stack
    ADD T1, T0, R0
    BEQ R0, R0, L_bc_a178589b_done
L_bc_a178589b_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_a178589b_done
L_bc_a178589b_use_stack:
    ADD T1, SB, R0
L_bc_a178589b_done:
    STORE T4, T1, S1
; Load instruction: t113 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op483_t113 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T2
    LI S2, 0
    ADD T3, T3, S2
; Load instruction: t115 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op486_t115 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T4
; Spill t109 to slot 245
    ADD SC, FP, R0
    ADDI SC, SC, 255
    STORE S3, SB, SC
    LI S3, 1
    ADD S2, S2, S3
    LI S3, 1852
    STORE S2, GP, S3
; Load instruction: t117 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op491_t117 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t110 to slot 246
    ADD SC, FP, R0
    ADDI SC, SC, 256
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op462_t110 to slot 247
    ADD SC, FP, R0
    ADDI SC, SC, 257
    STORE S0, SB, SC
    LOAD RV0, GP, S3
; Spill live registers before call
; Spill gep_new_bank_f30_op462_t110 to slot 248
    ADD SC, FP, R0
    ADDI SC, SC, 258
    STORE S0, SB, SC
; Spill store_f30_op464_resolved_bank_30_f30_op465 to slot 249
    ADD SC, FP, R0
    ADDI SC, SC, 259
    STORE T5, SB, SC
; Spill load_f30_op468_t111_addr to slot 250
    ADD SC, FP, R0
    ADDI SC, SC, 260
    STORE T7, SB, SC
; Spill t111 to slot 251
    ADD SC, FP, R0
    ADDI SC, SC, 261
    STORE T6, SB, SC
; Spill t112 to slot 252
    ADD SC, FP, R0
    ADDI SC, SC, 262
    STORE S1, SB, SC
; Spill gep_new_bank_f30_op476_t112 to slot 253
    ADD SC, FP, R0
    ADDI SC, SC, 263
    STORE T0, SB, SC
; Spill gep_new_bank_f30_op476_t112 to slot 254
    ADD SC, FP, R0
    ADDI SC, SC, 264
    STORE T0, SB, SC
; Spill store_f30_op478_resolved_bank_30_f30_op479 to slot 255
    ADD SC, FP, R0
    ADDI SC, SC, 265
    STORE T1, SB, SC
; Spill load_f30_op482_t113_addr to slot 256
    ADD SC, FP, R0
    ADDI SC, SC, 266
    STORE T2, SB, SC
; Spill t114 to slot 257
    ADD SC, FP, R0
    ADDI SC, SC, 267
    STORE T3, SB, SC
; Spill load_f30_op485_t115_addr to slot 258
    ADD SC, FP, R0
    ADDI SC, SC, 268
    STORE T4, SB, SC
; Spill t116 to slot 259
    ADD SC, FP, R0
    ADDI SC, SC, 269
    STORE S2, SB, SC
; Spill load_f30_op490_t117_addr to slot 260
    ADD SC, FP, R0
    ADDI SC, SC, 270
    STORE S3, SB, SC
; Spill t117 to slot 261
    ADD SC, FP, R0
    ADDI SC, SC, 271
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t118
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T5, S0, 1
    STORE RV1, SB, T5
; Load instruction: t119 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op495_t119 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T6, S0, 1
    LOAD S1, SB, T6
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T0, T7, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t120 to Dynamic("load_f30_op498_t119_bank_val")
    LI T1, 68
    LI T3, -1
    BEQ S1, T3, L_bc_3c14615a_use_global
    LI T4, -2
    BEQ S1, T4, L_bc_3c14615a_use_stack
    ADD T2, S1, R0
    BEQ R0, R0, L_bc_3c14615a_done
L_bc_3c14615a_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_3c14615a_done
L_bc_3c14615a_use_stack:
    ADD T2, SB, R0
L_bc_3c14615a_done:
    STORE T1, T2, T0
; Load instruction: t121 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op504_t121 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI S3, S0, 1
    LOAD T5, SB, S3
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t122 to Dynamic("load_f30_op507_t121_bank_val")
    LI T3, 85
    LI T1, -1
    BEQ T5, T1, L_bc_2442143f_use_global
    LI S3, -2
    BEQ T5, S3, L_bc_2442143f_use_stack
    ADD T4, T5, R0
    BEQ R0, R0, L_bc_2442143f_done
L_bc_2442143f_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_2442143f_done
L_bc_2442143f_use_stack:
    ADD T4, SB, R0
L_bc_2442143f_done:
    STORE T3, T4, T6
; Load instruction: t123 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op513_t123 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI S3, S0, 1
    LOAD T3, SB, S3
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T1, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t124 to Dynamic("load_f30_op516_t123_bank_val")
; Spill t118 to slot 262
    ADD SC, FP, R0
    ADDI SC, SC, 272
    STORE RV0, SB, SC
    LI RV0, 80
; Spill t119 to slot 263
    ADD SC, FP, R0
    ADDI SC, SC, 273
    STORE T7, SB, SC
; Spill load_f30_op498_t119_bank_val to slot 264
    ADD SC, FP, R0
    ADDI SC, SC, 274
    STORE S1, SB, SC
; Spill t120 to slot 265
    ADD SC, FP, R0
    ADDI SC, SC, 275
    STORE T0, SB, SC
; Spill load_f30_op498_t119_bank_val to slot 266
    ADD SC, FP, R0
    ADDI SC, SC, 276
    STORE S1, SB, SC
    LI T0, -1
    BEQ T3, T0, L_bc_c67fc933_use_global
; Spill load_f30_op498_t119_bank_val to slot 267
    ADD SC, FP, R0
    ADDI SC, SC, 277
    STORE S1, SB, SC
    LI S1, -2
    BEQ T3, S1, L_bc_c67fc933_use_stack
    ADD T7, T3, R0
    BEQ R0, R0, L_bc_c67fc933_done
L_bc_c67fc933_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_c67fc933_done
L_bc_c67fc933_use_stack:
    ADD T7, SB, R0
L_bc_c67fc933_done:
    STORE RV0, T7, S3
; Load instruction: t125 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op522_t125 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S1, S0, 1
    LOAD RV0, SB, S1
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, T0, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t126 to Dynamic("load_f30_op525_t125_bank_val")
; Spill store_f30_op500_resolved_bank_30_f30_op501 to slot 268
    ADD SC, FP, R0
    ADDI SC, SC, 278
    STORE T2, SB, SC
    LI T2, 0
; Spill t121 to slot 269
    ADD SC, FP, R0
    ADDI SC, SC, 279
    STORE S2, SB, SC
; Spill load_f30_op507_t121_bank_val to slot 270
    ADD SC, FP, R0
    ADDI SC, SC, 280
    STORE T5, SB, SC
; Spill t122 to slot 271
    ADD SC, FP, R0
    ADDI SC, SC, 281
    STORE T6, SB, SC
; Spill load_f30_op507_t121_bank_val to slot 272
    ADD SC, FP, R0
    ADDI SC, SC, 282
    STORE T5, SB, SC
    LI T6, -1
    BEQ RV0, T6, L_bc_4efa360b_use_global
; Spill load_f30_op507_t121_bank_val to slot 273
    ADD SC, FP, R0
    ADDI SC, SC, 283
    STORE T5, SB, SC
    LI T5, -2
    BEQ RV0, T5, L_bc_4efa360b_use_stack
    ADD S2, RV0, R0
    BEQ R0, R0, L_bc_4efa360b_done
L_bc_4efa360b_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_4efa360b_done
L_bc_4efa360b_use_stack:
    ADD S2, SB, R0
L_bc_4efa360b_done:
    STORE T2, S2, S1
; Load instruction: t127 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op532_t127 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    LI T2, 1752
; Spill store_f30_op509_resolved_bank_30_f30_op510 to slot 274
    ADD SC, FP, R0
    ADDI SC, SC, 284
    STORE T4, SB, SC
; Spill t123 to slot 275
    ADD SC, FP, R0
    ADDI SC, SC, 285
    STORE T1, SB, SC
; Spill load_f30_op516_t123_bank_val to slot 276
    ADD SC, FP, R0
    ADDI SC, SC, 286
    STORE T3, SB, SC
    ADD T1, T5, R0
    ADD T4, T2, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill t124 to slot 277
    ADD SC, FP, R0
    ADDI SC, SC, 287
    STORE S3, SB, SC
; Spill load_f30_op516_t123_bank_val to slot 278
    ADD SC, FP, R0
    ADDI SC, SC, 288
    STORE T3, SB, SC
; Spill load_f30_op516_t123_bank_val to slot 279
    ADD SC, FP, R0
    ADDI SC, SC, 289
    STORE T3, SB, SC
    LI T3, -1
    DIV S3, T4, T3
; Spill store_f30_op518_resolved_bank_30_f30_op519 to slot 280
    ADD SC, FP, R0
    ADDI SC, SC, 290
    STORE T7, SB, SC
    MOD T7, T4, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op539_t128'
; Computing new bank gep_new_bank_f30_op539_t128 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op539_t128)
    ADD T4, T7, R0
; GEP: Setting bank info for t128 to Dynamic("gep_new_bank_f30_op539_t128")
    LI T1, 1
    LI T3, -1
    BEQ S0, T3, L_bc_a5cb1bb5_use_global
    LI T7, -2
    BEQ S0, T7, L_bc_a5cb1bb5_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_a5cb1bb5_done
L_bc_a5cb1bb5_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_a5cb1bb5_done
L_bc_a5cb1bb5_use_stack:
    ADD S3, SB, R0
L_bc_a5cb1bb5_done:
    STORE T1, S3, T4
; Load instruction: t129 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op546_t129 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T2
    LI T7, 1802
; Spill t125 to slot 281
    ADD SC, FP, R0
    ADDI SC, SC, 291
    STORE T0, SB, SC
; Spill load_f30_op525_t125_bank_val to slot 282
    ADD SC, FP, R0
    ADDI SC, SC, 292
    STORE RV0, SB, SC
    ADD T0, T3, R0
    ADD T1, T7, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t126 to slot 283
    ADD SC, FP, R0
    ADDI SC, SC, 293
    STORE S1, SB, SC
; Spill load_f30_op525_t125_bank_val to slot 284
    ADD SC, FP, R0
    ADDI SC, SC, 294
    STORE RV0, SB, SC
; Spill load_f30_op525_t125_bank_val to slot 285
    ADD SC, FP, R0
    ADDI SC, SC, 295
    STORE RV0, SB, SC
    LI RV0, -1
    DIV S1, T1, RV0
; Spill store_f30_op527_resolved_bank_30_f30_op528 to slot 286
    ADD SC, FP, R0
    ADDI SC, SC, 296
    STORE S2, SB, SC
    MOD S2, T1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op553_t130'
; Spill load_f30_op531_t127_addr to slot 287
    ADD SC, FP, R0
    ADDI SC, SC, 297
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f30_op553_t130 = GP + bank_delta
    ADD T6, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op553_t130)
    ADD T1, S2, R0
; GEP: Setting bank info for t130 to Dynamic("gep_new_bank_f30_op553_t130")
    LI T0, 0
    LI RV0, -1
    BEQ T6, RV0, L_bc_f2146ed1_use_global
    LI S2, -2
    BEQ T6, S2, L_bc_f2146ed1_use_stack
    ADD S1, T6, R0
    BEQ R0, R0, L_bc_f2146ed1_done
L_bc_f2146ed1_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_f2146ed1_done
L_bc_f2146ed1_use_stack:
    ADD S1, SB, R0
L_bc_f2146ed1_done:
    STORE T0, S1, T1
; Load instruction: t131 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op560_t131 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T7
    LI S2, 0
    ADD RV0, RV0, S2
; Load instruction: t133 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op563_t133 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T0
; Spill t127 to slot 288
    ADD SC, FP, R0
    ADDI SC, SC, 298
    STORE T5, SB, SC
    LI T5, 1
    ADD S2, S2, T5
    LI T5, 1852
    STORE S2, GP, T5
; Load instruction: t135 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op568_t135 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t128 to slot 289
    ADD SC, FP, R0
    ADDI SC, SC, 299
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op539_t128 to slot 290
    ADD SC, FP, R0
    ADDI SC, SC, 300
    STORE S0, SB, SC
    LOAD T4, GP, T5
; Spill live registers before call
; Spill gep_new_bank_f30_op539_t128 to slot 291
    ADD SC, FP, R0
    ADDI SC, SC, 301
    STORE S0, SB, SC
; Spill store_f30_op541_resolved_bank_30_f30_op542 to slot 292
    ADD SC, FP, R0
    ADDI SC, SC, 302
    STORE S3, SB, SC
; Spill load_f30_op545_t129_addr to slot 293
    ADD SC, FP, R0
    ADDI SC, SC, 303
    STORE T2, SB, SC
; Spill t129 to slot 294
    ADD SC, FP, R0
    ADDI SC, SC, 304
    STORE T3, SB, SC
; Spill t130 to slot 295
    ADD SC, FP, R0
    ADDI SC, SC, 305
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op553_t130 to slot 296
    ADD SC, FP, R0
    ADDI SC, SC, 306
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op553_t130 to slot 297
    ADD SC, FP, R0
    ADDI SC, SC, 307
    STORE T6, SB, SC
; Spill store_f30_op555_resolved_bank_30_f30_op556 to slot 298
    ADD SC, FP, R0
    ADDI SC, SC, 308
    STORE S1, SB, SC
; Spill load_f30_op559_t131_addr to slot 299
    ADD SC, FP, R0
    ADDI SC, SC, 309
    STORE T7, SB, SC
; Spill t132 to slot 300
    ADD SC, FP, R0
    ADDI SC, SC, 310
    STORE RV0, SB, SC
; Spill load_f30_op562_t133_addr to slot 301
    ADD SC, FP, R0
    ADDI SC, SC, 311
    STORE T0, SB, SC
; Spill t134 to slot 302
    ADD SC, FP, R0
    ADDI SC, SC, 312
    STORE S2, SB, SC
; Spill load_f30_op567_t135_addr to slot 303
    ADD SC, FP, R0
    ADDI SC, SC, 313
    STORE T5, SB, SC
; Spill t135 to slot 304
    ADD SC, FP, R0
    ADDI SC, SC, 314
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t136
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S3, S0, 1
    STORE RV1, SB, S3
; Load instruction: t137 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op572_t137 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T3, S0, 1
    LOAD T1, SB, T3
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T6, T2, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t138 to Dynamic("load_f30_op575_t137_bank_val")
    LI S1, 68
    LI T0, -1
    BEQ T1, T0, L_bc_2b4a5ff1_use_global
    LI S2, -2
    BEQ T1, S2, L_bc_2b4a5ff1_use_stack
    ADD T7, T1, R0
    BEQ R0, R0, L_bc_2b4a5ff1_done
L_bc_2b4a5ff1_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_2b4a5ff1_done
L_bc_2b4a5ff1_use_stack:
    ADD T7, SB, R0
L_bc_2b4a5ff1_done:
    STORE S1, T7, T6
; Load instruction: t139 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op581_t139 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T4, S0, 1
    LOAD S3, SB, T4
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T5, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t140 to Dynamic("load_f30_op584_t139_bank_val")
    LI T0, 82
    LI S1, -1
    BEQ S3, S1, L_bc_6b11adb3_use_global
    LI T4, -2
    BEQ S3, T4, L_bc_6b11adb3_use_stack
    ADD S2, S3, R0
    BEQ R0, R0, L_bc_6b11adb3_done
L_bc_6b11adb3_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_6b11adb3_done
L_bc_6b11adb3_use_stack:
    ADD S2, SB, R0
L_bc_6b11adb3_done:
    STORE T0, S2, T3
; Load instruction: t141 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op590_t141 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI T4, S0, 1
    LOAD T0, SB, T4
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S1, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t142 to Dynamic("load_f30_op593_t141_bank_val")
; Spill t136 to slot 305
    ADD SC, FP, R0
    ADDI SC, SC, 315
    STORE RV0, SB, SC
    LI RV0, 79
; Spill t137 to slot 306
    ADD SC, FP, R0
    ADDI SC, SC, 316
    STORE T2, SB, SC
; Spill load_f30_op575_t137_bank_val to slot 307
    ADD SC, FP, R0
    ADDI SC, SC, 317
    STORE T1, SB, SC
; Spill t138 to slot 308
    ADD SC, FP, R0
    ADDI SC, SC, 318
    STORE T6, SB, SC
; Spill load_f30_op575_t137_bank_val to slot 309
    ADD SC, FP, R0
    ADDI SC, SC, 319
    STORE T1, SB, SC
    LI T6, -1
    BEQ T0, T6, L_bc_8f75ee0d_use_global
; Spill load_f30_op575_t137_bank_val to slot 310
    ADD SC, FP, R0
    ADDI SC, SC, 320
    STORE T1, SB, SC
    LI T1, -2
    BEQ T0, T1, L_bc_8f75ee0d_use_stack
    ADD T2, T0, R0
    BEQ R0, R0, L_bc_8f75ee0d_done
L_bc_8f75ee0d_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_8f75ee0d_done
L_bc_8f75ee0d_use_stack:
    ADD T2, SB, R0
L_bc_8f75ee0d_done:
    STORE RV0, T2, T4
; Load instruction: t143 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op599_t143 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T1, S0, 1
    LOAD RV0, SB, T1
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T6, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t144 to Dynamic("load_f30_op602_t143_bank_val")
; Spill store_f30_op577_resolved_bank_30_f30_op578 to slot 311
    ADD SC, FP, R0
    ADDI SC, SC, 321
    STORE T7, SB, SC
    LI T7, 80
; Spill t139 to slot 312
    ADD SC, FP, R0
    ADDI SC, SC, 322
    STORE T5, SB, SC
; Spill load_f30_op584_t139_bank_val to slot 313
    ADD SC, FP, R0
    ADDI SC, SC, 323
    STORE S3, SB, SC
; Spill t140 to slot 314
    ADD SC, FP, R0
    ADDI SC, SC, 324
    STORE T3, SB, SC
; Spill load_f30_op584_t139_bank_val to slot 315
    ADD SC, FP, R0
    ADDI SC, SC, 325
    STORE S3, SB, SC
    LI T3, -1
    BEQ RV0, T3, L_bc_d8f1bee4_use_global
; Spill load_f30_op584_t139_bank_val to slot 316
    ADD SC, FP, R0
    ADDI SC, SC, 326
    STORE S3, SB, SC
    LI S3, -2
    BEQ RV0, S3, L_bc_d8f1bee4_use_stack
    ADD T5, RV0, R0
    BEQ R0, R0, L_bc_d8f1bee4_done
L_bc_d8f1bee4_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_d8f1bee4_done
L_bc_d8f1bee4_use_stack:
    ADD T5, SB, R0
L_bc_d8f1bee4_done:
    STORE T7, T5, T1
; Load instruction: t145 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op608_t145 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI S3, S0, 1
    LOAD T7, SB, S3
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T3, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t146 to Dynamic("load_f30_op611_t145_bank_val")
; Spill store_f30_op586_resolved_bank_30_f30_op587 to slot 317
    ADD SC, FP, R0
    ADDI SC, SC, 327
    STORE S2, SB, SC
    LI S2, 0
; Spill t141 to slot 318
    ADD SC, FP, R0
    ADDI SC, SC, 328
    STORE S1, SB, SC
; Spill load_f30_op593_t141_bank_val to slot 319
    ADD SC, FP, R0
    ADDI SC, SC, 329
    STORE T0, SB, SC
; Spill t142 to slot 320
    ADD SC, FP, R0
    ADDI SC, SC, 330
    STORE T4, SB, SC
; Spill load_f30_op593_t141_bank_val to slot 321
    ADD SC, FP, R0
    ADDI SC, SC, 331
    STORE T0, SB, SC
    LI T4, -1
    BEQ T7, T4, L_bc_40086c07_use_global
; Spill load_f30_op593_t141_bank_val to slot 322
    ADD SC, FP, R0
    ADDI SC, SC, 332
    STORE T0, SB, SC
    LI T0, -2
    BEQ T7, T0, L_bc_40086c07_use_stack
    ADD S1, T7, R0
    BEQ R0, R0, L_bc_40086c07_done
L_bc_40086c07_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_40086c07_done
L_bc_40086c07_use_stack:
    ADD S1, SB, R0
L_bc_40086c07_done:
    STORE S2, S1, S3
; Load instruction: t147 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op618_t147 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T4
    LI S2, 1752
; Spill store_f30_op595_resolved_bank_30_f30_op596 to slot 323
    ADD SC, FP, R0
    ADDI SC, SC, 333
    STORE T2, SB, SC
; Spill t143 to slot 324
    ADD SC, FP, R0
    ADDI SC, SC, 334
    STORE T6, SB, SC
; Spill load_f30_op602_t143_bank_val to slot 325
    ADD SC, FP, R0
    ADDI SC, SC, 335
    STORE RV0, SB, SC
    ADD T6, T0, R0
    ADD T2, S2, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t144 to slot 326
    ADD SC, FP, R0
    ADDI SC, SC, 336
    STORE T1, SB, SC
; Spill load_f30_op602_t143_bank_val to slot 327
    ADD SC, FP, R0
    ADDI SC, SC, 337
    STORE RV0, SB, SC
; Spill load_f30_op602_t143_bank_val to slot 328
    ADD SC, FP, R0
    ADDI SC, SC, 338
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T1, T2, RV0
; Spill store_f30_op604_resolved_bank_30_f30_op605 to slot 329
    ADD SC, FP, R0
    ADDI SC, SC, 339
    STORE T5, SB, SC
    MOD T5, T2, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op625_t148'
; Computing new bank gep_new_bank_f30_op625_t148 = GP + bank_delta
    ADD S0, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f30_op625_t148)
    ADD T2, T5, R0
; GEP: Setting bank info for t148 to Dynamic("gep_new_bank_f30_op625_t148")
    LI T6, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_527cb654_use_global
    LI T5, -2
    BEQ S0, T5, L_bc_527cb654_use_stack
    ADD T1, S0, R0
    BEQ R0, R0, L_bc_527cb654_done
L_bc_527cb654_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_527cb654_done
L_bc_527cb654_use_stack:
    ADD T1, SB, R0
L_bc_527cb654_done:
    STORE T6, T1, T2
; Load instruction: t149 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op632_t149 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S2
    LI T5, 1802
; Spill t145 to slot 330
    ADD SC, FP, R0
    ADDI SC, SC, 340
    STORE T3, SB, SC
; Spill load_f30_op611_t145_bank_val to slot 331
    ADD SC, FP, R0
    ADDI SC, SC, 341
    STORE T7, SB, SC
    ADD T3, RV0, R0
    ADD T6, T5, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t146 to slot 332
    ADD SC, FP, R0
    ADDI SC, SC, 342
    STORE S3, SB, SC
; Spill load_f30_op611_t145_bank_val to slot 333
    ADD SC, FP, R0
    ADDI SC, SC, 343
    STORE T7, SB, SC
; Spill load_f30_op611_t145_bank_val to slot 334
    ADD SC, FP, R0
    ADDI SC, SC, 344
    STORE T7, SB, SC
    LI T7, -1
    DIV S3, T6, T7
; Spill store_f30_op613_resolved_bank_30_f30_op614 to slot 335
    ADD SC, FP, R0
    ADDI SC, SC, 345
    STORE S1, SB, SC
    MOD S1, T6, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op639_t150'
; Spill load_f30_op617_t147_addr to slot 336
    ADD SC, FP, R0
    ADDI SC, SC, 346
    STORE T4, SB, SC
; Computing new bank gep_new_bank_f30_op639_t150 = GP + bank_delta
    ADD T4, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op639_t150)
    ADD T6, S1, R0
; GEP: Setting bank info for t150 to Dynamic("gep_new_bank_f30_op639_t150")
    LI T3, 0
    LI T7, -1
    BEQ T4, T7, L_bc_bef74bc7_use_global
    LI S1, -2
    BEQ T4, S1, L_bc_bef74bc7_use_stack
    ADD S3, T4, R0
    BEQ R0, R0, L_bc_bef74bc7_done
L_bc_bef74bc7_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_bef74bc7_done
L_bc_bef74bc7_use_stack:
    ADD S3, SB, R0
L_bc_bef74bc7_done:
    STORE T3, S3, T6
; Load instruction: t151 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op646_t151 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T5
    LI S1, 0
    ADD T7, T7, S1
; Load instruction: t153 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op649_t153 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T3
; Spill t147 to slot 337
    ADD SC, FP, R0
    ADDI SC, SC, 347
    STORE T0, SB, SC
    LI T0, 1
    ADD S1, S1, T0
    LI T0, 1852
    STORE S1, GP, T0
; Load instruction: t155 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op654_t155 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t148 to slot 338
    ADD SC, FP, R0
    ADDI SC, SC, 348
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op625_t148 to slot 339
    ADD SC, FP, R0
    ADDI SC, SC, 349
    STORE S0, SB, SC
    LOAD T2, GP, T0
; Spill live registers before call
; Spill gep_new_bank_f30_op625_t148 to slot 340
    ADD SC, FP, R0
    ADDI SC, SC, 350
    STORE S0, SB, SC
; Spill store_f30_op627_resolved_bank_30_f30_op628 to slot 341
    ADD SC, FP, R0
    ADDI SC, SC, 351
    STORE T1, SB, SC
; Spill load_f30_op631_t149_addr to slot 342
    ADD SC, FP, R0
    ADDI SC, SC, 352
    STORE S2, SB, SC
; Spill t149 to slot 343
    ADD SC, FP, R0
    ADDI SC, SC, 353
    STORE RV0, SB, SC
; Spill t150 to slot 344
    ADD SC, FP, R0
    ADDI SC, SC, 354
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op639_t150 to slot 345
    ADD SC, FP, R0
    ADDI SC, SC, 355
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op639_t150 to slot 346
    ADD SC, FP, R0
    ADDI SC, SC, 356
    STORE T4, SB, SC
; Spill store_f30_op641_resolved_bank_30_f30_op642 to slot 347
    ADD SC, FP, R0
    ADDI SC, SC, 357
    STORE S3, SB, SC
; Spill load_f30_op645_t151_addr to slot 348
    ADD SC, FP, R0
    ADDI SC, SC, 358
    STORE T5, SB, SC
; Spill t152 to slot 349
    ADD SC, FP, R0
    ADDI SC, SC, 359
    STORE T7, SB, SC
; Spill load_f30_op648_t153_addr to slot 350
    ADD SC, FP, R0
    ADDI SC, SC, 360
    STORE T3, SB, SC
; Spill t154 to slot 351
    ADD SC, FP, R0
    ADDI SC, SC, 361
    STORE S1, SB, SC
; Spill load_f30_op653_t155_addr to slot 352
    ADD SC, FP, R0
    ADDI SC, SC, 362
    STORE T0, SB, SC
; Spill t155 to slot 353
    ADD SC, FP, R0
    ADDI SC, SC, 363
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t156
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T1, S0, 1
    STORE RV1, SB, T1
; Load instruction: t157 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op658_t157 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T6, S0, 1
    LOAD T4, SB, T6
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD S3, S2, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t158 to Dynamic("load_f30_op661_t157_bank_val")
    LI T5, 83
    LI T3, -1
    BEQ T4, T3, L_bc_bed69477_use_global
    LI S1, -2
    BEQ T4, S1, L_bc_bed69477_use_stack
    ADD T7, T4, R0
    BEQ R0, R0, L_bc_bed69477_done
L_bc_bed69477_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_bed69477_done
L_bc_bed69477_use_stack:
    ADD T7, SB, R0
L_bc_bed69477_done:
    STORE T5, T7, S3
; Load instruction: t159 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op667_t159 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T2, S0, 1
    LOAD T1, SB, T2
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T0, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t160 to Dynamic("load_f30_op670_t159_bank_val")
    LI T3, 87
    LI T5, -1
    BEQ T1, T5, L_bc_08cf8353_use_global
    LI T2, -2
    BEQ T1, T2, L_bc_08cf8353_use_stack
    ADD S1, T1, R0
    BEQ R0, R0, L_bc_08cf8353_done
L_bc_08cf8353_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_08cf8353_done
L_bc_08cf8353_use_stack:
    ADD S1, SB, R0
L_bc_08cf8353_done:
    STORE T3, S1, T6
; Load instruction: t161 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op676_t161 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T2, S0, 1
    LOAD T3, SB, T2
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T5, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t162 to Dynamic("load_f30_op679_t161_bank_val")
; Spill t156 to slot 354
    ADD SC, FP, R0
    ADDI SC, SC, 364
    STORE RV0, SB, SC
    LI RV0, 65
; Spill t157 to slot 355
    ADD SC, FP, R0
    ADDI SC, SC, 365
    STORE S2, SB, SC
; Spill load_f30_op661_t157_bank_val to slot 356
    ADD SC, FP, R0
    ADDI SC, SC, 366
    STORE T4, SB, SC
; Spill t158 to slot 357
    ADD SC, FP, R0
    ADDI SC, SC, 367
    STORE S3, SB, SC
; Spill load_f30_op661_t157_bank_val to slot 358
    ADD SC, FP, R0
    ADDI SC, SC, 368
    STORE T4, SB, SC
    LI S3, -1
    BEQ T3, S3, L_bc_d6c307f2_use_global
; Spill load_f30_op661_t157_bank_val to slot 359
    ADD SC, FP, R0
    ADDI SC, SC, 369
    STORE T4, SB, SC
    LI T4, -2
    BEQ T3, T4, L_bc_d6c307f2_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_d6c307f2_done
L_bc_d6c307f2_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_d6c307f2_done
L_bc_d6c307f2_use_stack:
    ADD S2, SB, R0
L_bc_d6c307f2_done:
    STORE RV0, S2, T2
; Load instruction: t163 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op685_t163 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI T4, S0, 1
    LOAD RV0, SB, T4
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S3, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t164 to Dynamic("load_f30_op688_t163_bank_val")
; Spill store_f30_op663_resolved_bank_30_f30_op664 to slot 360
    ADD SC, FP, R0
    ADDI SC, SC, 370
    STORE T7, SB, SC
    LI T7, 80
; Spill t159 to slot 361
    ADD SC, FP, R0
    ADDI SC, SC, 371
    STORE T0, SB, SC
; Spill load_f30_op670_t159_bank_val to slot 362
    ADD SC, FP, R0
    ADDI SC, SC, 372
    STORE T1, SB, SC
; Spill t160 to slot 363
    ADD SC, FP, R0
    ADDI SC, SC, 373
    STORE T6, SB, SC
; Spill load_f30_op670_t159_bank_val to slot 364
    ADD SC, FP, R0
    ADDI SC, SC, 374
    STORE T1, SB, SC
    LI T6, -1
    BEQ RV0, T6, L_bc_bcbd00f3_use_global
; Spill load_f30_op670_t159_bank_val to slot 365
    ADD SC, FP, R0
    ADDI SC, SC, 375
    STORE T1, SB, SC
    LI T1, -2
    BEQ RV0, T1, L_bc_bcbd00f3_use_stack
    ADD T0, RV0, R0
    BEQ R0, R0, L_bc_bcbd00f3_done
L_bc_bcbd00f3_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_bcbd00f3_done
L_bc_bcbd00f3_use_stack:
    ADD T0, SB, R0
L_bc_bcbd00f3_done:
    STORE T7, T0, T4
; Load instruction: t165 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op694_t165 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T1, S0, 1
    LOAD T7, SB, T1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T6, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t166 to Dynamic("load_f30_op697_t165_bank_val")
; Spill store_f30_op672_resolved_bank_30_f30_op673 to slot 366
    ADD SC, FP, R0
    ADDI SC, SC, 376
    STORE S1, SB, SC
    LI S1, 0
; Spill t161 to slot 367
    ADD SC, FP, R0
    ADDI SC, SC, 377
    STORE T5, SB, SC
; Spill load_f30_op679_t161_bank_val to slot 368
    ADD SC, FP, R0
    ADDI SC, SC, 378
    STORE T3, SB, SC
; Spill t162 to slot 369
    ADD SC, FP, R0
    ADDI SC, SC, 379
    STORE T2, SB, SC
; Spill load_f30_op679_t161_bank_val to slot 370
    ADD SC, FP, R0
    ADDI SC, SC, 380
    STORE T3, SB, SC
    LI T2, -1
    BEQ T7, T2, L_bc_e3d40a68_use_global
; Spill load_f30_op679_t161_bank_val to slot 371
    ADD SC, FP, R0
    ADDI SC, SC, 381
    STORE T3, SB, SC
    LI T3, -2
    BEQ T7, T3, L_bc_e3d40a68_use_stack
    ADD T5, T7, R0
    BEQ R0, R0, L_bc_e3d40a68_done
L_bc_e3d40a68_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_e3d40a68_done
L_bc_e3d40a68_use_stack:
    ADD T5, SB, R0
L_bc_e3d40a68_done:
    STORE S1, T5, T1
; Load instruction: t167 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op704_t167 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T2
    LI S1, 1752
; Spill store_f30_op681_resolved_bank_30_f30_op682 to slot 372
    ADD SC, FP, R0
    ADDI SC, SC, 382
    STORE S2, SB, SC
; Spill t163 to slot 373
    ADD SC, FP, R0
    ADDI SC, SC, 383
    STORE S3, SB, SC
; Spill load_f30_op688_t163_bank_val to slot 374
    ADD SC, FP, R0
    ADDI SC, SC, 384
    STORE RV0, SB, SC
    ADD S3, T3, R0
    ADD S2, S1, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t164 to slot 375
    ADD SC, FP, R0
    ADDI SC, SC, 385
    STORE T4, SB, SC
; Spill load_f30_op688_t163_bank_val to slot 376
    ADD SC, FP, R0
    ADDI SC, SC, 386
    STORE RV0, SB, SC
; Spill load_f30_op688_t163_bank_val to slot 377
    ADD SC, FP, R0
    ADDI SC, SC, 387
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T4, S2, RV0
; Spill store_f30_op690_resolved_bank_30_f30_op691 to slot 378
    ADD SC, FP, R0
    ADDI SC, SC, 388
    STORE T0, SB, SC
    MOD T0, S2, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op711_t168'
; Computing new bank gep_new_bank_f30_op711_t168 = GP + bank_delta
    ADD S0, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op711_t168)
    ADD S2, T0, R0
; GEP: Setting bank info for t168 to Dynamic("gep_new_bank_f30_op711_t168")
    LI S3, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_0edd766c_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_0edd766c_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_0edd766c_done
L_bc_0edd766c_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_0edd766c_done
L_bc_0edd766c_use_stack:
    ADD T4, SB, R0
L_bc_0edd766c_done:
    STORE S3, T4, S2
; Load instruction: t169 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op718_t169 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S1
    LI T0, 1802
; Spill t165 to slot 379
    ADD SC, FP, R0
    ADDI SC, SC, 389
    STORE T6, SB, SC
; Spill load_f30_op697_t165_bank_val to slot 380
    ADD SC, FP, R0
    ADDI SC, SC, 390
    STORE T7, SB, SC
    ADD T6, RV0, R0
    ADD S3, T0, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t166 to slot 381
    ADD SC, FP, R0
    ADDI SC, SC, 391
    STORE T1, SB, SC
; Spill load_f30_op697_t165_bank_val to slot 382
    ADD SC, FP, R0
    ADDI SC, SC, 392
    STORE T7, SB, SC
; Spill load_f30_op697_t165_bank_val to slot 383
    ADD SC, FP, R0
    ADDI SC, SC, 393
    STORE T7, SB, SC
    LI T7, -1
    DIV T1, S3, T7
; Spill store_f30_op699_resolved_bank_30_f30_op700 to slot 384
    ADD SC, FP, R0
    ADDI SC, SC, 394
    STORE T5, SB, SC
    MOD T5, S3, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op725_t170'
; Spill load_f30_op703_t167_addr to slot 385
    ADD SC, FP, R0
    ADDI SC, SC, 395
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op725_t170 = GP + bank_delta
    ADD T2, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f30_op725_t170)
    ADD S3, T5, R0
; GEP: Setting bank info for t170 to Dynamic("gep_new_bank_f30_op725_t170")
    LI T6, 0
    LI T7, -1
    BEQ T2, T7, L_bc_39bb0f5b_use_global
    LI T5, -2
    BEQ T2, T5, L_bc_39bb0f5b_use_stack
    ADD T1, T2, R0
    BEQ R0, R0, L_bc_39bb0f5b_done
L_bc_39bb0f5b_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_39bb0f5b_done
L_bc_39bb0f5b_use_stack:
    ADD T1, SB, R0
L_bc_39bb0f5b_done:
    STORE T6, T1, S3
; Load instruction: t171 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op732_t171 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T0
    LI T5, 0
    ADD T7, T7, T5
; Load instruction: t173 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op735_t173 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
; Spill t167 to slot 386
    ADD SC, FP, R0
    ADDI SC, SC, 396
    STORE T3, SB, SC
    LI T3, 1
    ADD T5, T5, T3
    LI T3, 1852
    STORE T5, GP, T3
; Load instruction: t175 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op740_t175 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t168 to slot 387
    ADD SC, FP, R0
    ADDI SC, SC, 397
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op711_t168 to slot 388
    ADD SC, FP, R0
    ADDI SC, SC, 398
    STORE S0, SB, SC
    LOAD S2, GP, T3
; Spill live registers before call
; Spill gep_new_bank_f30_op711_t168 to slot 389
    ADD SC, FP, R0
    ADDI SC, SC, 399
    STORE S0, SB, SC
; Spill store_f30_op713_resolved_bank_30_f30_op714 to slot 390
    ADD SC, FP, R0
    ADDI SC, SC, 400
    STORE T4, SB, SC
; Spill load_f30_op717_t169_addr to slot 391
    ADD SC, FP, R0
    ADDI SC, SC, 401
    STORE S1, SB, SC
; Spill t169 to slot 392
    ADD SC, FP, R0
    ADDI SC, SC, 402
    STORE RV0, SB, SC
; Spill t170 to slot 393
    ADD SC, FP, R0
    ADDI SC, SC, 403
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op725_t170 to slot 394
    ADD SC, FP, R0
    ADDI SC, SC, 404
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op725_t170 to slot 395
    ADD SC, FP, R0
    ADDI SC, SC, 405
    STORE T2, SB, SC
; Spill store_f30_op727_resolved_bank_30_f30_op728 to slot 396
    ADD SC, FP, R0
    ADDI SC, SC, 406
    STORE T1, SB, SC
; Spill load_f30_op731_t171_addr to slot 397
    ADD SC, FP, R0
    ADDI SC, SC, 407
    STORE T0, SB, SC
; Spill t172 to slot 398
    ADD SC, FP, R0
    ADDI SC, SC, 408
    STORE T7, SB, SC
; Spill load_f30_op734_t173_addr to slot 399
    ADD SC, FP, R0
    ADDI SC, SC, 409
    STORE T6, SB, SC
; Spill t174 to slot 400
    ADD SC, FP, R0
    ADDI SC, SC, 410
    STORE T5, SB, SC
; Spill load_f30_op739_t175_addr to slot 401
    ADD SC, FP, R0
    ADDI SC, SC, 411
    STORE T3, SB, SC
; Spill t175 to slot 402
    ADD SC, FP, R0
    ADDI SC, SC, 412
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t176
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T4, S0, 1
    STORE RV1, SB, T4
; Load instruction: t177 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op744_t177 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI S3, S0, 1
    LOAD T2, SB, S3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T1, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t178 to Dynamic("load_f30_op747_t177_bank_val")
    LI T0, 79
    LI T6, -1
    BEQ T2, T6, L_bc_ddf89d6b_use_global
    LI T5, -2
    BEQ T2, T5, L_bc_ddf89d6b_use_stack
    ADD T7, T2, R0
    BEQ R0, R0, L_bc_ddf89d6b_done
L_bc_ddf89d6b_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_ddf89d6b_done
L_bc_ddf89d6b_use_stack:
    ADD T7, SB, R0
L_bc_ddf89d6b_done:
    STORE T0, T7, T1
; Load instruction: t179 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op753_t179 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI S2, S0, 1
    LOAD T4, SB, S2
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T3, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t180 to Dynamic("load_f30_op756_t179_bank_val")
    LI T6, 86
    LI T0, -1
    BEQ T4, T0, L_bc_ef10cfeb_use_global
    LI S2, -2
    BEQ T4, S2, L_bc_ef10cfeb_use_stack
    ADD T5, T4, R0
    BEQ R0, R0, L_bc_ef10cfeb_done
L_bc_ef10cfeb_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_ef10cfeb_done
L_bc_ef10cfeb_use_stack:
    ADD T5, SB, R0
L_bc_ef10cfeb_done:
    STORE T6, T5, S3
; Load instruction: t181 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op762_t181 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S2, S0, 1
    LOAD T6, SB, S2
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T0, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t182 to Dynamic("load_f30_op765_t181_bank_val")
; Spill t176 to slot 403
    ADD SC, FP, R0
    ADDI SC, SC, 413
    STORE RV0, SB, SC
    LI RV0, 69
; Spill t177 to slot 404
    ADD SC, FP, R0
    ADDI SC, SC, 414
    STORE S1, SB, SC
; Spill load_f30_op747_t177_bank_val to slot 405
    ADD SC, FP, R0
    ADDI SC, SC, 415
    STORE T2, SB, SC
; Spill t178 to slot 406
    ADD SC, FP, R0
    ADDI SC, SC, 416
    STORE T1, SB, SC
; Spill load_f30_op747_t177_bank_val to slot 407
    ADD SC, FP, R0
    ADDI SC, SC, 417
    STORE T2, SB, SC
    LI T1, -1
    BEQ T6, T1, L_bc_b0d0fbe0_use_global
; Spill load_f30_op747_t177_bank_val to slot 408
    ADD SC, FP, R0
    ADDI SC, SC, 418
    STORE T2, SB, SC
    LI T2, -2
    BEQ T6, T2, L_bc_b0d0fbe0_use_stack
    ADD S1, T6, R0
    BEQ R0, R0, L_bc_b0d0fbe0_done
L_bc_b0d0fbe0_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_b0d0fbe0_done
L_bc_b0d0fbe0_use_stack:
    ADD S1, SB, R0
L_bc_b0d0fbe0_done:
    STORE RV0, S1, S2
; Load instruction: t183 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op771_t183 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T2, S0, 1
    LOAD RV0, SB, T2
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T1, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t184 to Dynamic("load_f30_op774_t183_bank_val")
; Spill store_f30_op749_resolved_bank_30_f30_op750 to slot 409
    ADD SC, FP, R0
    ADDI SC, SC, 419
    STORE T7, SB, SC
    LI T7, 82
; Spill t179 to slot 410
    ADD SC, FP, R0
    ADDI SC, SC, 420
    STORE T3, SB, SC
; Spill load_f30_op756_t179_bank_val to slot 411
    ADD SC, FP, R0
    ADDI SC, SC, 421
    STORE T4, SB, SC
; Spill t180 to slot 412
    ADD SC, FP, R0
    ADDI SC, SC, 422
    STORE S3, SB, SC
; Spill load_f30_op756_t179_bank_val to slot 413
    ADD SC, FP, R0
    ADDI SC, SC, 423
    STORE T4, SB, SC
    LI S3, -1
    BEQ RV0, S3, L_bc_013d3ddf_use_global
; Spill load_f30_op756_t179_bank_val to slot 414
    ADD SC, FP, R0
    ADDI SC, SC, 424
    STORE T4, SB, SC
    LI T4, -2
    BEQ RV0, T4, L_bc_013d3ddf_use_stack
    ADD T3, RV0, R0
    BEQ R0, R0, L_bc_013d3ddf_done
L_bc_013d3ddf_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_013d3ddf_done
L_bc_013d3ddf_use_stack:
    ADD T3, SB, R0
L_bc_013d3ddf_done:
    STORE T7, T3, T2
; Load instruction: t185 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op780_t185 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI T4, S0, 1
    LOAD T7, SB, T4
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S3, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t186 to Dynamic("load_f30_op783_t185_bank_val")
; Spill store_f30_op758_resolved_bank_30_f30_op759 to slot 415
    ADD SC, FP, R0
    ADDI SC, SC, 425
    STORE T5, SB, SC
    LI T5, 0
; Spill t181 to slot 416
    ADD SC, FP, R0
    ADDI SC, SC, 426
    STORE T0, SB, SC
; Spill load_f30_op765_t181_bank_val to slot 417
    ADD SC, FP, R0
    ADDI SC, SC, 427
    STORE T6, SB, SC
; Spill t182 to slot 418
    ADD SC, FP, R0
    ADDI SC, SC, 428
    STORE S2, SB, SC
; Spill load_f30_op765_t181_bank_val to slot 419
    ADD SC, FP, R0
    ADDI SC, SC, 429
    STORE T6, SB, SC
    LI S2, -1
    BEQ T7, S2, L_bc_948a011d_use_global
; Spill load_f30_op765_t181_bank_val to slot 420
    ADD SC, FP, R0
    ADDI SC, SC, 430
    STORE T6, SB, SC
    LI T6, -2
    BEQ T7, T6, L_bc_948a011d_use_stack
    ADD T0, T7, R0
    BEQ R0, R0, L_bc_948a011d_done
L_bc_948a011d_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_948a011d_done
L_bc_948a011d_use_stack:
    ADD T0, SB, R0
L_bc_948a011d_done:
    STORE T5, T0, T4
; Load instruction: t187 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op790_t187 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, S2
    LI T5, 1752
; Spill store_f30_op767_resolved_bank_30_f30_op768 to slot 421
    ADD SC, FP, R0
    ADDI SC, SC, 431
    STORE S1, SB, SC
; Spill t183 to slot 422
    ADD SC, FP, R0
    ADDI SC, SC, 432
    STORE T1, SB, SC
; Spill load_f30_op774_t183_bank_val to slot 423
    ADD SC, FP, R0
    ADDI SC, SC, 433
    STORE RV0, SB, SC
    ADD T1, T6, R0
    ADD S1, T5, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill t184 to slot 424
    ADD SC, FP, R0
    ADDI SC, SC, 434
    STORE T2, SB, SC
; Spill load_f30_op774_t183_bank_val to slot 425
    ADD SC, FP, R0
    ADDI SC, SC, 435
    STORE RV0, SB, SC
; Spill load_f30_op774_t183_bank_val to slot 426
    ADD SC, FP, R0
    ADDI SC, SC, 436
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T2, S1, RV0
; Spill store_f30_op776_resolved_bank_30_f30_op777 to slot 427
    ADD SC, FP, R0
    ADDI SC, SC, 437
    STORE T3, SB, SC
    MOD T3, S1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op797_t188'
; Computing new bank gep_new_bank_f30_op797_t188 = GP + bank_delta
    ADD S0, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f30_op797_t188)
    ADD S1, T3, R0
; GEP: Setting bank info for t188 to Dynamic("gep_new_bank_f30_op797_t188")
    LI T1, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_b93747f0_use_global
    LI T3, -2
    BEQ S0, T3, L_bc_b93747f0_use_stack
    ADD T2, S0, R0
    BEQ R0, R0, L_bc_b93747f0_done
L_bc_b93747f0_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_b93747f0_done
L_bc_b93747f0_use_stack:
    ADD T2, SB, R0
L_bc_b93747f0_done:
    STORE T1, T2, S1
; Load instruction: t189 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op804_t189 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T5
    LI T3, 1802
; Spill t185 to slot 428
    ADD SC, FP, R0
    ADDI SC, SC, 438
    STORE S3, SB, SC
; Spill load_f30_op783_t185_bank_val to slot 429
    ADD SC, FP, R0
    ADDI SC, SC, 439
    STORE T7, SB, SC
    ADD S3, RV0, R0
    ADD T1, T3, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t186 to slot 430
    ADD SC, FP, R0
    ADDI SC, SC, 440
    STORE T4, SB, SC
; Spill load_f30_op783_t185_bank_val to slot 431
    ADD SC, FP, R0
    ADDI SC, SC, 441
    STORE T7, SB, SC
; Spill load_f30_op783_t185_bank_val to slot 432
    ADD SC, FP, R0
    ADDI SC, SC, 442
    STORE T7, SB, SC
    LI T7, -1
    DIV T4, T1, T7
; Spill store_f30_op785_resolved_bank_30_f30_op786 to slot 433
    ADD SC, FP, R0
    ADDI SC, SC, 443
    STORE T0, SB, SC
    MOD T0, T1, T7
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op811_t190'
; Spill load_f30_op789_t187_addr to slot 434
    ADD SC, FP, R0
    ADDI SC, SC, 444
    STORE S2, SB, SC
; Computing new bank gep_new_bank_f30_op811_t190 = GP + bank_delta
    ADD S2, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op811_t190)
    ADD T1, T0, R0
; GEP: Setting bank info for t190 to Dynamic("gep_new_bank_f30_op811_t190")
    LI S3, 0
    LI T7, -1
    BEQ S2, T7, L_bc_498d13f5_use_global
    LI T0, -2
    BEQ S2, T0, L_bc_498d13f5_use_stack
    ADD T4, S2, R0
    BEQ R0, R0, L_bc_498d13f5_done
L_bc_498d13f5_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_498d13f5_done
L_bc_498d13f5_use_stack:
    ADD T4, SB, R0
L_bc_498d13f5_done:
    STORE S3, T4, T1
; Load instruction: t191 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op818_t191 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T3
    LI T0, 0
    ADD T7, T7, T0
; Load instruction: t193 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op821_t193 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, S3
; Spill t187 to slot 435
    ADD SC, FP, R0
    ADDI SC, SC, 445
    STORE T6, SB, SC
    LI T6, 1
    ADD T0, T0, T6
    LI T6, 1852
    STORE T0, GP, T6
; Load instruction: t195 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op826_t195 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t188 to slot 436
    ADD SC, FP, R0
    ADDI SC, SC, 446
    STORE S1, SB, SC
; Spill gep_new_bank_f30_op797_t188 to slot 437
    ADD SC, FP, R0
    ADDI SC, SC, 447
    STORE S0, SB, SC
    LOAD S1, GP, T6
; Spill live registers before call
; Spill gep_new_bank_f30_op797_t188 to slot 438
    ADD SC, FP, R0
    ADDI SC, SC, 448
    STORE S0, SB, SC
; Spill store_f30_op799_resolved_bank_30_f30_op800 to slot 439
    ADD SC, FP, R0
    ADDI SC, SC, 449
    STORE T2, SB, SC
; Spill load_f30_op803_t189_addr to slot 440
    ADD SC, FP, R0
    ADDI SC, SC, 450
    STORE T5, SB, SC
; Spill t189 to slot 441
    ADD SC, FP, R0
    ADDI SC, SC, 451
    STORE RV0, SB, SC
; Spill t190 to slot 442
    ADD SC, FP, R0
    ADDI SC, SC, 452
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op811_t190 to slot 443
    ADD SC, FP, R0
    ADDI SC, SC, 453
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op811_t190 to slot 444
    ADD SC, FP, R0
    ADDI SC, SC, 454
    STORE S2, SB, SC
; Spill store_f30_op813_resolved_bank_30_f30_op814 to slot 445
    ADD SC, FP, R0
    ADDI SC, SC, 455
    STORE T4, SB, SC
; Spill load_f30_op817_t191_addr to slot 446
    ADD SC, FP, R0
    ADDI SC, SC, 456
    STORE T3, SB, SC
; Spill t192 to slot 447
    ADD SC, FP, R0
    ADDI SC, SC, 457
    STORE T7, SB, SC
; Spill load_f30_op820_t193_addr to slot 448
    ADD SC, FP, R0
    ADDI SC, SC, 458
    STORE S3, SB, SC
; Spill t194 to slot 449
    ADD SC, FP, R0
    ADDI SC, SC, 459
    STORE T0, SB, SC
; Spill load_f30_op825_t195_addr to slot 450
    ADD SC, FP, R0
    ADDI SC, SC, 460
    STORE T6, SB, SC
; Spill t195 to slot 451
    ADD SC, FP, R0
    ADDI SC, SC, 461
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t196
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T2, S0, 1
    STORE RV1, SB, T2
; Load instruction: t197 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op830_t197 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T1, S0, 1
    LOAD S2, SB, T1
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T4, T5, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t198 to Dynamic("load_f30_op833_t197_bank_val")
    LI T3, 82
    LI S3, -1
    BEQ S2, S3, L_bc_a0dd8976_use_global
    LI T0, -2
    BEQ S2, T0, L_bc_a0dd8976_use_stack
    ADD T7, S2, R0
    BEQ R0, R0, L_bc_a0dd8976_done
L_bc_a0dd8976_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_a0dd8976_done
L_bc_a0dd8976_use_stack:
    ADD T7, SB, R0
L_bc_a0dd8976_done:
    STORE T3, T7, T4
; Load instruction: t199 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op839_t199 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI S1, S0, 1
    LOAD T2, SB, S1
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T6, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t200 to Dynamic("load_f30_op842_t199_bank_val")
    LI S3, 79
    LI T3, -1
    BEQ T2, T3, L_bc_6af60003_use_global
    LI S1, -2
    BEQ T2, S1, L_bc_6af60003_use_stack
    ADD T0, T2, R0
    BEQ R0, R0, L_bc_6af60003_done
L_bc_6af60003_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_6af60003_done
L_bc_6af60003_use_stack:
    ADD T0, SB, R0
L_bc_6af60003_done:
    STORE S3, T0, T1
; Load instruction: t201 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op848_t201 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI S1, S0, 1
    LOAD S3, SB, S1
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, T3, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t202 to Dynamic("load_f30_op851_t201_bank_val")
; Spill t196 to slot 452
    ADD SC, FP, R0
    ADDI SC, SC, 462
    STORE RV0, SB, SC
    LI RV0, 84
; Spill t197 to slot 453
    ADD SC, FP, R0
    ADDI SC, SC, 463
    STORE T5, SB, SC
; Spill load_f30_op833_t197_bank_val to slot 454
    ADD SC, FP, R0
    ADDI SC, SC, 464
    STORE S2, SB, SC
; Spill t198 to slot 455
    ADD SC, FP, R0
    ADDI SC, SC, 465
    STORE T4, SB, SC
; Spill load_f30_op833_t197_bank_val to slot 456
    ADD SC, FP, R0
    ADDI SC, SC, 466
    STORE S2, SB, SC
    LI T4, -1
    BEQ S3, T4, L_bc_02b46e0e_use_global
; Spill load_f30_op833_t197_bank_val to slot 457
    ADD SC, FP, R0
    ADDI SC, SC, 467
    STORE S2, SB, SC
    LI S2, -2
    BEQ S3, S2, L_bc_02b46e0e_use_stack
    ADD T5, S3, R0
    BEQ R0, R0, L_bc_02b46e0e_done
L_bc_02b46e0e_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_02b46e0e_done
L_bc_02b46e0e_use_stack:
    ADD T5, SB, R0
L_bc_02b46e0e_done:
    STORE RV0, T5, S1
; Load instruction: t203 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op857_t203 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI S2, S0, 1
    LOAD RV0, SB, S2
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T4, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t204 to Dynamic("load_f30_op860_t203_bank_val")
; Spill store_f30_op835_resolved_bank_30_f30_op836 to slot 458
    ADD SC, FP, R0
    ADDI SC, SC, 468
    STORE T7, SB, SC
    LI T7, 0
; Spill t199 to slot 459
    ADD SC, FP, R0
    ADDI SC, SC, 469
    STORE T6, SB, SC
; Spill load_f30_op842_t199_bank_val to slot 460
    ADD SC, FP, R0
    ADDI SC, SC, 470
    STORE T2, SB, SC
; Spill t200 to slot 461
    ADD SC, FP, R0
    ADDI SC, SC, 471
    STORE T1, SB, SC
; Spill load_f30_op842_t199_bank_val to slot 462
    ADD SC, FP, R0
    ADDI SC, SC, 472
    STORE T2, SB, SC
    LI T1, -1
    BEQ RV0, T1, L_bc_bb2d5324_use_global
; Spill load_f30_op842_t199_bank_val to slot 463
    ADD SC, FP, R0
    ADDI SC, SC, 473
    STORE T2, SB, SC
    LI T2, -2
    BEQ RV0, T2, L_bc_bb2d5324_use_stack
    ADD T6, RV0, R0
    BEQ R0, R0, L_bc_bb2d5324_done
L_bc_bb2d5324_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_bb2d5324_done
L_bc_bb2d5324_use_stack:
    ADD T6, SB, R0
L_bc_bb2d5324_done:
    STORE T7, T6, S2
; Load instruction: t205 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op867_t205 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T1
    LI T7, 1752
; Spill store_f30_op844_resolved_bank_30_f30_op845 to slot 464
    ADD SC, FP, R0
    ADDI SC, SC, 474
    STORE T0, SB, SC
; Spill t201 to slot 465
    ADD SC, FP, R0
    ADDI SC, SC, 475
    STORE T3, SB, SC
; Spill load_f30_op851_t201_bank_val to slot 466
    ADD SC, FP, R0
    ADDI SC, SC, 476
    STORE S3, SB, SC
    ADD T3, T2, R0
    ADD T0, T7, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t202 to slot 467
    ADD SC, FP, R0
    ADDI SC, SC, 477
    STORE S1, SB, SC
; Spill load_f30_op851_t201_bank_val to slot 468
    ADD SC, FP, R0
    ADDI SC, SC, 478
    STORE S3, SB, SC
; Spill load_f30_op851_t201_bank_val to slot 469
    ADD SC, FP, R0
    ADDI SC, SC, 479
    STORE S3, SB, SC
    LI S3, -1
    DIV S1, T0, S3
; Spill store_f30_op853_resolved_bank_30_f30_op854 to slot 470
    ADD SC, FP, R0
    ADDI SC, SC, 480
    STORE T5, SB, SC
    MOD T5, T0, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op874_t206'
; Computing new bank gep_new_bank_f30_op874_t206 = GP + bank_delta
    ADD S0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op874_t206)
    ADD T0, T5, R0
; GEP: Setting bank info for t206 to Dynamic("gep_new_bank_f30_op874_t206")
    LI T3, 1
    LI S3, -1
    BEQ S0, S3, L_bc_2a8f6721_use_global
    LI T5, -2
    BEQ S0, T5, L_bc_2a8f6721_use_stack
    ADD S1, S0, R0
    BEQ R0, R0, L_bc_2a8f6721_done
L_bc_2a8f6721_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_2a8f6721_done
L_bc_2a8f6721_use_stack:
    ADD S1, SB, R0
L_bc_2a8f6721_done:
    STORE T3, S1, T0
; Load instruction: t207 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op881_t207 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T7
    LI T5, 1802
; Spill t203 to slot 471
    ADD SC, FP, R0
    ADDI SC, SC, 481
    STORE T4, SB, SC
; Spill load_f30_op860_t203_bank_val to slot 472
    ADD SC, FP, R0
    ADDI SC, SC, 482
    STORE RV0, SB, SC
    ADD T4, S3, R0
    ADD T3, T5, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t204 to slot 473
    ADD SC, FP, R0
    ADDI SC, SC, 483
    STORE S2, SB, SC
; Spill load_f30_op860_t203_bank_val to slot 474
    ADD SC, FP, R0
    ADDI SC, SC, 484
    STORE RV0, SB, SC
; Spill load_f30_op860_t203_bank_val to slot 475
    ADD SC, FP, R0
    ADDI SC, SC, 485
    STORE RV0, SB, SC
    LI RV0, -1
    DIV S2, T3, RV0
; Spill store_f30_op862_resolved_bank_30_f30_op863 to slot 476
    ADD SC, FP, R0
    ADDI SC, SC, 486
    STORE T6, SB, SC
    MOD T6, T3, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op888_t208'
; Spill load_f30_op866_t205_addr to slot 477
    ADD SC, FP, R0
    ADDI SC, SC, 487
    STORE T1, SB, SC
; Computing new bank gep_new_bank_f30_op888_t208 = GP + bank_delta
    ADD T1, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f30_op888_t208)
    ADD T3, T6, R0
; GEP: Setting bank info for t208 to Dynamic("gep_new_bank_f30_op888_t208")
    LI T4, 0
    LI RV0, -1
    BEQ T1, RV0, L_bc_146c6228_use_global
    LI T6, -2
    BEQ T1, T6, L_bc_146c6228_use_stack
    ADD S2, T1, R0
    BEQ R0, R0, L_bc_146c6228_done
L_bc_146c6228_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_146c6228_done
L_bc_146c6228_use_stack:
    ADD S2, SB, R0
L_bc_146c6228_done:
    STORE T4, S2, T3
; Load instruction: t209 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op895_t209 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T5
    LI T6, 0
    ADD RV0, RV0, T6
; Load instruction: t211 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op898_t211 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T4
; Spill t205 to slot 478
    ADD SC, FP, R0
    ADDI SC, SC, 488
    STORE T2, SB, SC
    LI T2, 1
    ADD T6, T6, T2
    LI T2, 1852
    STORE T6, GP, T2
; Load instruction: t213 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op903_t213 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t206 to slot 479
    ADD SC, FP, R0
    ADDI SC, SC, 489
    STORE T0, SB, SC
; Spill gep_new_bank_f30_op874_t206 to slot 480
    ADD SC, FP, R0
    ADDI SC, SC, 490
    STORE S0, SB, SC
    LOAD T0, GP, T2
; Spill live registers before call
; Spill gep_new_bank_f30_op874_t206 to slot 481
    ADD SC, FP, R0
    ADDI SC, SC, 491
    STORE S0, SB, SC
; Spill store_f30_op876_resolved_bank_30_f30_op877 to slot 482
    ADD SC, FP, R0
    ADDI SC, SC, 492
    STORE S1, SB, SC
; Spill load_f30_op880_t207_addr to slot 483
    ADD SC, FP, R0
    ADDI SC, SC, 493
    STORE T7, SB, SC
; Spill t207 to slot 484
    ADD SC, FP, R0
    ADDI SC, SC, 494
    STORE S3, SB, SC
; Spill t208 to slot 485
    ADD SC, FP, R0
    ADDI SC, SC, 495
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op888_t208 to slot 486
    ADD SC, FP, R0
    ADDI SC, SC, 496
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op888_t208 to slot 487
    ADD SC, FP, R0
    ADDI SC, SC, 497
    STORE T1, SB, SC
; Spill store_f30_op890_resolved_bank_30_f30_op891 to slot 488
    ADD SC, FP, R0
    ADDI SC, SC, 498
    STORE S2, SB, SC
; Spill load_f30_op894_t209_addr to slot 489
    ADD SC, FP, R0
    ADDI SC, SC, 499
    STORE T5, SB, SC
; Spill t210 to slot 490
    ADD SC, FP, R0
    ADDI SC, SC, 500
    STORE RV0, SB, SC
; Spill load_f30_op897_t211_addr to slot 491
    ADD SC, FP, R0
    ADDI SC, SC, 501
    STORE T4, SB, SC
; Spill t212 to slot 492
    ADD SC, FP, R0
    ADDI SC, SC, 502
    STORE T6, SB, SC
; Spill load_f30_op902_t213_addr to slot 493
    ADD SC, FP, R0
    ADDI SC, SC, 503
    STORE T2, SB, SC
; Spill t213 to slot 494
    ADD SC, FP, R0
    ADDI SC, SC, 504
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t214
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S1, S0, 1
    STORE RV1, SB, S1
; Load instruction: t215 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op907_t215 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI S3, S0, 1
    LOAD T3, SB, S3
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T1, T7, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t216 to Dynamic("load_f30_op910_t215_bank_val")
    LI S2, 50
    LI T4, -1
    BEQ T3, T4, L_bc_75a9ebdd_use_global
    LI T6, -2
    BEQ T3, T6, L_bc_75a9ebdd_use_stack
    ADD T5, T3, R0
    BEQ R0, R0, L_bc_75a9ebdd_done
L_bc_75a9ebdd_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_75a9ebdd_done
L_bc_75a9ebdd_use_stack:
    ADD T5, SB, R0
L_bc_75a9ebdd_done:
    STORE S2, T5, T1
; Load instruction: t217 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op916_t217 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T0, S0, 1
    LOAD S1, SB, T0
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t218 to Dynamic("load_f30_op919_t217_bank_val")
    LI T4, 68
    LI S2, -1
    BEQ S1, S2, L_bc_b22c8151_use_global
    LI T0, -2
    BEQ S1, T0, L_bc_b22c8151_use_stack
    ADD T6, S1, R0
    BEQ R0, R0, L_bc_b22c8151_done
L_bc_b22c8151_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_b22c8151_done
L_bc_b22c8151_use_stack:
    ADD T6, SB, R0
L_bc_b22c8151_done:
    STORE T4, T6, S3
; Load instruction: t219 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op925_t219 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T0, S0, 1
    LOAD T4, SB, T0
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T0, S2, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t220 to Dynamic("load_f30_op928_t219_bank_val")
; Spill t214 to slot 495
    ADD SC, FP, R0
    ADDI SC, SC, 505
    STORE RV0, SB, SC
    LI RV0, 85
; Spill t215 to slot 496
    ADD SC, FP, R0
    ADDI SC, SC, 506
    STORE T7, SB, SC
; Spill load_f30_op910_t215_bank_val to slot 497
    ADD SC, FP, R0
    ADDI SC, SC, 507
    STORE T3, SB, SC
; Spill t216 to slot 498
    ADD SC, FP, R0
    ADDI SC, SC, 508
    STORE T1, SB, SC
; Spill load_f30_op910_t215_bank_val to slot 499
    ADD SC, FP, R0
    ADDI SC, SC, 509
    STORE T3, SB, SC
    LI T1, -1
    BEQ T4, T1, L_bc_0e066cb9_use_global
; Spill load_f30_op910_t215_bank_val to slot 500
    ADD SC, FP, R0
    ADDI SC, SC, 510
    STORE T3, SB, SC
    LI T3, -2
    BEQ T4, T3, L_bc_0e066cb9_use_stack
    ADD T7, T4, R0
    BEQ R0, R0, L_bc_0e066cb9_done
L_bc_0e066cb9_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_0e066cb9_done
L_bc_0e066cb9_use_stack:
    ADD T7, SB, R0
L_bc_0e066cb9_done:
    STORE RV0, T7, T0
; Load instruction: t221 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op934_t221 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T3, S0, 1
    LOAD RV0, SB, T3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T1, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t222 to Dynamic("load_f30_op937_t221_bank_val")
; Spill store_f30_op912_resolved_bank_30_f30_op913 to slot 501
    ADD SC, FP, R0
    ADDI SC, SC, 511
    STORE T5, SB, SC
    LI T5, 80
; Spill t217 to slot 502
    ADD SC, FP, R0
    ADDI SC, SC, 512
    STORE T2, SB, SC
; Spill load_f30_op919_t217_bank_val to slot 503
    ADD SC, FP, R0
    ADDI SC, SC, 513
    STORE S1, SB, SC
; Spill t218 to slot 504
    ADD SC, FP, R0
    ADDI SC, SC, 514
    STORE S3, SB, SC
; Spill load_f30_op919_t217_bank_val to slot 505
    ADD SC, FP, R0
    ADDI SC, SC, 515
    STORE S1, SB, SC
    LI S3, -1
    BEQ RV0, S3, L_bc_dcc10764_use_global
; Spill load_f30_op919_t217_bank_val to slot 506
    ADD SC, FP, R0
    ADDI SC, SC, 516
    STORE S1, SB, SC
    LI S1, -2
    BEQ RV0, S1, L_bc_dcc10764_use_stack
    ADD T2, RV0, R0
    BEQ R0, R0, L_bc_dcc10764_done
L_bc_dcc10764_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_dcc10764_done
L_bc_dcc10764_use_stack:
    ADD T2, SB, R0
L_bc_dcc10764_done:
    STORE T5, T2, T3
; Load instruction: t223 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op943_t223 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI S1, S0, 1
    LOAD T5, SB, S1
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, S3, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t224 to Dynamic("load_f30_op946_t223_bank_val")
; Spill store_f30_op921_resolved_bank_30_f30_op922 to slot 507
    ADD SC, FP, R0
    ADDI SC, SC, 517
    STORE T6, SB, SC
    LI T6, 0
; Spill t219 to slot 508
    ADD SC, FP, R0
    ADDI SC, SC, 518
    STORE S2, SB, SC
; Spill load_f30_op928_t219_bank_val to slot 509
    ADD SC, FP, R0
    ADDI SC, SC, 519
    STORE T4, SB, SC
; Spill t220 to slot 510
    ADD SC, FP, R0
    ADDI SC, SC, 520
    STORE T0, SB, SC
; Spill load_f30_op928_t219_bank_val to slot 511
    ADD SC, FP, R0
    ADDI SC, SC, 521
    STORE T4, SB, SC
    LI T0, -1
    BEQ T5, T0, L_bc_bdebd498_use_global
; Spill load_f30_op928_t219_bank_val to slot 512
    ADD SC, FP, R0
    ADDI SC, SC, 522
    STORE T4, SB, SC
    LI T4, -2
    BEQ T5, T4, L_bc_bdebd498_use_stack
    ADD S2, T5, R0
    BEQ R0, R0, L_bc_bdebd498_done
L_bc_bdebd498_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_bdebd498_done
L_bc_bdebd498_use_stack:
    ADD S2, SB, R0
L_bc_bdebd498_done:
    STORE T6, S2, S1
; Load instruction: t225 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op953_t225 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T0
    LI T6, 1752
; Spill store_f30_op930_resolved_bank_30_f30_op931 to slot 513
    ADD SC, FP, R0
    ADDI SC, SC, 523
    STORE T7, SB, SC
; Spill t221 to slot 514
    ADD SC, FP, R0
    ADDI SC, SC, 524
    STORE T1, SB, SC
; Spill load_f30_op937_t221_bank_val to slot 515
    ADD SC, FP, R0
    ADDI SC, SC, 525
    STORE RV0, SB, SC
    ADD T1, T4, R0
    ADD T7, T6, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill t222 to slot 516
    ADD SC, FP, R0
    ADDI SC, SC, 526
    STORE T3, SB, SC
; Spill load_f30_op937_t221_bank_val to slot 517
    ADD SC, FP, R0
    ADDI SC, SC, 527
    STORE RV0, SB, SC
; Spill load_f30_op937_t221_bank_val to slot 518
    ADD SC, FP, R0
    ADDI SC, SC, 528
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T3, T7, RV0
; Spill store_f30_op939_resolved_bank_30_f30_op940 to slot 519
    ADD SC, FP, R0
    ADDI SC, SC, 529
    STORE T2, SB, SC
    MOD T2, T7, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op960_t226'
; Computing new bank gep_new_bank_f30_op960_t226 = GP + bank_delta
    ADD S0, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f30_op960_t226)
    ADD T7, T2, R0
; GEP: Setting bank info for t226 to Dynamic("gep_new_bank_f30_op960_t226")
    LI T1, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_3c4aba34_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_3c4aba34_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_3c4aba34_done
L_bc_3c4aba34_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_3c4aba34_done
L_bc_3c4aba34_use_stack:
    ADD T3, SB, R0
L_bc_3c4aba34_done:
    STORE T1, T3, T7
; Load instruction: t227 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op967_t227 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T6
    LI T2, 1802
; Spill t223 to slot 520
    ADD SC, FP, R0
    ADDI SC, SC, 530
    STORE S3, SB, SC
; Spill load_f30_op946_t223_bank_val to slot 521
    ADD SC, FP, R0
    ADDI SC, SC, 531
    STORE T5, SB, SC
    ADD S3, RV0, R0
    ADD T1, T2, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t224 to slot 522
    ADD SC, FP, R0
    ADDI SC, SC, 532
    STORE S1, SB, SC
; Spill load_f30_op946_t223_bank_val to slot 523
    ADD SC, FP, R0
    ADDI SC, SC, 533
    STORE T5, SB, SC
; Spill load_f30_op946_t223_bank_val to slot 524
    ADD SC, FP, R0
    ADDI SC, SC, 534
    STORE T5, SB, SC
    LI T5, -1
    DIV S1, T1, T5
; Spill store_f30_op948_resolved_bank_30_f30_op949 to slot 525
    ADD SC, FP, R0
    ADDI SC, SC, 535
    STORE S2, SB, SC
    MOD S2, T1, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op974_t228'
; Spill load_f30_op952_t225_addr to slot 526
    ADD SC, FP, R0
    ADDI SC, SC, 536
    STORE T0, SB, SC
; Computing new bank gep_new_bank_f30_op974_t228 = GP + bank_delta
    ADD T0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op974_t228)
    ADD T1, S2, R0
; GEP: Setting bank info for t228 to Dynamic("gep_new_bank_f30_op974_t228")
    LI S3, 0
    LI T5, -1
    BEQ T0, T5, L_bc_a92fe549_use_global
    LI S2, -2
    BEQ T0, S2, L_bc_a92fe549_use_stack
    ADD S1, T0, R0
    BEQ R0, R0, L_bc_a92fe549_done
L_bc_a92fe549_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_a92fe549_done
L_bc_a92fe549_use_stack:
    ADD S1, SB, R0
L_bc_a92fe549_done:
    STORE S3, S1, T1
; Load instruction: t229 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op981_t229 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T2
    LI S2, 0
    ADD T5, T5, S2
; Load instruction: t231 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op984_t231 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
; Spill t225 to slot 527
    ADD SC, FP, R0
    ADDI SC, SC, 537
    STORE T4, SB, SC
    LI T4, 1
    ADD S2, S2, T4
    LI T4, 1852
    STORE S2, GP, T4
; Load instruction: t233 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op989_t233 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t226 to slot 528
    ADD SC, FP, R0
    ADDI SC, SC, 538
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op960_t226 to slot 529
    ADD SC, FP, R0
    ADDI SC, SC, 539
    STORE S0, SB, SC
    LOAD T7, GP, T4
; Spill live registers before call
; Spill gep_new_bank_f30_op960_t226 to slot 530
    ADD SC, FP, R0
    ADDI SC, SC, 540
    STORE S0, SB, SC
; Spill store_f30_op962_resolved_bank_30_f30_op963 to slot 531
    ADD SC, FP, R0
    ADDI SC, SC, 541
    STORE T3, SB, SC
; Spill load_f30_op966_t227_addr to slot 532
    ADD SC, FP, R0
    ADDI SC, SC, 542
    STORE T6, SB, SC
; Spill t227 to slot 533
    ADD SC, FP, R0
    ADDI SC, SC, 543
    STORE RV0, SB, SC
; Spill t228 to slot 534
    ADD SC, FP, R0
    ADDI SC, SC, 544
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op974_t228 to slot 535
    ADD SC, FP, R0
    ADDI SC, SC, 545
    STORE T0, SB, SC
; Spill gep_new_bank_f30_op974_t228 to slot 536
    ADD SC, FP, R0
    ADDI SC, SC, 546
    STORE T0, SB, SC
; Spill store_f30_op976_resolved_bank_30_f30_op977 to slot 537
    ADD SC, FP, R0
    ADDI SC, SC, 547
    STORE S1, SB, SC
; Spill load_f30_op980_t229_addr to slot 538
    ADD SC, FP, R0
    ADDI SC, SC, 548
    STORE T2, SB, SC
; Spill t230 to slot 539
    ADD SC, FP, R0
    ADDI SC, SC, 549
    STORE T5, SB, SC
; Spill load_f30_op983_t231_addr to slot 540
    ADD SC, FP, R0
    ADDI SC, SC, 550
    STORE S3, SB, SC
; Spill t232 to slot 541
    ADD SC, FP, R0
    ADDI SC, SC, 551
    STORE S2, SB, SC
; Spill load_f30_op988_t233_addr to slot 542
    ADD SC, FP, R0
    ADDI SC, SC, 552
    STORE T4, SB, SC
; Spill t233 to slot 543
    ADD SC, FP, R0
    ADDI SC, SC, 553
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t234
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T3, S0, 1
    STORE RV1, SB, T3
; Load instruction: t235 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op993_t235 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T1, S0, 1
    LOAD T0, SB, T1
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD S1, T6, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t236 to Dynamic("load_f30_op996_t235_bank_val")
    LI T2, 46
    LI S3, -1
    BEQ T0, S3, L_bc_0dc1c071_use_global
    LI S2, -2
    BEQ T0, S2, L_bc_0dc1c071_use_stack
    ADD T5, T0, R0
    BEQ R0, R0, L_bc_0dc1c071_done
L_bc_0dc1c071_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_0dc1c071_done
L_bc_0dc1c071_use_stack:
    ADD T5, SB, R0
L_bc_0dc1c071_done:
    STORE T2, T5, S1
; Load instruction: t237 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1002_t237 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI T7, S0, 1
    LOAD T3, SB, T7
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T4, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t238 to Dynamic("load_f30_op1005_t237_bank_val")
    LI S3, 0
    LI T2, -1
    BEQ T3, T2, L_bc_cf0518a4_use_global
    LI T7, -2
    BEQ T3, T7, L_bc_cf0518a4_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_cf0518a4_done
L_bc_cf0518a4_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_cf0518a4_done
L_bc_cf0518a4_use_stack:
    ADD S2, SB, R0
L_bc_cf0518a4_done:
    STORE S3, S2, T1
; Load instruction: t239 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op1012_t239 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T2
    LI S3, 1752
; Spill t234 to slot 544
    ADD SC, FP, R0
    ADDI SC, SC, 554
    STORE RV0, SB, SC
; Spill t235 to slot 545
    ADD SC, FP, R0
    ADDI SC, SC, 555
    STORE T6, SB, SC
; Spill load_f30_op996_t235_bank_val to slot 546
    ADD SC, FP, R0
    ADDI SC, SC, 556
    STORE T0, SB, SC
    ADD T6, T7, R0
    ADD RV0, S3, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t236 to slot 547
    ADD SC, FP, R0
    ADDI SC, SC, 557
    STORE S1, SB, SC
; Spill load_f30_op996_t235_bank_val to slot 548
    ADD SC, FP, R0
    ADDI SC, SC, 558
    STORE T0, SB, SC
; Spill load_f30_op996_t235_bank_val to slot 549
    ADD SC, FP, R0
    ADDI SC, SC, 559
    STORE T0, SB, SC
    LI T0, -1
    DIV S1, RV0, T0
; Spill store_f30_op998_resolved_bank_30_f30_op999 to slot 550
    ADD SC, FP, R0
    ADDI SC, SC, 560
    STORE T5, SB, SC
    MOD T5, RV0, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1019_t240'
; Computing new bank gep_new_bank_f30_op1019_t240 = GP + bank_delta
    ADD S0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op1019_t240)
    ADD RV0, T5, R0
; GEP: Setting bank info for t240 to Dynamic("gep_new_bank_f30_op1019_t240")
    LI T6, 1
    LI T0, -1
    BEQ S0, T0, L_bc_0369971e_use_global
    LI T5, -2
    BEQ S0, T5, L_bc_0369971e_use_stack
    ADD S1, S0, R0
    BEQ R0, R0, L_bc_0369971e_done
L_bc_0369971e_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_0369971e_done
L_bc_0369971e_use_stack:
    ADD S1, SB, R0
L_bc_0369971e_done:
    STORE T6, S1, RV0
; Load instruction: t241 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op1026_t241 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, S3
    LI T5, 1802
; Spill t237 to slot 551
    ADD SC, FP, R0
    ADDI SC, SC, 561
    STORE T4, SB, SC
; Spill load_f30_op1005_t237_bank_val to slot 552
    ADD SC, FP, R0
    ADDI SC, SC, 562
    STORE T3, SB, SC
    ADD T4, T0, R0
    ADD T6, T5, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t238 to slot 553
    ADD SC, FP, R0
    ADDI SC, SC, 563
    STORE T1, SB, SC
; Spill load_f30_op1005_t237_bank_val to slot 554
    ADD SC, FP, R0
    ADDI SC, SC, 564
    STORE T3, SB, SC
; Spill load_f30_op1005_t237_bank_val to slot 555
    ADD SC, FP, R0
    ADDI SC, SC, 565
    STORE T3, SB, SC
    LI T3, -1
    DIV T1, T6, T3
; Spill store_f30_op1007_resolved_bank_30_f30_op1008 to slot 556
    ADD SC, FP, R0
    ADDI SC, SC, 566
    STORE S2, SB, SC
    MOD S2, T6, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1033_t242'
; Spill load_f30_op1011_t239_addr to slot 557
    ADD SC, FP, R0
    ADDI SC, SC, 567
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op1033_t242 = GP + bank_delta
    ADD T2, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f30_op1033_t242)
    ADD T6, S2, R0
; GEP: Setting bank info for t242 to Dynamic("gep_new_bank_f30_op1033_t242")
    LI T4, 0
    LI T3, -1
    BEQ T2, T3, L_bc_2f5d8961_use_global
    LI S2, -2
    BEQ T2, S2, L_bc_2f5d8961_use_stack
    ADD T1, T2, R0
    BEQ R0, R0, L_bc_2f5d8961_done
L_bc_2f5d8961_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_2f5d8961_done
L_bc_2f5d8961_use_stack:
    ADD T1, SB, R0
L_bc_2f5d8961_done:
    STORE T4, T1, T6
; Load instruction: t243 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op1040_t243 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T5
    LI S2, 0
    ADD T3, T3, S2
; Load instruction: t245 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1043_t245 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T4
; Spill t239 to slot 558
    ADD SC, FP, R0
    ADDI SC, SC, 568
    STORE T7, SB, SC
    LI T7, 1
    ADD S2, S2, T7
    LI T7, 1852
    STORE S2, GP, T7
; Load instruction: t247 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op1048_t247 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t240 to slot 559
    ADD SC, FP, R0
    ADDI SC, SC, 569
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op1019_t240 to slot 560
    ADD SC, FP, R0
    ADDI SC, SC, 570
    STORE S0, SB, SC
    LOAD RV0, GP, T7
; Spill live registers before call
; Spill gep_new_bank_f30_op1019_t240 to slot 561
    ADD SC, FP, R0
    ADDI SC, SC, 571
    STORE S0, SB, SC
; Spill store_f30_op1021_resolved_bank_30_f30_op1022 to slot 562
    ADD SC, FP, R0
    ADDI SC, SC, 572
    STORE S1, SB, SC
; Spill load_f30_op1025_t241_addr to slot 563
    ADD SC, FP, R0
    ADDI SC, SC, 573
    STORE S3, SB, SC
; Spill t241 to slot 564
    ADD SC, FP, R0
    ADDI SC, SC, 574
    STORE T0, SB, SC
; Spill t242 to slot 565
    ADD SC, FP, R0
    ADDI SC, SC, 575
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op1033_t242 to slot 566
    ADD SC, FP, R0
    ADDI SC, SC, 576
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1033_t242 to slot 567
    ADD SC, FP, R0
    ADDI SC, SC, 577
    STORE T2, SB, SC
; Spill store_f30_op1035_resolved_bank_30_f30_op1036 to slot 568
    ADD SC, FP, R0
    ADDI SC, SC, 578
    STORE T1, SB, SC
; Spill load_f30_op1039_t243_addr to slot 569
    ADD SC, FP, R0
    ADDI SC, SC, 579
    STORE T5, SB, SC
; Spill t244 to slot 570
    ADD SC, FP, R0
    ADDI SC, SC, 580
    STORE T3, SB, SC
; Spill load_f30_op1042_t245_addr to slot 571
    ADD SC, FP, R0
    ADDI SC, SC, 581
    STORE T4, SB, SC
; Spill t246 to slot 572
    ADD SC, FP, R0
    ADDI SC, SC, 582
    STORE S2, SB, SC
; Spill load_f30_op1047_t247_addr to slot 573
    ADD SC, FP, R0
    ADDI SC, SC, 583
    STORE T7, SB, SC
; Spill t247 to slot 574
    ADD SC, FP, R0
    ADDI SC, SC, 584
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t248
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S1, S0, 1
    STORE RV1, SB, S1
; Load instruction: t249 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1052_t249 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI T0, S0, 1
    LOAD T6, SB, T0
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, S3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t250 to Dynamic("load_f30_op1055_t249_bank_val")
    LI T1, 67
    LI T3, -1
    BEQ T6, T3, L_bc_8e564dfa_use_global
    LI T4, -2
    BEQ T6, T4, L_bc_8e564dfa_use_stack
    ADD T5, T6, R0
    BEQ R0, R0, L_bc_8e564dfa_done
L_bc_8e564dfa_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_8e564dfa_done
L_bc_8e564dfa_use_stack:
    ADD T5, SB, R0
L_bc_8e564dfa_done:
    STORE T1, T5, T2
; Load instruction: t251 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1061_t251 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T7, S0, 1
    LOAD S1, SB, T7
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T0, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t252 to Dynamic("load_f30_op1064_t251_bank_val")
    LI T3, 82
    LI T1, -1
    BEQ S1, T1, L_bc_ff85dcdd_use_global
    LI T7, -2
    BEQ S1, T7, L_bc_ff85dcdd_use_stack
    ADD T4, S1, R0
    BEQ R0, R0, L_bc_ff85dcdd_done
L_bc_ff85dcdd_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_ff85dcdd_done
L_bc_ff85dcdd_use_stack:
    ADD T4, SB, R0
L_bc_ff85dcdd_done:
    STORE T3, T4, T0
; Load instruction: t253 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1070_t253 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T7, S0, 1
    LOAD T3, SB, T7
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, T1, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t254 to Dynamic("load_f30_op1073_t253_bank_val")
; Spill t248 to slot 575
    ADD SC, FP, R0
    ADDI SC, SC, 585
    STORE RV0, SB, SC
    LI RV0, 0
; Spill t249 to slot 576
    ADD SC, FP, R0
    ADDI SC, SC, 586
    STORE S3, SB, SC
; Spill load_f30_op1055_t249_bank_val to slot 577
    ADD SC, FP, R0
    ADDI SC, SC, 587
    STORE T6, SB, SC
; Spill t250 to slot 578
    ADD SC, FP, R0
    ADDI SC, SC, 588
    STORE T2, SB, SC
; Spill load_f30_op1055_t249_bank_val to slot 579
    ADD SC, FP, R0
    ADDI SC, SC, 589
    STORE T6, SB, SC
    LI T2, -1
    BEQ T3, T2, L_bc_d3a3f84c_use_global
; Spill load_f30_op1055_t249_bank_val to slot 580
    ADD SC, FP, R0
    ADDI SC, SC, 590
    STORE T6, SB, SC
    LI T6, -2
    BEQ T3, T6, L_bc_d3a3f84c_use_stack
    ADD S3, T3, R0
    BEQ R0, R0, L_bc_d3a3f84c_done
L_bc_d3a3f84c_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_d3a3f84c_done
L_bc_d3a3f84c_use_stack:
    ADD S3, SB, R0
L_bc_d3a3f84c_done:
    STORE RV0, S3, T7
; Load instruction: t255 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op1080_t255 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T2
    LI RV0, 1752
; Spill store_f30_op1057_resolved_bank_30_f30_op1058 to slot 581
    ADD SC, FP, R0
    ADDI SC, SC, 591
    STORE T5, SB, SC
; Spill t251 to slot 582
    ADD SC, FP, R0
    ADDI SC, SC, 592
    STORE S2, SB, SC
; Spill load_f30_op1064_t251_bank_val to slot 583
    ADD SC, FP, R0
    ADDI SC, SC, 593
    STORE S1, SB, SC
    ADD S2, T6, R0
    ADD T5, RV0, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t252 to slot 584
    ADD SC, FP, R0
    ADDI SC, SC, 594
    STORE T0, SB, SC
; Spill load_f30_op1064_t251_bank_val to slot 585
    ADD SC, FP, R0
    ADDI SC, SC, 595
    STORE S1, SB, SC
; Spill load_f30_op1064_t251_bank_val to slot 586
    ADD SC, FP, R0
    ADDI SC, SC, 596
    STORE S1, SB, SC
    LI S1, -1
    DIV T0, T5, S1
; Spill store_f30_op1066_resolved_bank_30_f30_op1067 to slot 587
    ADD SC, FP, R0
    ADDI SC, SC, 597
    STORE T4, SB, SC
    MOD T4, T5, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1087_t256'
; Computing new bank gep_new_bank_f30_op1087_t256 = GP + bank_delta
    ADD S0, GP, T0
; Result bank tracked as Dynamic(gep_new_bank_f30_op1087_t256)
    ADD T5, T4, R0
; GEP: Setting bank info for t256 to Dynamic("gep_new_bank_f30_op1087_t256")
    LI S2, 1
    LI S1, -1
    BEQ S0, S1, L_bc_c4a7ea9f_use_global
    LI T4, -2
    BEQ S0, T4, L_bc_c4a7ea9f_use_stack
    ADD T0, S0, R0
    BEQ R0, R0, L_bc_c4a7ea9f_done
L_bc_c4a7ea9f_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_c4a7ea9f_done
L_bc_c4a7ea9f_use_stack:
    ADD T0, SB, R0
L_bc_c4a7ea9f_done:
    STORE S2, T0, T5
; Load instruction: t257 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1094_t257 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, RV0
    LI T4, 1802
; Spill t253 to slot 588
    ADD SC, FP, R0
    ADDI SC, SC, 598
    STORE T1, SB, SC
; Spill load_f30_op1073_t253_bank_val to slot 589
    ADD SC, FP, R0
    ADDI SC, SC, 599
    STORE T3, SB, SC
    ADD T1, S1, R0
    ADD S2, T4, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill t254 to slot 590
    ADD SC, FP, R0
    ADDI SC, SC, 600
    STORE T7, SB, SC
; Spill load_f30_op1073_t253_bank_val to slot 591
    ADD SC, FP, R0
    ADDI SC, SC, 601
    STORE T3, SB, SC
; Spill load_f30_op1073_t253_bank_val to slot 592
    ADD SC, FP, R0
    ADDI SC, SC, 602
    STORE T3, SB, SC
    LI T3, -1
    DIV T7, S2, T3
; Spill store_f30_op1075_resolved_bank_30_f30_op1076 to slot 593
    ADD SC, FP, R0
    ADDI SC, SC, 603
    STORE S3, SB, SC
    MOD S3, S2, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1101_t258'
; Spill load_f30_op1079_t255_addr to slot 594
    ADD SC, FP, R0
    ADDI SC, SC, 604
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op1101_t258 = GP + bank_delta
    ADD T2, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op1101_t258)
    ADD S2, S3, R0
; GEP: Setting bank info for t258 to Dynamic("gep_new_bank_f30_op1101_t258")
    LI T1, 0
    LI T3, -1
    BEQ T2, T3, L_bc_09b06c7c_use_global
    LI S3, -2
    BEQ T2, S3, L_bc_09b06c7c_use_stack
    ADD T7, T2, R0
    BEQ R0, R0, L_bc_09b06c7c_done
L_bc_09b06c7c_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_09b06c7c_done
L_bc_09b06c7c_use_stack:
    ADD T7, SB, R0
L_bc_09b06c7c_done:
    STORE T1, T7, S2
; Load instruction: t259 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1108_t259 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T4
    LI S3, 0
    ADD T3, T3, S3
; Load instruction: t261 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1111_t261 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T1
; Spill t255 to slot 595
    ADD SC, FP, R0
    ADDI SC, SC, 605
    STORE T6, SB, SC
    LI T6, 1
    ADD S3, S3, T6
    LI T6, 1852
    STORE S3, GP, T6
; Load instruction: t263 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op1116_t263 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t256 to slot 596
    ADD SC, FP, R0
    ADDI SC, SC, 606
    STORE T5, SB, SC
; Spill gep_new_bank_f30_op1087_t256 to slot 597
    ADD SC, FP, R0
    ADDI SC, SC, 607
    STORE S0, SB, SC
    LOAD T5, GP, T6
; Spill live registers before call
; Spill gep_new_bank_f30_op1087_t256 to slot 598
    ADD SC, FP, R0
    ADDI SC, SC, 608
    STORE S0, SB, SC
; Spill store_f30_op1089_resolved_bank_30_f30_op1090 to slot 599
    ADD SC, FP, R0
    ADDI SC, SC, 609
    STORE T0, SB, SC
; Spill load_f30_op1093_t257_addr to slot 600
    ADD SC, FP, R0
    ADDI SC, SC, 610
    STORE RV0, SB, SC
; Spill t257 to slot 601
    ADD SC, FP, R0
    ADDI SC, SC, 611
    STORE S1, SB, SC
; Spill t258 to slot 602
    ADD SC, FP, R0
    ADDI SC, SC, 612
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op1101_t258 to slot 603
    ADD SC, FP, R0
    ADDI SC, SC, 613
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1101_t258 to slot 604
    ADD SC, FP, R0
    ADDI SC, SC, 614
    STORE T2, SB, SC
; Spill store_f30_op1103_resolved_bank_30_f30_op1104 to slot 605
    ADD SC, FP, R0
    ADDI SC, SC, 615
    STORE T7, SB, SC
; Spill load_f30_op1107_t259_addr to slot 606
    ADD SC, FP, R0
    ADDI SC, SC, 616
    STORE T4, SB, SC
; Spill t260 to slot 607
    ADD SC, FP, R0
    ADDI SC, SC, 617
    STORE T3, SB, SC
; Spill load_f30_op1110_t261_addr to slot 608
    ADD SC, FP, R0
    ADDI SC, SC, 618
    STORE T1, SB, SC
; Spill t262 to slot 609
    ADD SC, FP, R0
    ADDI SC, SC, 619
    STORE S3, SB, SC
; Spill load_f30_op1115_t263_addr to slot 610
    ADD SC, FP, R0
    ADDI SC, SC, 620
    STORE T6, SB, SC
; Spill t263 to slot 611
    ADD SC, FP, R0
    ADDI SC, SC, 621
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T5, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t264
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T0, S0, 1
    STORE RV1, SB, T0
; Load instruction: t265 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1120_t265 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI S2, S0, 1
    LOAD T2, SB, S2
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t266 to Dynamic("load_f30_op1123_t265_bank_val")
    LI T4, 46
    LI T1, -1
    BEQ T2, T1, L_bc_7c723dec_use_global
    LI S3, -2
    BEQ T2, S3, L_bc_7c723dec_use_stack
    ADD T3, T2, R0
    BEQ R0, R0, L_bc_7c723dec_done
L_bc_7c723dec_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_7c723dec_done
L_bc_7c723dec_use_stack:
    ADD T3, SB, R0
L_bc_7c723dec_done:
    STORE T4, T3, T7
; Load instruction: t267 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1129_t267 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T5, S0, 1
    LOAD T0, SB, T5
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T6, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t268 to Dynamic("load_f30_op1132_t267_bank_val")
    LI T1, 83
    LI T4, -1
    BEQ T0, T4, L_bc_e16ca79d_use_global
    LI T5, -2
    BEQ T0, T5, L_bc_e16ca79d_use_stack
    ADD S3, T0, R0
    BEQ R0, R0, L_bc_e16ca79d_done
L_bc_e16ca79d_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_e16ca79d_done
L_bc_e16ca79d_use_stack:
    ADD S3, SB, R0
L_bc_e16ca79d_done:
    STORE T1, S3, S2
; Load instruction: t269 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1138_t269 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI T5, S0, 1
    LOAD T1, SB, T5
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, T4, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t270 to Dynamic("load_f30_op1141_t269_bank_val")
; Spill t264 to slot 612
    ADD SC, FP, R0
    ADDI SC, SC, 622
    STORE RV0, SB, SC
    LI RV0, 0
; Spill t265 to slot 613
    ADD SC, FP, R0
    ADDI SC, SC, 623
    STORE S1, SB, SC
; Spill load_f30_op1123_t265_bank_val to slot 614
    ADD SC, FP, R0
    ADDI SC, SC, 624
    STORE T2, SB, SC
; Spill t266 to slot 615
    ADD SC, FP, R0
    ADDI SC, SC, 625
    STORE T7, SB, SC
; Spill load_f30_op1123_t265_bank_val to slot 616
    ADD SC, FP, R0
    ADDI SC, SC, 626
    STORE T2, SB, SC
    LI T7, -1
    BEQ T1, T7, L_bc_023c731a_use_global
; Spill load_f30_op1123_t265_bank_val to slot 617
    ADD SC, FP, R0
    ADDI SC, SC, 627
    STORE T2, SB, SC
    LI T2, -2
    BEQ T1, T2, L_bc_023c731a_use_stack
    ADD S1, T1, R0
    BEQ R0, R0, L_bc_023c731a_done
L_bc_023c731a_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_023c731a_done
L_bc_023c731a_use_stack:
    ADD S1, SB, R0
L_bc_023c731a_done:
    STORE RV0, S1, T5
; Load instruction: t271 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op1148_t271 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T7
    LI RV0, 1752
; Spill store_f30_op1125_resolved_bank_30_f30_op1126 to slot 618
    ADD SC, FP, R0
    ADDI SC, SC, 628
    STORE T3, SB, SC
; Spill t267 to slot 619
    ADD SC, FP, R0
    ADDI SC, SC, 629
    STORE T6, SB, SC
; Spill load_f30_op1132_t267_bank_val to slot 620
    ADD SC, FP, R0
    ADDI SC, SC, 630
    STORE T0, SB, SC
    ADD T6, T2, R0
    ADD T3, RV0, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t268 to slot 621
    ADD SC, FP, R0
    ADDI SC, SC, 631
    STORE S2, SB, SC
; Spill load_f30_op1132_t267_bank_val to slot 622
    ADD SC, FP, R0
    ADDI SC, SC, 632
    STORE T0, SB, SC
; Spill load_f30_op1132_t267_bank_val to slot 623
    ADD SC, FP, R0
    ADDI SC, SC, 633
    STORE T0, SB, SC
    LI T0, -1
    DIV S2, T3, T0
; Spill store_f30_op1134_resolved_bank_30_f30_op1135 to slot 624
    ADD SC, FP, R0
    ADDI SC, SC, 634
    STORE S3, SB, SC
    MOD S3, T3, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1155_t272'
; Computing new bank gep_new_bank_f30_op1155_t272 = GP + bank_delta
    ADD S0, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1155_t272)
    ADD T3, S3, R0
; GEP: Setting bank info for t272 to Dynamic("gep_new_bank_f30_op1155_t272")
    LI T6, 1
    LI T0, -1
    BEQ S0, T0, L_bc_0f8368c8_use_global
    LI S3, -2
    BEQ S0, S3, L_bc_0f8368c8_use_stack
    ADD S2, S0, R0
    BEQ R0, R0, L_bc_0f8368c8_done
L_bc_0f8368c8_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_0f8368c8_done
L_bc_0f8368c8_use_stack:
    ADD S2, SB, R0
L_bc_0f8368c8_done:
    STORE T6, S2, T3
; Load instruction: t273 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1162_t273 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, RV0
    LI S3, 1802
; Spill t269 to slot 625
    ADD SC, FP, R0
    ADDI SC, SC, 635
    STORE T4, SB, SC
; Spill load_f30_op1141_t269_bank_val to slot 626
    ADD SC, FP, R0
    ADDI SC, SC, 636
    STORE T1, SB, SC
    ADD T4, T0, R0
    ADD T6, S3, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t270 to slot 627
    ADD SC, FP, R0
    ADDI SC, SC, 637
    STORE T5, SB, SC
; Spill load_f30_op1141_t269_bank_val to slot 628
    ADD SC, FP, R0
    ADDI SC, SC, 638
    STORE T1, SB, SC
; Spill load_f30_op1141_t269_bank_val to slot 629
    ADD SC, FP, R0
    ADDI SC, SC, 639
    STORE T1, SB, SC
    LI T1, -1
    DIV T5, T6, T1
; Spill store_f30_op1143_resolved_bank_30_f30_op1144 to slot 630
    ADD SC, FP, R0
    ADDI SC, SC, 640
    STORE S1, SB, SC
    MOD S1, T6, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1169_t274'
; Spill load_f30_op1147_t271_addr to slot 631
    ADD SC, FP, R0
    ADDI SC, SC, 641
    STORE T7, SB, SC
; Computing new bank gep_new_bank_f30_op1169_t274 = GP + bank_delta
    ADD T7, GP, T5
; Result bank tracked as Dynamic(gep_new_bank_f30_op1169_t274)
    ADD T6, S1, R0
; GEP: Setting bank info for t274 to Dynamic("gep_new_bank_f30_op1169_t274")
    LI T4, 0
    LI T1, -1
    BEQ T7, T1, L_bc_93992d1f_use_global
    LI S1, -2
    BEQ T7, S1, L_bc_93992d1f_use_stack
    ADD T5, T7, R0
    BEQ R0, R0, L_bc_93992d1f_done
L_bc_93992d1f_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_93992d1f_done
L_bc_93992d1f_use_stack:
    ADD T5, SB, R0
L_bc_93992d1f_done:
    STORE T4, T5, T6
; Load instruction: t275 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op1176_t275 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S3
    LI S1, 0
    ADD T1, T1, S1
; Load instruction: t277 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1179_t277 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T4
; Spill t271 to slot 632
    ADD SC, FP, R0
    ADDI SC, SC, 642
    STORE T2, SB, SC
    LI T2, 1
    ADD S1, S1, T2
    LI T2, 1852
    STORE S1, GP, T2
; Load instruction: t279 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op1184_t279 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t272 to slot 633
    ADD SC, FP, R0
    ADDI SC, SC, 643
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1155_t272 to slot 634
    ADD SC, FP, R0
    ADDI SC, SC, 644
    STORE S0, SB, SC
    LOAD T3, GP, T2
; Spill live registers before call
; Spill gep_new_bank_f30_op1155_t272 to slot 635
    ADD SC, FP, R0
    ADDI SC, SC, 645
    STORE S0, SB, SC
; Spill store_f30_op1157_resolved_bank_30_f30_op1158 to slot 636
    ADD SC, FP, R0
    ADDI SC, SC, 646
    STORE S2, SB, SC
; Spill load_f30_op1161_t273_addr to slot 637
    ADD SC, FP, R0
    ADDI SC, SC, 647
    STORE RV0, SB, SC
; Spill t273 to slot 638
    ADD SC, FP, R0
    ADDI SC, SC, 648
    STORE T0, SB, SC
; Spill t274 to slot 639
    ADD SC, FP, R0
    ADDI SC, SC, 649
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op1169_t274 to slot 640
    ADD SC, FP, R0
    ADDI SC, SC, 650
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op1169_t274 to slot 641
    ADD SC, FP, R0
    ADDI SC, SC, 651
    STORE T7, SB, SC
; Spill store_f30_op1171_resolved_bank_30_f30_op1172 to slot 642
    ADD SC, FP, R0
    ADDI SC, SC, 652
    STORE T5, SB, SC
; Spill load_f30_op1175_t275_addr to slot 643
    ADD SC, FP, R0
    ADDI SC, SC, 653
    STORE S3, SB, SC
; Spill t276 to slot 644
    ADD SC, FP, R0
    ADDI SC, SC, 654
    STORE T1, SB, SC
; Spill load_f30_op1178_t277_addr to slot 645
    ADD SC, FP, R0
    ADDI SC, SC, 655
    STORE T4, SB, SC
; Spill t278 to slot 646
    ADD SC, FP, R0
    ADDI SC, SC, 656
    STORE S1, SB, SC
; Spill load_f30_op1183_t279_addr to slot 647
    ADD SC, FP, R0
    ADDI SC, SC, 657
    STORE T2, SB, SC
; Spill t279 to slot 648
    ADD SC, FP, R0
    ADDI SC, SC, 658
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t280
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S2, S0, 1
    STORE RV1, SB, S2
; Load instruction: t281 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1188_t281 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T6, S0, 1
    LOAD T7, SB, T6
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T5, T0, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t282 to Dynamic("load_f30_op1191_t281_bank_val")
    LI S3, 87
    LI T4, -1
    BEQ T7, T4, L_bc_85cd38eb_use_global
    LI S1, -2
    BEQ T7, S1, L_bc_85cd38eb_use_stack
    ADD T1, T7, R0
    BEQ R0, R0, L_bc_85cd38eb_done
L_bc_85cd38eb_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_85cd38eb_done
L_bc_85cd38eb_use_stack:
    ADD T1, SB, R0
L_bc_85cd38eb_done:
    STORE S3, T1, T5
; Load instruction: t283 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1197_t283 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T3, S0, 1
    LOAD S2, SB, T3
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t284 to Dynamic("load_f30_op1200_t283_bank_val")
    LI T4, 79
    LI S3, -1
    BEQ S2, S3, L_bc_fc267ad8_use_global
    LI T3, -2
    BEQ S2, T3, L_bc_fc267ad8_use_stack
    ADD S1, S2, R0
    BEQ R0, R0, L_bc_fc267ad8_done
L_bc_fc267ad8_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_fc267ad8_done
L_bc_fc267ad8_use_stack:
    ADD S1, SB, R0
L_bc_fc267ad8_done:
    STORE T4, S1, T6
; Load instruction: t285 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1206_t285 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI T3, S0, 1
    LOAD T4, SB, T3
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, S3, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t286 to Dynamic("load_f30_op1209_t285_bank_val")
; Spill t280 to slot 649
    ADD SC, FP, R0
    ADDI SC, SC, 659
    STORE RV0, SB, SC
    LI RV0, 82
; Spill t281 to slot 650
    ADD SC, FP, R0
    ADDI SC, SC, 660
    STORE T0, SB, SC
; Spill load_f30_op1191_t281_bank_val to slot 651
    ADD SC, FP, R0
    ADDI SC, SC, 661
    STORE T7, SB, SC
; Spill t282 to slot 652
    ADD SC, FP, R0
    ADDI SC, SC, 662
    STORE T5, SB, SC
; Spill load_f30_op1191_t281_bank_val to slot 653
    ADD SC, FP, R0
    ADDI SC, SC, 663
    STORE T7, SB, SC
    LI T5, -1
    BEQ T4, T5, L_bc_70f22434_use_global
; Spill load_f30_op1191_t281_bank_val to slot 654
    ADD SC, FP, R0
    ADDI SC, SC, 664
    STORE T7, SB, SC
    LI T7, -2
    BEQ T4, T7, L_bc_70f22434_use_stack
    ADD T0, T4, R0
    BEQ R0, R0, L_bc_70f22434_done
L_bc_70f22434_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_70f22434_done
L_bc_70f22434_use_stack:
    ADD T0, SB, R0
L_bc_70f22434_done:
    STORE RV0, T0, T3
; Load instruction: t287 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1215_t287 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T7, S0, 1
    LOAD RV0, SB, T7
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, T5, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t288 to Dynamic("load_f30_op1218_t287_bank_val")
; Spill store_f30_op1193_resolved_bank_30_f30_op1194 to slot 655
    ADD SC, FP, R0
    ADDI SC, SC, 665
    STORE T1, SB, SC
    LI T1, 68
; Spill t283 to slot 656
    ADD SC, FP, R0
    ADDI SC, SC, 666
    STORE T2, SB, SC
; Spill load_f30_op1200_t283_bank_val to slot 657
    ADD SC, FP, R0
    ADDI SC, SC, 667
    STORE S2, SB, SC
; Spill t284 to slot 658
    ADD SC, FP, R0
    ADDI SC, SC, 668
    STORE T6, SB, SC
; Spill load_f30_op1200_t283_bank_val to slot 659
    ADD SC, FP, R0
    ADDI SC, SC, 669
    STORE S2, SB, SC
    LI T6, -1
    BEQ RV0, T6, L_bc_f2e37f49_use_global
; Spill load_f30_op1200_t283_bank_val to slot 660
    ADD SC, FP, R0
    ADDI SC, SC, 670
    STORE S2, SB, SC
    LI S2, -2
    BEQ RV0, S2, L_bc_f2e37f49_use_stack
    ADD T2, RV0, R0
    BEQ R0, R0, L_bc_f2e37f49_done
L_bc_f2e37f49_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_f2e37f49_done
L_bc_f2e37f49_use_stack:
    ADD T2, SB, R0
L_bc_f2e37f49_done:
    STORE T1, T2, T7
; Load instruction: t289 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1224_t289 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI S2, S0, 1
    LOAD T1, SB, S2
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T6, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t290 to Dynamic("load_f30_op1227_t289_bank_val")
; Spill store_f30_op1202_resolved_bank_30_f30_op1203 to slot 661
    ADD SC, FP, R0
    ADDI SC, SC, 671
    STORE S1, SB, SC
    LI S1, 83
; Spill t285 to slot 662
    ADD SC, FP, R0
    ADDI SC, SC, 672
    STORE S3, SB, SC
; Spill load_f30_op1209_t285_bank_val to slot 663
    ADD SC, FP, R0
    ADDI SC, SC, 673
    STORE T4, SB, SC
; Spill t286 to slot 664
    ADD SC, FP, R0
    ADDI SC, SC, 674
    STORE T3, SB, SC
; Spill load_f30_op1209_t285_bank_val to slot 665
    ADD SC, FP, R0
    ADDI SC, SC, 675
    STORE T4, SB, SC
    LI T3, -1
    BEQ T1, T3, L_bc_7fe6293c_use_global
; Spill load_f30_op1209_t285_bank_val to slot 666
    ADD SC, FP, R0
    ADDI SC, SC, 676
    STORE T4, SB, SC
    LI T4, -2
    BEQ T1, T4, L_bc_7fe6293c_use_stack
    ADD S3, T1, R0
    BEQ R0, R0, L_bc_7fe6293c_done
L_bc_7fe6293c_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_7fe6293c_done
L_bc_7fe6293c_use_stack:
    ADD S3, SB, R0
L_bc_7fe6293c_done:
    STORE S1, S3, S2
; Load instruction: t291 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1233_t291 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T4, S0, 1
    LOAD S1, SB, T4
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, T3, 5
; WARNING: Static bank overflow - offset 5 crosses -5 banks
; GEP: Setting bank info for t292 to Dynamic("load_f30_op1236_t291_bank_val")
; Spill store_f30_op1211_resolved_bank_30_f30_op1212 to slot 667
    ADD SC, FP, R0
    ADDI SC, SC, 677
    STORE T0, SB, SC
    LI T0, 0
; Spill t287 to slot 668
    ADD SC, FP, R0
    ADDI SC, SC, 678
    STORE T5, SB, SC
; Spill load_f30_op1218_t287_bank_val to slot 669
    ADD SC, FP, R0
    ADDI SC, SC, 679
    STORE RV0, SB, SC
; Spill t288 to slot 670
    ADD SC, FP, R0
    ADDI SC, SC, 680
    STORE T7, SB, SC
; Spill load_f30_op1218_t287_bank_val to slot 671
    ADD SC, FP, R0
    ADDI SC, SC, 681
    STORE RV0, SB, SC
    LI T7, -1
    BEQ S1, T7, L_bc_a9267f2c_use_global
; Spill load_f30_op1218_t287_bank_val to slot 672
    ADD SC, FP, R0
    ADDI SC, SC, 682
    STORE RV0, SB, SC
    LI RV0, -2
    BEQ S1, RV0, L_bc_a9267f2c_use_stack
    ADD T5, S1, R0
    BEQ R0, R0, L_bc_a9267f2c_done
L_bc_a9267f2c_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_a9267f2c_done
L_bc_a9267f2c_use_stack:
    ADD T5, SB, R0
L_bc_a9267f2c_done:
    STORE T0, T5, T4
; Load instruction: t293 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op1243_t293 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T7
    LI T0, 1752
; Spill store_f30_op1220_resolved_bank_30_f30_op1221 to slot 673
    ADD SC, FP, R0
    ADDI SC, SC, 683
    STORE T2, SB, SC
; Spill t289 to slot 674
    ADD SC, FP, R0
    ADDI SC, SC, 684
    STORE T6, SB, SC
; Spill load_f30_op1227_t289_bank_val to slot 675
    ADD SC, FP, R0
    ADDI SC, SC, 685
    STORE T1, SB, SC
    ADD T6, RV0, R0
    ADD T2, T0, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t290 to slot 676
    ADD SC, FP, R0
    ADDI SC, SC, 686
    STORE S2, SB, SC
; Spill load_f30_op1227_t289_bank_val to slot 677
    ADD SC, FP, R0
    ADDI SC, SC, 687
    STORE T1, SB, SC
; Spill load_f30_op1227_t289_bank_val to slot 678
    ADD SC, FP, R0
    ADDI SC, SC, 688
    STORE T1, SB, SC
    LI T1, -1
    DIV S2, T2, T1
; Spill store_f30_op1229_resolved_bank_30_f30_op1230 to slot 679
    ADD SC, FP, R0
    ADDI SC, SC, 689
    STORE S3, SB, SC
    MOD S3, T2, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1250_t294'
; Computing new bank gep_new_bank_f30_op1250_t294 = GP + bank_delta
    ADD S0, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1250_t294)
    ADD T2, S3, R0
; GEP: Setting bank info for t294 to Dynamic("gep_new_bank_f30_op1250_t294")
    LI T6, 1
    LI T1, -1
    BEQ S0, T1, L_bc_3f721a08_use_global
    LI S3, -2
    BEQ S0, S3, L_bc_3f721a08_use_stack
    ADD S2, S0, R0
    BEQ R0, R0, L_bc_3f721a08_done
L_bc_3f721a08_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_3f721a08_done
L_bc_3f721a08_use_stack:
    ADD S2, SB, R0
L_bc_3f721a08_done:
    STORE T6, S2, T2
; Load instruction: t295 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1257_t295 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, T0
    LI S3, 1802
; Spill t291 to slot 680
    ADD SC, FP, R0
    ADDI SC, SC, 690
    STORE T3, SB, SC
; Spill load_f30_op1236_t291_bank_val to slot 681
    ADD SC, FP, R0
    ADDI SC, SC, 691
    STORE S1, SB, SC
    ADD T3, T1, R0
    ADD T6, S3, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t292 to slot 682
    ADD SC, FP, R0
    ADDI SC, SC, 692
    STORE T4, SB, SC
; Spill load_f30_op1236_t291_bank_val to slot 683
    ADD SC, FP, R0
    ADDI SC, SC, 693
    STORE S1, SB, SC
; Spill load_f30_op1236_t291_bank_val to slot 684
    ADD SC, FP, R0
    ADDI SC, SC, 694
    STORE S1, SB, SC
    LI S1, -1
    DIV T4, T6, S1
; Spill store_f30_op1238_resolved_bank_30_f30_op1239 to slot 685
    ADD SC, FP, R0
    ADDI SC, SC, 695
    STORE T5, SB, SC
    MOD T5, T6, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1264_t296'
; Spill load_f30_op1242_t293_addr to slot 686
    ADD SC, FP, R0
    ADDI SC, SC, 696
    STORE T7, SB, SC
; Computing new bank gep_new_bank_f30_op1264_t296 = GP + bank_delta
    ADD T7, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op1264_t296)
    ADD T6, T5, R0
; GEP: Setting bank info for t296 to Dynamic("gep_new_bank_f30_op1264_t296")
    LI T3, 0
    LI S1, -1
    BEQ T7, S1, L_bc_2e692023_use_global
    LI T5, -2
    BEQ T7, T5, L_bc_2e692023_use_stack
    ADD T4, T7, R0
    BEQ R0, R0, L_bc_2e692023_done
L_bc_2e692023_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_2e692023_done
L_bc_2e692023_use_stack:
    ADD T4, SB, R0
L_bc_2e692023_done:
    STORE T3, T4, T6
; Load instruction: t297 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op1271_t297 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, S3
    LI T5, 0
    ADD S1, S1, T5
; Load instruction: t299 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op1274_t299 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T3
; Spill t293 to slot 687
    ADD SC, FP, R0
    ADDI SC, SC, 697
    STORE RV0, SB, SC
    LI RV0, 1
    ADD T5, T5, RV0
    LI RV0, 1852
    STORE T5, GP, RV0
; Load instruction: t301 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1279_t301 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t294 to slot 688
    ADD SC, FP, R0
    ADDI SC, SC, 698
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1250_t294 to slot 689
    ADD SC, FP, R0
    ADDI SC, SC, 699
    STORE S0, SB, SC
    LOAD T2, GP, RV0
; Spill live registers before call
; Spill gep_new_bank_f30_op1250_t294 to slot 690
    ADD SC, FP, R0
    ADDI SC, SC, 700
    STORE S0, SB, SC
; Spill store_f30_op1252_resolved_bank_30_f30_op1253 to slot 691
    ADD SC, FP, R0
    ADDI SC, SC, 701
    STORE S2, SB, SC
; Spill load_f30_op1256_t295_addr to slot 692
    ADD SC, FP, R0
    ADDI SC, SC, 702
    STORE T0, SB, SC
; Spill t295 to slot 693
    ADD SC, FP, R0
    ADDI SC, SC, 703
    STORE T1, SB, SC
; Spill t296 to slot 694
    ADD SC, FP, R0
    ADDI SC, SC, 704
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op1264_t296 to slot 695
    ADD SC, FP, R0
    ADDI SC, SC, 705
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op1264_t296 to slot 696
    ADD SC, FP, R0
    ADDI SC, SC, 706
    STORE T7, SB, SC
; Spill store_f30_op1266_resolved_bank_30_f30_op1267 to slot 697
    ADD SC, FP, R0
    ADDI SC, SC, 707
    STORE T4, SB, SC
; Spill load_f30_op1270_t297_addr to slot 698
    ADD SC, FP, R0
    ADDI SC, SC, 708
    STORE S3, SB, SC
; Spill t298 to slot 699
    ADD SC, FP, R0
    ADDI SC, SC, 709
    STORE S1, SB, SC
; Spill load_f30_op1273_t299_addr to slot 700
    ADD SC, FP, R0
    ADDI SC, SC, 710
    STORE T3, SB, SC
; Spill t300 to slot 701
    ADD SC, FP, R0
    ADDI SC, SC, 711
    STORE T5, SB, SC
; Spill load_f30_op1278_t301_addr to slot 702
    ADD SC, FP, R0
    ADDI SC, SC, 712
    STORE RV0, SB, SC
; Spill t301 to slot 703
    ADD SC, FP, R0
    ADDI SC, SC, 713
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t302
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S2, S0, 1
    STORE RV1, SB, S2
; Load instruction: t303 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1283_t303 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T1, S0, 1
    LOAD T6, SB, T1
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, T0, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t304 to Dynamic("load_f30_op1286_t303_bank_val")
    LI T4, 66
    LI S1, -1
    BEQ T6, S1, L_bc_117fb0f7_use_global
    LI T3, -2
    BEQ T6, T3, L_bc_117fb0f7_use_stack
    ADD S3, T6, R0
    BEQ R0, R0, L_bc_117fb0f7_done
L_bc_117fb0f7_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_117fb0f7_done
L_bc_117fb0f7_use_stack:
    ADD S3, SB, R0
L_bc_117fb0f7_done:
    STORE T4, S3, T7
; Load instruction: t305 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1292_t305 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T2, S0, 1
    LOAD S2, SB, T2
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T5, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t306 to Dynamic("load_f30_op1295_t305_bank_val")
    LI S1, 89
    LI T4, -1
    BEQ S2, T4, L_bc_bfbf3f95_use_global
    LI T2, -2
    BEQ S2, T2, L_bc_bfbf3f95_use_stack
    ADD T3, S2, R0
    BEQ R0, R0, L_bc_bfbf3f95_done
L_bc_bfbf3f95_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_bfbf3f95_done
L_bc_bfbf3f95_use_stack:
    ADD T3, SB, R0
L_bc_bfbf3f95_done:
    STORE S1, T3, T1
; Load instruction: t307 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1301_t307 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI T2, S0, 1
    LOAD S1, SB, T2
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T4, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t308 to Dynamic("load_f30_op1304_t307_bank_val")
; Spill t302 to slot 704
    ADD SC, FP, R0
    ADDI SC, SC, 714
    STORE RV0, SB, SC
    LI RV0, 69
; Spill t303 to slot 705
    ADD SC, FP, R0
    ADDI SC, SC, 715
    STORE T0, SB, SC
; Spill load_f30_op1286_t303_bank_val to slot 706
    ADD SC, FP, R0
    ADDI SC, SC, 716
    STORE T6, SB, SC
; Spill t304 to slot 707
    ADD SC, FP, R0
    ADDI SC, SC, 717
    STORE T7, SB, SC
; Spill load_f30_op1286_t303_bank_val to slot 708
    ADD SC, FP, R0
    ADDI SC, SC, 718
    STORE T6, SB, SC
    LI T7, -1
    BEQ S1, T7, L_bc_ebb38caf_use_global
; Spill load_f30_op1286_t303_bank_val to slot 709
    ADD SC, FP, R0
    ADDI SC, SC, 719
    STORE T6, SB, SC
    LI T6, -2
    BEQ S1, T6, L_bc_ebb38caf_use_stack
    ADD T0, S1, R0
    BEQ R0, R0, L_bc_ebb38caf_done
L_bc_ebb38caf_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_ebb38caf_done
L_bc_ebb38caf_use_stack:
    ADD T0, SB, R0
L_bc_ebb38caf_done:
    STORE RV0, T0, T2
; Load instruction: t309 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1310_t309 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T6, S0, 1
    LOAD RV0, SB, T6
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T7, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t310 to Dynamic("load_f30_op1313_t309_bank_val")
; Spill store_f30_op1288_resolved_bank_30_f30_op1289 to slot 710
    ADD SC, FP, R0
    ADDI SC, SC, 720
    STORE S3, SB, SC
    LI S3, 0
; Spill t305 to slot 711
    ADD SC, FP, R0
    ADDI SC, SC, 721
    STORE T5, SB, SC
; Spill load_f30_op1295_t305_bank_val to slot 712
    ADD SC, FP, R0
    ADDI SC, SC, 722
    STORE S2, SB, SC
; Spill t306 to slot 713
    ADD SC, FP, R0
    ADDI SC, SC, 723
    STORE T1, SB, SC
; Spill load_f30_op1295_t305_bank_val to slot 714
    ADD SC, FP, R0
    ADDI SC, SC, 724
    STORE S2, SB, SC
    LI T1, -1
    BEQ RV0, T1, L_bc_b733732f_use_global
; Spill load_f30_op1295_t305_bank_val to slot 715
    ADD SC, FP, R0
    ADDI SC, SC, 725
    STORE S2, SB, SC
    LI S2, -2
    BEQ RV0, S2, L_bc_b733732f_use_stack
    ADD T5, RV0, R0
    BEQ R0, R0, L_bc_b733732f_done
L_bc_b733732f_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_b733732f_done
L_bc_b733732f_use_stack:
    ADD T5, SB, R0
L_bc_b733732f_done:
    STORE S3, T5, T6
; Load instruction: t311 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1320_t311 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, T1
    LI S3, 1752
; Spill store_f30_op1297_resolved_bank_30_f30_op1298 to slot 716
    ADD SC, FP, R0
    ADDI SC, SC, 726
    STORE T3, SB, SC
; Spill t307 to slot 717
    ADD SC, FP, R0
    ADDI SC, SC, 727
    STORE T4, SB, SC
; Spill load_f30_op1304_t307_bank_val to slot 718
    ADD SC, FP, R0
    ADDI SC, SC, 728
    STORE S1, SB, SC
    ADD T4, S2, R0
    ADD T3, S3, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t308 to slot 719
    ADD SC, FP, R0
    ADDI SC, SC, 729
    STORE T2, SB, SC
; Spill load_f30_op1304_t307_bank_val to slot 720
    ADD SC, FP, R0
    ADDI SC, SC, 730
    STORE S1, SB, SC
; Spill load_f30_op1304_t307_bank_val to slot 721
    ADD SC, FP, R0
    ADDI SC, SC, 731
    STORE S1, SB, SC
    LI S1, -1
    DIV T2, T3, S1
; Spill store_f30_op1306_resolved_bank_30_f30_op1307 to slot 722
    ADD SC, FP, R0
    ADDI SC, SC, 732
    STORE T0, SB, SC
    MOD T0, T3, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1327_t312'
; Computing new bank gep_new_bank_f30_op1327_t312 = GP + bank_delta
    ADD S0, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1327_t312)
    ADD T3, T0, R0
; GEP: Setting bank info for t312 to Dynamic("gep_new_bank_f30_op1327_t312")
    LI T4, 1
    LI S1, -1
    BEQ S0, S1, L_bc_4e7c9558_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_4e7c9558_use_stack
    ADD T2, S0, R0
    BEQ R0, R0, L_bc_4e7c9558_done
L_bc_4e7c9558_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_4e7c9558_done
L_bc_4e7c9558_use_stack:
    ADD T2, SB, R0
L_bc_4e7c9558_done:
    STORE T4, T2, T3
; Load instruction: t313 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op1334_t313 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, S3
    LI T0, 1802
; Spill t309 to slot 723
    ADD SC, FP, R0
    ADDI SC, SC, 733
    STORE T7, SB, SC
; Spill load_f30_op1313_t309_bank_val to slot 724
    ADD SC, FP, R0
    ADDI SC, SC, 734
    STORE RV0, SB, SC
    ADD T7, S1, R0
    ADD T4, T0, T7
; Runtime bank overflow calculation for dynamic GEP
; Spill t310 to slot 725
    ADD SC, FP, R0
    ADDI SC, SC, 735
    STORE T6, SB, SC
; Spill load_f30_op1313_t309_bank_val to slot 726
    ADD SC, FP, R0
    ADDI SC, SC, 736
    STORE RV0, SB, SC
; Spill load_f30_op1313_t309_bank_val to slot 727
    ADD SC, FP, R0
    ADDI SC, SC, 737
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T6, T4, RV0
; Spill store_f30_op1315_resolved_bank_30_f30_op1316 to slot 728
    ADD SC, FP, R0
    ADDI SC, SC, 738
    STORE T5, SB, SC
    MOD T5, T4, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1341_t314'
; Spill load_f30_op1319_t311_addr to slot 729
    ADD SC, FP, R0
    ADDI SC, SC, 739
    STORE T1, SB, SC
; Computing new bank gep_new_bank_f30_op1341_t314 = GP + bank_delta
    ADD T1, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f30_op1341_t314)
    ADD T4, T5, R0
; GEP: Setting bank info for t314 to Dynamic("gep_new_bank_f30_op1341_t314")
    LI T7, 0
    LI RV0, -1
    BEQ T1, RV0, L_bc_74be459a_use_global
    LI T5, -2
    BEQ T1, T5, L_bc_74be459a_use_stack
    ADD T6, T1, R0
    BEQ R0, R0, L_bc_74be459a_done
L_bc_74be459a_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_74be459a_done
L_bc_74be459a_use_stack:
    ADD T6, SB, R0
L_bc_74be459a_done:
    STORE T7, T6, T4
; Load instruction: t315 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1348_t315 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T0
    LI T5, 0
    ADD RV0, RV0, T5
; Load instruction: t317 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op1351_t317 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T7
; Spill t311 to slot 730
    ADD SC, FP, R0
    ADDI SC, SC, 740
    STORE S2, SB, SC
    LI S2, 1
    ADD T5, T5, S2
    LI S2, 1852
    STORE T5, GP, S2
; Load instruction: t319 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op1356_t319 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t312 to slot 731
    ADD SC, FP, R0
    ADDI SC, SC, 741
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1327_t312 to slot 732
    ADD SC, FP, R0
    ADDI SC, SC, 742
    STORE S0, SB, SC
    LOAD T3, GP, S2
; Spill live registers before call
; Spill gep_new_bank_f30_op1327_t312 to slot 733
    ADD SC, FP, R0
    ADDI SC, SC, 743
    STORE S0, SB, SC
; Spill store_f30_op1329_resolved_bank_30_f30_op1330 to slot 734
    ADD SC, FP, R0
    ADDI SC, SC, 744
    STORE T2, SB, SC
; Spill load_f30_op1333_t313_addr to slot 735
    ADD SC, FP, R0
    ADDI SC, SC, 745
    STORE S3, SB, SC
; Spill t313 to slot 736
    ADD SC, FP, R0
    ADDI SC, SC, 746
    STORE S1, SB, SC
; Spill t314 to slot 737
    ADD SC, FP, R0
    ADDI SC, SC, 747
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op1341_t314 to slot 738
    ADD SC, FP, R0
    ADDI SC, SC, 748
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op1341_t314 to slot 739
    ADD SC, FP, R0
    ADDI SC, SC, 749
    STORE T1, SB, SC
; Spill store_f30_op1343_resolved_bank_30_f30_op1344 to slot 740
    ADD SC, FP, R0
    ADDI SC, SC, 750
    STORE T6, SB, SC
; Spill load_f30_op1347_t315_addr to slot 741
    ADD SC, FP, R0
    ADDI SC, SC, 751
    STORE T0, SB, SC
; Spill t316 to slot 742
    ADD SC, FP, R0
    ADDI SC, SC, 752
    STORE RV0, SB, SC
; Spill load_f30_op1350_t317_addr to slot 743
    ADD SC, FP, R0
    ADDI SC, SC, 753
    STORE T7, SB, SC
; Spill t318 to slot 744
    ADD SC, FP, R0
    ADDI SC, SC, 754
    STORE T5, SB, SC
; Spill load_f30_op1355_t319_addr to slot 745
    ADD SC, FP, R0
    ADDI SC, SC, 755
    STORE S2, SB, SC
; Spill t319 to slot 746
    ADD SC, FP, R0
    ADDI SC, SC, 756
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t320
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T2, S0, 1
    STORE RV1, SB, T2
; Load instruction: t321 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1360_t321 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S3, SB, S0
    ADDI S1, S0, 1
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T1, S3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t322 to Dynamic("load_f30_op1363_t321_bank_val")
    LI T6, 70
    LI T7, -1
    BEQ T4, T7, L_bc_2730631b_use_global
    LI T5, -2
    BEQ T4, T5, L_bc_2730631b_use_stack
    ADD T0, T4, R0
    BEQ R0, R0, L_bc_2730631b_done
L_bc_2730631b_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_2730631b_done
L_bc_2730631b_use_stack:
    ADD T0, SB, R0
L_bc_2730631b_done:
    STORE T6, T0, T1
; Load instruction: t323 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1369_t323 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T3, S0, 1
    LOAD T2, SB, T3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t324 to Dynamic("load_f30_op1372_t323_bank_val")
    LI T7, 79
    LI T6, -1
    BEQ T2, T6, L_bc_1ea8050c_use_global
    LI T3, -2
    BEQ T2, T3, L_bc_1ea8050c_use_stack
    ADD T5, T2, R0
    BEQ R0, R0, L_bc_1ea8050c_done
L_bc_1ea8050c_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_1ea8050c_done
L_bc_1ea8050c_use_stack:
    ADD T5, SB, R0
L_bc_1ea8050c_done:
    STORE T7, T5, S1
; Load instruction: t325 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1378_t325 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T3, S0, 1
    LOAD T7, SB, T3
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T6, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t326 to Dynamic("load_f30_op1381_t325_bank_val")
; Spill t320 to slot 747
    ADD SC, FP, R0
    ADDI SC, SC, 757
    STORE RV0, SB, SC
    LI RV0, 82
; Spill t321 to slot 748
    ADD SC, FP, R0
    ADDI SC, SC, 758
    STORE S3, SB, SC
; Spill load_f30_op1363_t321_bank_val to slot 749
    ADD SC, FP, R0
    ADDI SC, SC, 759
    STORE T4, SB, SC
; Spill t322 to slot 750
    ADD SC, FP, R0
    ADDI SC, SC, 760
    STORE T1, SB, SC
; Spill load_f30_op1363_t321_bank_val to slot 751
    ADD SC, FP, R0
    ADDI SC, SC, 761
    STORE T4, SB, SC
    LI T1, -1
    BEQ T7, T1, L_bc_37d3226d_use_global
; Spill load_f30_op1363_t321_bank_val to slot 752
    ADD SC, FP, R0
    ADDI SC, SC, 762
    STORE T4, SB, SC
    LI T4, -2
    BEQ T7, T4, L_bc_37d3226d_use_stack
    ADD S3, T7, R0
    BEQ R0, R0, L_bc_37d3226d_done
L_bc_37d3226d_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_37d3226d_done
L_bc_37d3226d_use_stack:
    ADD S3, SB, R0
L_bc_37d3226d_done:
    STORE RV0, S3, T3
; Load instruction: t327 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1387_t327 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T4, S0, 1
    LOAD RV0, SB, T4
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, T1, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t328 to Dynamic("load_f30_op1390_t327_bank_val")
; Spill store_f30_op1365_resolved_bank_30_f30_op1366 to slot 753
    ADD SC, FP, R0
    ADDI SC, SC, 763
    STORE T0, SB, SC
    LI T0, 71
; Spill t323 to slot 754
    ADD SC, FP, R0
    ADDI SC, SC, 764
    STORE S2, SB, SC
; Spill load_f30_op1372_t323_bank_val to slot 755
    ADD SC, FP, R0
    ADDI SC, SC, 765
    STORE T2, SB, SC
; Spill t324 to slot 756
    ADD SC, FP, R0
    ADDI SC, SC, 766
    STORE S1, SB, SC
; Spill load_f30_op1372_t323_bank_val to slot 757
    ADD SC, FP, R0
    ADDI SC, SC, 767
    STORE T2, SB, SC
    LI S1, -1
    BEQ RV0, S1, L_bc_9a3ae776_use_global
; Spill load_f30_op1372_t323_bank_val to slot 758
    ADD SC, FP, R0
    ADDI SC, SC, 768
    STORE T2, SB, SC
    LI T2, -2
    BEQ RV0, T2, L_bc_9a3ae776_use_stack
    ADD S2, RV0, R0
    BEQ R0, R0, L_bc_9a3ae776_done
L_bc_9a3ae776_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_9a3ae776_done
L_bc_9a3ae776_use_stack:
    ADD S2, SB, R0
L_bc_9a3ae776_done:
    STORE T0, S2, T4
; Load instruction: t329 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1396_t329 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI T2, S0, 1
    LOAD T0, SB, T2
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, S1, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t330 to Dynamic("load_f30_op1399_t329_bank_val")
; Spill store_f30_op1374_resolved_bank_30_f30_op1375 to slot 759
    ADD SC, FP, R0
    ADDI SC, SC, 769
    STORE T5, SB, SC
    LI T5, 69
; Spill t325 to slot 760
    ADD SC, FP, R0
    ADDI SC, SC, 770
    STORE T6, SB, SC
; Spill load_f30_op1381_t325_bank_val to slot 761
    ADD SC, FP, R0
    ADDI SC, SC, 771
    STORE T7, SB, SC
; Spill t326 to slot 762
    ADD SC, FP, R0
    ADDI SC, SC, 772
    STORE T3, SB, SC
; Spill load_f30_op1381_t325_bank_val to slot 763
    ADD SC, FP, R0
    ADDI SC, SC, 773
    STORE T7, SB, SC
    LI T3, -1
    BEQ T0, T3, L_bc_d08f802a_use_global
; Spill load_f30_op1381_t325_bank_val to slot 764
    ADD SC, FP, R0
    ADDI SC, SC, 774
    STORE T7, SB, SC
    LI T7, -2
    BEQ T0, T7, L_bc_d08f802a_use_stack
    ADD T6, T0, R0
    BEQ R0, R0, L_bc_d08f802a_done
L_bc_d08f802a_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_d08f802a_done
L_bc_d08f802a_use_stack:
    ADD T6, SB, R0
L_bc_d08f802a_done:
    STORE T5, T6, T2
; Load instruction: t331 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1405_t331 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T7, S0, 1
    LOAD T5, SB, T7
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, T3, 5
; WARNING: Static bank overflow - offset 5 crosses -5 banks
; GEP: Setting bank info for t332 to Dynamic("load_f30_op1408_t331_bank_val")
; Spill store_f30_op1383_resolved_bank_30_f30_op1384 to slot 765
    ADD SC, FP, R0
    ADDI SC, SC, 775
    STORE S3, SB, SC
    LI S3, 84
; Spill t327 to slot 766
    ADD SC, FP, R0
    ADDI SC, SC, 776
    STORE T1, SB, SC
; Spill load_f30_op1390_t327_bank_val to slot 767
    ADD SC, FP, R0
    ADDI SC, SC, 777
    STORE RV0, SB, SC
; Spill t328 to slot 768
    ADD SC, FP, R0
    ADDI SC, SC, 778
    STORE T4, SB, SC
; Spill load_f30_op1390_t327_bank_val to slot 769
    ADD SC, FP, R0
    ADDI SC, SC, 779
    STORE RV0, SB, SC
    LI T4, -1
    BEQ T5, T4, L_bc_2f74e2a1_use_global
; Spill load_f30_op1390_t327_bank_val to slot 770
    ADD SC, FP, R0
    ADDI SC, SC, 780
    STORE RV0, SB, SC
    LI RV0, -2
    BEQ T5, RV0, L_bc_2f74e2a1_use_stack
    ADD T1, T5, R0
    BEQ R0, R0, L_bc_2f74e2a1_done
L_bc_2f74e2a1_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_2f74e2a1_done
L_bc_2f74e2a1_use_stack:
    ADD T1, SB, R0
L_bc_2f74e2a1_done:
    STORE S3, T1, T7
; Load instruction: t333 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1414_t333 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI RV0, S0, 1
    LOAD S3, SB, RV0
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI RV0, T4, 6
; WARNING: Static bank overflow - offset 6 crosses -6 banks
; GEP: Setting bank info for t334 to Dynamic("load_f30_op1417_t333_bank_val")
; Spill store_f30_op1392_resolved_bank_30_f30_op1393 to slot 771
    ADD SC, FP, R0
    ADDI SC, SC, 781
    STORE S2, SB, SC
    LI S2, 0
; Spill t329 to slot 772
    ADD SC, FP, R0
    ADDI SC, SC, 782
    STORE S1, SB, SC
; Spill load_f30_op1399_t329_bank_val to slot 773
    ADD SC, FP, R0
    ADDI SC, SC, 783
    STORE T0, SB, SC
; Spill t330 to slot 774
    ADD SC, FP, R0
    ADDI SC, SC, 784
    STORE T2, SB, SC
; Spill load_f30_op1399_t329_bank_val to slot 775
    ADD SC, FP, R0
    ADDI SC, SC, 785
    STORE T0, SB, SC
    LI T2, -1
    BEQ S3, T2, L_bc_a471a1c5_use_global
; Spill load_f30_op1399_t329_bank_val to slot 776
    ADD SC, FP, R0
    ADDI SC, SC, 786
    STORE T0, SB, SC
    LI T0, -2
    BEQ S3, T0, L_bc_a471a1c5_use_stack
    ADD S1, S3, R0
    BEQ R0, R0, L_bc_a471a1c5_done
L_bc_a471a1c5_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_a471a1c5_done
L_bc_a471a1c5_use_stack:
    ADD S1, SB, R0
L_bc_a471a1c5_done:
    STORE S2, S1, RV0
; Load instruction: t335 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op1424_t335 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T2
    LI S2, 1752
; Spill store_f30_op1401_resolved_bank_30_f30_op1402 to slot 777
    ADD SC, FP, R0
    ADDI SC, SC, 787
    STORE T6, SB, SC
; Spill t331 to slot 778
    ADD SC, FP, R0
    ADDI SC, SC, 788
    STORE T3, SB, SC
; Spill load_f30_op1408_t331_bank_val to slot 779
    ADD SC, FP, R0
    ADDI SC, SC, 789
    STORE T5, SB, SC
    ADD T3, T0, R0
    ADD T6, S2, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t332 to slot 780
    ADD SC, FP, R0
    ADDI SC, SC, 790
    STORE T7, SB, SC
; Spill load_f30_op1408_t331_bank_val to slot 781
    ADD SC, FP, R0
    ADDI SC, SC, 791
    STORE T5, SB, SC
; Spill load_f30_op1408_t331_bank_val to slot 782
    ADD SC, FP, R0
    ADDI SC, SC, 792
    STORE T5, SB, SC
    LI T5, -1
    DIV T7, T6, T5
; Spill store_f30_op1410_resolved_bank_30_f30_op1411 to slot 783
    ADD SC, FP, R0
    ADDI SC, SC, 793
    STORE T1, SB, SC
    MOD T1, T6, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1431_t336'
; Computing new bank gep_new_bank_f30_op1431_t336 = GP + bank_delta
    ADD S0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op1431_t336)
    ADD T6, T1, R0
; GEP: Setting bank info for t336 to Dynamic("gep_new_bank_f30_op1431_t336")
    LI T3, 1
    LI T5, -1
    BEQ S0, T5, L_bc_d054309f_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_d054309f_use_stack
    ADD T7, S0, R0
    BEQ R0, R0, L_bc_d054309f_done
L_bc_d054309f_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_d054309f_done
L_bc_d054309f_use_stack:
    ADD T7, SB, R0
L_bc_d054309f_done:
    STORE T3, T7, T6
; Load instruction: t337 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op1438_t337 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, S2
    LI T1, 1802
; Spill t333 to slot 784
    ADD SC, FP, R0
    ADDI SC, SC, 794
    STORE T4, SB, SC
; Spill load_f30_op1417_t333_bank_val to slot 785
    ADD SC, FP, R0
    ADDI SC, SC, 795
    STORE S3, SB, SC
    ADD T4, T5, R0
    ADD T3, T1, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t334 to slot 786
    ADD SC, FP, R0
    ADDI SC, SC, 796
    STORE RV0, SB, SC
; Spill load_f30_op1417_t333_bank_val to slot 787
    ADD SC, FP, R0
    ADDI SC, SC, 797
    STORE S3, SB, SC
; Spill load_f30_op1417_t333_bank_val to slot 788
    ADD SC, FP, R0
    ADDI SC, SC, 798
    STORE S3, SB, SC
    LI S3, -1
    DIV RV0, T3, S3
; Spill store_f30_op1419_resolved_bank_30_f30_op1420 to slot 789
    ADD SC, FP, R0
    ADDI SC, SC, 799
    STORE S1, SB, SC
    MOD S1, T3, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1445_t338'
; Spill load_f30_op1423_t335_addr to slot 790
    ADD SC, FP, R0
    ADDI SC, SC, 800
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op1445_t338 = GP + bank_delta
    ADD T2, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f30_op1445_t338)
    ADD T3, S1, R0
; GEP: Setting bank info for t338 to Dynamic("gep_new_bank_f30_op1445_t338")
    LI T4, 0
    LI S3, -1
    BEQ T2, S3, L_bc_b72d91c5_use_global
    LI S1, -2
    BEQ T2, S1, L_bc_b72d91c5_use_stack
    ADD RV0, T2, R0
    BEQ R0, R0, L_bc_b72d91c5_done
L_bc_b72d91c5_use_global:
    ADD RV0, GP, R0
    BEQ R0, R0, L_bc_b72d91c5_done
L_bc_b72d91c5_use_stack:
    ADD RV0, SB, R0
L_bc_b72d91c5_done:
    STORE T4, RV0, T3
; Load instruction: t339 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1452_t339 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T1
    LI S1, 0
    ADD S3, S3, S1
; Load instruction: t341 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1455_t341 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T4
; Spill t335 to slot 791
    ADD SC, FP, R0
    ADDI SC, SC, 801
    STORE T0, SB, SC
    LI T0, 1
    ADD S1, S1, T0
    LI T0, 1852
    STORE S1, GP, T0
; Load instruction: t343 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1460_t343 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t336 to slot 792
    ADD SC, FP, R0
    ADDI SC, SC, 802
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op1431_t336 to slot 793
    ADD SC, FP, R0
    ADDI SC, SC, 803
    STORE S0, SB, SC
    LOAD T6, GP, T0
; Spill live registers before call
; Spill gep_new_bank_f30_op1431_t336 to slot 794
    ADD SC, FP, R0
    ADDI SC, SC, 804
    STORE S0, SB, SC
; Spill store_f30_op1433_resolved_bank_30_f30_op1434 to slot 795
    ADD SC, FP, R0
    ADDI SC, SC, 805
    STORE T7, SB, SC
; Spill load_f30_op1437_t337_addr to slot 796
    ADD SC, FP, R0
    ADDI SC, SC, 806
    STORE S2, SB, SC
; Spill t337 to slot 797
    ADD SC, FP, R0
    ADDI SC, SC, 807
    STORE T5, SB, SC
; Spill t338 to slot 798
    ADD SC, FP, R0
    ADDI SC, SC, 808
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1445_t338 to slot 799
    ADD SC, FP, R0
    ADDI SC, SC, 809
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1445_t338 to slot 800
    ADD SC, FP, R0
    ADDI SC, SC, 810
    STORE T2, SB, SC
; Spill store_f30_op1447_resolved_bank_30_f30_op1448 to slot 801
    ADD SC, FP, R0
    ADDI SC, SC, 811
    STORE RV0, SB, SC
; Spill load_f30_op1451_t339_addr to slot 802
    ADD SC, FP, R0
    ADDI SC, SC, 812
    STORE T1, SB, SC
; Spill t340 to slot 803
    ADD SC, FP, R0
    ADDI SC, SC, 813
    STORE S3, SB, SC
; Spill load_f30_op1454_t341_addr to slot 804
    ADD SC, FP, R0
    ADDI SC, SC, 814
    STORE T4, SB, SC
; Spill t342 to slot 805
    ADD SC, FP, R0
    ADDI SC, SC, 815
    STORE S1, SB, SC
; Spill load_f30_op1459_t343_addr to slot 806
    ADD SC, FP, R0
    ADDI SC, SC, 816
    STORE T0, SB, SC
; Spill t343 to slot 807
    ADD SC, FP, R0
    ADDI SC, SC, 817
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t344
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T7, S0, 1
    STORE RV1, SB, T7
; Load instruction: t345 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1464_t345 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T5, S0, 1
    LOAD T3, SB, T5
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, S2, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t346 to Dynamic("load_f30_op1467_t345_bank_val")
    LI T1, 76
    LI T4, -1
    BEQ T3, T4, L_bc_5145e51c_use_global
    LI S1, -2
    BEQ T3, S1, L_bc_5145e51c_use_stack
    ADD S3, T3, R0
    BEQ R0, R0, L_bc_5145e51c_done
L_bc_5145e51c_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_5145e51c_done
L_bc_5145e51c_use_stack:
    ADD S3, SB, R0
L_bc_5145e51c_done:
    STORE T1, S3, T2
; Load instruction: t347 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1473_t347 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T6, S0, 1
    LOAD T7, SB, T6
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, T0, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t348 to Dynamic("load_f30_op1476_t347_bank_val")
    LI T4, 73
    LI T1, -1
    BEQ T7, T1, L_bc_33978e37_use_global
    LI T6, -2
    BEQ T7, T6, L_bc_33978e37_use_stack
    ADD S1, T7, R0
    BEQ R0, R0, L_bc_33978e37_done
L_bc_33978e37_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_33978e37_done
L_bc_33978e37_use_stack:
    ADD S1, SB, R0
L_bc_33978e37_done:
    STORE T4, S1, T5
; Load instruction: t349 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1482_t349 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T6, S0, 1
    LOAD T4, SB, T6
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T1, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t350 to Dynamic("load_f30_op1485_t349_bank_val")
; Spill t344 to slot 808
    ADD SC, FP, R0
    ADDI SC, SC, 818
    STORE RV0, SB, SC
    LI RV0, 83
; Spill t345 to slot 809
    ADD SC, FP, R0
    ADDI SC, SC, 819
    STORE S2, SB, SC
; Spill load_f30_op1467_t345_bank_val to slot 810
    ADD SC, FP, R0
    ADDI SC, SC, 820
    STORE T3, SB, SC
; Spill t346 to slot 811
    ADD SC, FP, R0
    ADDI SC, SC, 821
    STORE T2, SB, SC
; Spill load_f30_op1467_t345_bank_val to slot 812
    ADD SC, FP, R0
    ADDI SC, SC, 822
    STORE T3, SB, SC
    LI T2, -1
    BEQ T4, T2, L_bc_0af9ac4f_use_global
; Spill load_f30_op1467_t345_bank_val to slot 813
    ADD SC, FP, R0
    ADDI SC, SC, 823
    STORE T3, SB, SC
    LI T3, -2
    BEQ T4, T3, L_bc_0af9ac4f_use_stack
    ADD S2, T4, R0
    BEQ R0, R0, L_bc_0af9ac4f_done
L_bc_0af9ac4f_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_0af9ac4f_done
L_bc_0af9ac4f_use_stack:
    ADD S2, SB, R0
L_bc_0af9ac4f_done:
    STORE RV0, S2, T6
; Load instruction: t351 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1491_t351 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T3, S0, 1
    LOAD RV0, SB, T3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T2, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t352 to Dynamic("load_f30_op1494_t351_bank_val")
; Spill store_f30_op1469_resolved_bank_30_f30_op1470 to slot 814
    ADD SC, FP, R0
    ADDI SC, SC, 824
    STORE S3, SB, SC
    LI S3, 84
; Spill t347 to slot 815
    ADD SC, FP, R0
    ADDI SC, SC, 825
    STORE T0, SB, SC
; Spill load_f30_op1476_t347_bank_val to slot 816
    ADD SC, FP, R0
    ADDI SC, SC, 826
    STORE T7, SB, SC
; Spill t348 to slot 817
    ADD SC, FP, R0
    ADDI SC, SC, 827
    STORE T5, SB, SC
; Spill load_f30_op1476_t347_bank_val to slot 818
    ADD SC, FP, R0
    ADDI SC, SC, 828
    STORE T7, SB, SC
    LI T5, -1
    BEQ RV0, T5, L_bc_bbdec0e9_use_global
; Spill load_f30_op1476_t347_bank_val to slot 819
    ADD SC, FP, R0
    ADDI SC, SC, 829
    STORE T7, SB, SC
    LI T7, -2
    BEQ RV0, T7, L_bc_bbdec0e9_use_stack
    ADD T0, RV0, R0
    BEQ R0, R0, L_bc_bbdec0e9_done
L_bc_bbdec0e9_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_bbdec0e9_done
L_bc_bbdec0e9_use_stack:
    ADD T0, SB, R0
L_bc_bbdec0e9_done:
    STORE S3, T0, T3
; Load instruction: t353 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1500_t353 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI T7, S0, 1
    LOAD S3, SB, T7
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, T5, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t354 to Dynamic("load_f30_op1503_t353_bank_val")
; Spill store_f30_op1478_resolved_bank_30_f30_op1479 to slot 820
    ADD SC, FP, R0
    ADDI SC, SC, 830
    STORE S1, SB, SC
    LI S1, 0
; Spill t349 to slot 821
    ADD SC, FP, R0
    ADDI SC, SC, 831
    STORE T1, SB, SC
; Spill load_f30_op1485_t349_bank_val to slot 822
    ADD SC, FP, R0
    ADDI SC, SC, 832
    STORE T4, SB, SC
; Spill t350 to slot 823
    ADD SC, FP, R0
    ADDI SC, SC, 833
    STORE T6, SB, SC
; Spill load_f30_op1485_t349_bank_val to slot 824
    ADD SC, FP, R0
    ADDI SC, SC, 834
    STORE T4, SB, SC
    LI T6, -1
    BEQ S3, T6, L_bc_ca166fef_use_global
; Spill load_f30_op1485_t349_bank_val to slot 825
    ADD SC, FP, R0
    ADDI SC, SC, 835
    STORE T4, SB, SC
    LI T4, -2
    BEQ S3, T4, L_bc_ca166fef_use_stack
    ADD T1, S3, R0
    BEQ R0, R0, L_bc_ca166fef_done
L_bc_ca166fef_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_ca166fef_done
L_bc_ca166fef_use_stack:
    ADD T1, SB, R0
L_bc_ca166fef_done:
    STORE S1, T1, T7
; Load instruction: t355 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op1510_t355 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T6
    LI S1, 1752
; Spill store_f30_op1487_resolved_bank_30_f30_op1488 to slot 826
    ADD SC, FP, R0
    ADDI SC, SC, 836
    STORE S2, SB, SC
; Spill t351 to slot 827
    ADD SC, FP, R0
    ADDI SC, SC, 837
    STORE T2, SB, SC
; Spill load_f30_op1494_t351_bank_val to slot 828
    ADD SC, FP, R0
    ADDI SC, SC, 838
    STORE RV0, SB, SC
    ADD T2, T4, R0
    ADD S2, S1, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill t352 to slot 829
    ADD SC, FP, R0
    ADDI SC, SC, 839
    STORE T3, SB, SC
; Spill load_f30_op1494_t351_bank_val to slot 830
    ADD SC, FP, R0
    ADDI SC, SC, 840
    STORE RV0, SB, SC
; Spill load_f30_op1494_t351_bank_val to slot 831
    ADD SC, FP, R0
    ADDI SC, SC, 841
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T3, S2, RV0
; Spill store_f30_op1496_resolved_bank_30_f30_op1497 to slot 832
    ADD SC, FP, R0
    ADDI SC, SC, 842
    STORE T0, SB, SC
    MOD T0, S2, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1517_t356'
; Computing new bank gep_new_bank_f30_op1517_t356 = GP + bank_delta
    ADD S0, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f30_op1517_t356)
    ADD S2, T0, R0
; GEP: Setting bank info for t356 to Dynamic("gep_new_bank_f30_op1517_t356")
    LI T2, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_84a596e6_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_84a596e6_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_84a596e6_done
L_bc_84a596e6_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_84a596e6_done
L_bc_84a596e6_use_stack:
    ADD T3, SB, R0
L_bc_84a596e6_done:
    STORE T2, T3, S2
; Load instruction: t357 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op1524_t357 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S1
    LI T0, 1802
; Spill t353 to slot 833
    ADD SC, FP, R0
    ADDI SC, SC, 843
    STORE T5, SB, SC
; Spill load_f30_op1503_t353_bank_val to slot 834
    ADD SC, FP, R0
    ADDI SC, SC, 844
    STORE S3, SB, SC
    ADD T5, RV0, R0
    ADD T2, T0, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill t354 to slot 835
    ADD SC, FP, R0
    ADDI SC, SC, 845
    STORE T7, SB, SC
; Spill load_f30_op1503_t353_bank_val to slot 836
    ADD SC, FP, R0
    ADDI SC, SC, 846
    STORE S3, SB, SC
; Spill load_f30_op1503_t353_bank_val to slot 837
    ADD SC, FP, R0
    ADDI SC, SC, 847
    STORE S3, SB, SC
    LI S3, -1
    DIV T7, T2, S3
; Spill store_f30_op1505_resolved_bank_30_f30_op1506 to slot 838
    ADD SC, FP, R0
    ADDI SC, SC, 848
    STORE T1, SB, SC
    MOD T1, T2, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1531_t358'
; Spill load_f30_op1509_t355_addr to slot 839
    ADD SC, FP, R0
    ADDI SC, SC, 849
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f30_op1531_t358 = GP + bank_delta
    ADD T6, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op1531_t358)
    ADD T2, T1, R0
; GEP: Setting bank info for t358 to Dynamic("gep_new_bank_f30_op1531_t358")
    LI T5, 0
    LI S3, -1
    BEQ T6, S3, L_bc_7565afbc_use_global
    LI T1, -2
    BEQ T6, T1, L_bc_7565afbc_use_stack
    ADD T7, T6, R0
    BEQ R0, R0, L_bc_7565afbc_done
L_bc_7565afbc_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_7565afbc_done
L_bc_7565afbc_use_stack:
    ADD T7, SB, R0
L_bc_7565afbc_done:
    STORE T5, T7, T2
; Load instruction: t359 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1538_t359 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T0
    LI T1, 0
    ADD S3, S3, T1
; Load instruction: t361 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op1541_t361 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, T5
; Spill t355 to slot 840
    ADD SC, FP, R0
    ADDI SC, SC, 850
    STORE T4, SB, SC
    LI T4, 1
    ADD T1, T1, T4
    LI T4, 1852
    STORE T1, GP, T4
; Load instruction: t363 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1546_t363 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t356 to slot 841
    ADD SC, FP, R0
    ADDI SC, SC, 851
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op1517_t356 to slot 842
    ADD SC, FP, R0
    ADDI SC, SC, 852
    STORE S0, SB, SC
    LOAD S2, GP, T4
; Spill live registers before call
; Spill gep_new_bank_f30_op1517_t356 to slot 843
    ADD SC, FP, R0
    ADDI SC, SC, 853
    STORE S0, SB, SC
; Spill store_f30_op1519_resolved_bank_30_f30_op1520 to slot 844
    ADD SC, FP, R0
    ADDI SC, SC, 854
    STORE T3, SB, SC
; Spill load_f30_op1523_t357_addr to slot 845
    ADD SC, FP, R0
    ADDI SC, SC, 855
    STORE S1, SB, SC
; Spill t357 to slot 846
    ADD SC, FP, R0
    ADDI SC, SC, 856
    STORE RV0, SB, SC
; Spill t358 to slot 847
    ADD SC, FP, R0
    ADDI SC, SC, 857
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1531_t358 to slot 848
    ADD SC, FP, R0
    ADDI SC, SC, 858
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op1531_t358 to slot 849
    ADD SC, FP, R0
    ADDI SC, SC, 859
    STORE T6, SB, SC
; Spill store_f30_op1533_resolved_bank_30_f30_op1534 to slot 850
    ADD SC, FP, R0
    ADDI SC, SC, 860
    STORE T7, SB, SC
; Spill load_f30_op1537_t359_addr to slot 851
    ADD SC, FP, R0
    ADDI SC, SC, 861
    STORE T0, SB, SC
; Spill t360 to slot 852
    ADD SC, FP, R0
    ADDI SC, SC, 862
    STORE S3, SB, SC
; Spill load_f30_op1540_t361_addr to slot 853
    ADD SC, FP, R0
    ADDI SC, SC, 863
    STORE T5, SB, SC
; Spill t362 to slot 854
    ADD SC, FP, R0
    ADDI SC, SC, 864
    STORE T1, SB, SC
; Spill load_f30_op1545_t363_addr to slot 855
    ADD SC, FP, R0
    ADDI SC, SC, 865
    STORE T4, SB, SC
; Spill t363 to slot 856
    ADD SC, FP, R0
    ADDI SC, SC, 866
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t364
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T3, S0, 1
    STORE RV1, SB, T3
; Load instruction: t365 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1550_t365 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI T2, S0, 1
    LOAD T6, SB, T2
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t366 to Dynamic("load_f30_op1553_t365_bank_val")
    LI T0, 73
    LI T5, -1
    BEQ T6, T5, L_bc_0c2c3f94_use_global
    LI T1, -2
    BEQ T6, T1, L_bc_0c2c3f94_use_stack
    ADD S3, T6, R0
    BEQ R0, R0, L_bc_0c2c3f94_done
L_bc_0c2c3f94_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_0c2c3f94_done
L_bc_0c2c3f94_use_stack:
    ADD S3, SB, R0
L_bc_0c2c3f94_done:
    STORE T0, S3, T7
; Load instruction: t367 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1559_t367 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI S2, S0, 1
    LOAD T3, SB, S2
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T4, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t368 to Dynamic("load_f30_op1562_t367_bank_val")
    LI T5, 70
    LI T0, -1
    BEQ T3, T0, L_bc_7c034f93_use_global
    LI S2, -2
    BEQ T3, S2, L_bc_7c034f93_use_stack
    ADD T1, T3, R0
    BEQ R0, R0, L_bc_7c034f93_done
L_bc_7c034f93_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_7c034f93_done
L_bc_7c034f93_use_stack:
    ADD T1, SB, R0
L_bc_7c034f93_done:
    STORE T5, T1, T2
; Load instruction: t369 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1568_t369 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S2, S0, 1
    LOAD T5, SB, S2
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T0, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t370 to Dynamic("load_f30_op1571_t369_bank_val")
; Spill t364 to slot 857
    ADD SC, FP, R0
    ADDI SC, SC, 867
    STORE RV0, SB, SC
    LI RV0, 0
; Spill t365 to slot 858
    ADD SC, FP, R0
    ADDI SC, SC, 868
    STORE S1, SB, SC
; Spill load_f30_op1553_t365_bank_val to slot 859
    ADD SC, FP, R0
    ADDI SC, SC, 869
    STORE T6, SB, SC
; Spill t366 to slot 860
    ADD SC, FP, R0
    ADDI SC, SC, 870
    STORE T7, SB, SC
; Spill load_f30_op1553_t365_bank_val to slot 861
    ADD SC, FP, R0
    ADDI SC, SC, 871
    STORE T6, SB, SC
    LI T7, -1
    BEQ T5, T7, L_bc_b0a241e0_use_global
; Spill load_f30_op1553_t365_bank_val to slot 862
    ADD SC, FP, R0
    ADDI SC, SC, 872
    STORE T6, SB, SC
    LI T6, -2
    BEQ T5, T6, L_bc_b0a241e0_use_stack
    ADD S1, T5, R0
    BEQ R0, R0, L_bc_b0a241e0_done
L_bc_b0a241e0_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_b0a241e0_done
L_bc_b0a241e0_use_stack:
    ADD S1, SB, R0
L_bc_b0a241e0_done:
    STORE RV0, S1, S2
; Load instruction: t371 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op1578_t371 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T7
    LI RV0, 1752
; Spill store_f30_op1555_resolved_bank_30_f30_op1556 to slot 863
    ADD SC, FP, R0
    ADDI SC, SC, 873
    STORE S3, SB, SC
; Spill t367 to slot 864
    ADD SC, FP, R0
    ADDI SC, SC, 874
    STORE T4, SB, SC
; Spill load_f30_op1562_t367_bank_val to slot 865
    ADD SC, FP, R0
    ADDI SC, SC, 875
    STORE T3, SB, SC
    ADD T4, T6, R0
    ADD S3, RV0, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t368 to slot 866
    ADD SC, FP, R0
    ADDI SC, SC, 876
    STORE T2, SB, SC
; Spill load_f30_op1562_t367_bank_val to slot 867
    ADD SC, FP, R0
    ADDI SC, SC, 877
    STORE T3, SB, SC
; Spill load_f30_op1562_t367_bank_val to slot 868
    ADD SC, FP, R0
    ADDI SC, SC, 878
    STORE T3, SB, SC
    LI T3, -1
    DIV T2, S3, T3
; Spill store_f30_op1564_resolved_bank_30_f30_op1565 to slot 869
    ADD SC, FP, R0
    ADDI SC, SC, 879
    STORE T1, SB, SC
    MOD T1, S3, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1585_t372'
; Computing new bank gep_new_bank_f30_op1585_t372 = GP + bank_delta
    ADD S0, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1585_t372)
    ADD S3, T1, R0
; GEP: Setting bank info for t372 to Dynamic("gep_new_bank_f30_op1585_t372")
    LI T4, 1
    LI T3, -1
    BEQ S0, T3, L_bc_237c83e5_use_global
    LI T1, -2
    BEQ S0, T1, L_bc_237c83e5_use_stack
    ADD T2, S0, R0
    BEQ R0, R0, L_bc_237c83e5_done
L_bc_237c83e5_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_237c83e5_done
L_bc_237c83e5_use_stack:
    ADD T2, SB, R0
L_bc_237c83e5_done:
    STORE T4, T2, S3
; Load instruction: t373 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1592_t373 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, RV0
    LI T1, 1802
; Spill t369 to slot 870
    ADD SC, FP, R0
    ADDI SC, SC, 880
    STORE T0, SB, SC
; Spill load_f30_op1571_t369_bank_val to slot 871
    ADD SC, FP, R0
    ADDI SC, SC, 881
    STORE T5, SB, SC
    ADD T0, T3, R0
    ADD T4, T1, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t370 to slot 872
    ADD SC, FP, R0
    ADDI SC, SC, 882
    STORE S2, SB, SC
; Spill load_f30_op1571_t369_bank_val to slot 873
    ADD SC, FP, R0
    ADDI SC, SC, 883
    STORE T5, SB, SC
; Spill load_f30_op1571_t369_bank_val to slot 874
    ADD SC, FP, R0
    ADDI SC, SC, 884
    STORE T5, SB, SC
    LI T5, -1
    DIV S2, T4, T5
; Spill store_f30_op1573_resolved_bank_30_f30_op1574 to slot 875
    ADD SC, FP, R0
    ADDI SC, SC, 885
    STORE S1, SB, SC
    MOD S1, T4, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1599_t374'
; Spill load_f30_op1577_t371_addr to slot 876
    ADD SC, FP, R0
    ADDI SC, SC, 886
    STORE T7, SB, SC
; Computing new bank gep_new_bank_f30_op1599_t374 = GP + bank_delta
    ADD T7, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1599_t374)
    ADD T4, S1, R0
; GEP: Setting bank info for t374 to Dynamic("gep_new_bank_f30_op1599_t374")
    LI T0, 0
    LI T5, -1
    BEQ T7, T5, L_bc_b8098cc8_use_global
    LI S1, -2
    BEQ T7, S1, L_bc_b8098cc8_use_stack
    ADD S2, T7, R0
    BEQ R0, R0, L_bc_b8098cc8_done
L_bc_b8098cc8_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_b8098cc8_done
L_bc_b8098cc8_use_stack:
    ADD S2, SB, R0
L_bc_b8098cc8_done:
    STORE T0, S2, T4
; Load instruction: t375 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1606_t375 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T1
    LI S1, 0
    ADD T5, T5, S1
; Load instruction: t377 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1609_t377 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T0
; Spill t371 to slot 877
    ADD SC, FP, R0
    ADDI SC, SC, 887
    STORE T6, SB, SC
    LI T6, 1
    ADD S1, S1, T6
    LI T6, 1852
    STORE S1, GP, T6
; Load instruction: t379 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op1614_t379 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t372 to slot 878
    ADD SC, FP, R0
    ADDI SC, SC, 888
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op1585_t372 to slot 879
    ADD SC, FP, R0
    ADDI SC, SC, 889
    STORE S0, SB, SC
    LOAD S3, GP, T6
; Spill live registers before call
; Spill gep_new_bank_f30_op1585_t372 to slot 880
    ADD SC, FP, R0
    ADDI SC, SC, 890
    STORE S0, SB, SC
; Spill store_f30_op1587_resolved_bank_30_f30_op1588 to slot 881
    ADD SC, FP, R0
    ADDI SC, SC, 891
    STORE T2, SB, SC
; Spill load_f30_op1591_t373_addr to slot 882
    ADD SC, FP, R0
    ADDI SC, SC, 892
    STORE RV0, SB, SC
; Spill t373 to slot 883
    ADD SC, FP, R0
    ADDI SC, SC, 893
    STORE T3, SB, SC
; Spill t374 to slot 884
    ADD SC, FP, R0
    ADDI SC, SC, 894
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op1599_t374 to slot 885
    ADD SC, FP, R0
    ADDI SC, SC, 895
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op1599_t374 to slot 886
    ADD SC, FP, R0
    ADDI SC, SC, 896
    STORE T7, SB, SC
; Spill store_f30_op1601_resolved_bank_30_f30_op1602 to slot 887
    ADD SC, FP, R0
    ADDI SC, SC, 897
    STORE S2, SB, SC
; Spill load_f30_op1605_t375_addr to slot 888
    ADD SC, FP, R0
    ADDI SC, SC, 898
    STORE T1, SB, SC
; Spill t376 to slot 889
    ADD SC, FP, R0
    ADDI SC, SC, 899
    STORE T5, SB, SC
; Spill load_f30_op1608_t377_addr to slot 890
    ADD SC, FP, R0
    ADDI SC, SC, 900
    STORE T0, SB, SC
; Spill t378 to slot 891
    ADD SC, FP, R0
    ADDI SC, SC, 901
    STORE S1, SB, SC
; Spill load_f30_op1613_t379_addr to slot 892
    ADD SC, FP, R0
    ADDI SC, SC, 902
    STORE T6, SB, SC
; Spill t379 to slot 893
    ADD SC, FP, R0
    ADDI SC, SC, 903
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t380
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T2, S0, 1
    STORE RV1, SB, T2
; Load instruction: t381 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1618_t381 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T4, S0, 1
    LOAD T7, SB, T4
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD S2, T3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t382 to Dynamic("load_f30_op1621_t381_bank_val")
    LI T1, 84
    LI T0, -1
    BEQ T7, T0, L_bc_83a965ca_use_global
    LI S1, -2
    BEQ T7, S1, L_bc_83a965ca_use_stack
    ADD T5, T7, R0
    BEQ R0, R0, L_bc_83a965ca_done
L_bc_83a965ca_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_83a965ca_done
L_bc_83a965ca_use_stack:
    ADD T5, SB, R0
L_bc_83a965ca_done:
    STORE T1, T5, S2
; Load instruction: t383 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1627_t383 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI S3, S0, 1
    LOAD T2, SB, S3
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, T6, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t384 to Dynamic("load_f30_op1630_t383_bank_val")
    LI T0, 72
    LI T1, -1
    BEQ T2, T1, L_bc_dde8cbf9_use_global
    LI S3, -2
    BEQ T2, S3, L_bc_dde8cbf9_use_stack
    ADD S1, T2, R0
    BEQ R0, R0, L_bc_dde8cbf9_done
L_bc_dde8cbf9_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_dde8cbf9_done
L_bc_dde8cbf9_use_stack:
    ADD S1, SB, R0
L_bc_dde8cbf9_done:
    STORE T0, S1, T4
; Load instruction: t385 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1636_t385 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI S3, S0, 1
    LOAD T0, SB, S3
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T1, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t386 to Dynamic("load_f30_op1639_t385_bank_val")
; Spill t380 to slot 894
    ADD SC, FP, R0
    ADDI SC, SC, 904
    STORE RV0, SB, SC
    LI RV0, 69
; Spill t381 to slot 895
    ADD SC, FP, R0
    ADDI SC, SC, 905
    STORE T3, SB, SC
; Spill load_f30_op1621_t381_bank_val to slot 896
    ADD SC, FP, R0
    ADDI SC, SC, 906
    STORE T7, SB, SC
; Spill t382 to slot 897
    ADD SC, FP, R0
    ADDI SC, SC, 907
    STORE S2, SB, SC
; Spill load_f30_op1621_t381_bank_val to slot 898
    ADD SC, FP, R0
    ADDI SC, SC, 908
    STORE T7, SB, SC
    LI S2, -1
    BEQ T0, S2, L_bc_66ba4e54_use_global
; Spill load_f30_op1621_t381_bank_val to slot 899
    ADD SC, FP, R0
    ADDI SC, SC, 909
    STORE T7, SB, SC
    LI T7, -2
    BEQ T0, T7, L_bc_66ba4e54_use_stack
    ADD T3, T0, R0
    BEQ R0, R0, L_bc_66ba4e54_done
L_bc_66ba4e54_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_66ba4e54_done
L_bc_66ba4e54_use_stack:
    ADD T3, SB, R0
L_bc_66ba4e54_done:
    STORE RV0, T3, S3
; Load instruction: t387 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1645_t387 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T7, S0, 1
    LOAD RV0, SB, T7
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, S2, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t388 to Dynamic("load_f30_op1648_t387_bank_val")
; Spill store_f30_op1623_resolved_bank_30_f30_op1624 to slot 900
    ADD SC, FP, R0
    ADDI SC, SC, 910
    STORE T5, SB, SC
    LI T5, 78
; Spill t383 to slot 901
    ADD SC, FP, R0
    ADDI SC, SC, 911
    STORE T6, SB, SC
; Spill load_f30_op1630_t383_bank_val to slot 902
    ADD SC, FP, R0
    ADDI SC, SC, 912
    STORE T2, SB, SC
; Spill t384 to slot 903
    ADD SC, FP, R0
    ADDI SC, SC, 913
    STORE T4, SB, SC
; Spill load_f30_op1630_t383_bank_val to slot 904
    ADD SC, FP, R0
    ADDI SC, SC, 914
    STORE T2, SB, SC
    LI T4, -1
    BEQ RV0, T4, L_bc_1723fe1f_use_global
; Spill load_f30_op1630_t383_bank_val to slot 905
    ADD SC, FP, R0
    ADDI SC, SC, 915
    STORE T2, SB, SC
    LI T2, -2
    BEQ RV0, T2, L_bc_1723fe1f_use_stack
    ADD T6, RV0, R0
    BEQ R0, R0, L_bc_1723fe1f_done
L_bc_1723fe1f_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_1723fe1f_done
L_bc_1723fe1f_use_stack:
    ADD T6, SB, R0
L_bc_1723fe1f_done:
    STORE T5, T6, T7
; Load instruction: t389 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1654_t389 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI T2, S0, 1
    LOAD T5, SB, T2
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T4, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t390 to Dynamic("load_f30_op1657_t389_bank_val")
; Spill store_f30_op1632_resolved_bank_30_f30_op1633 to slot 906
    ADD SC, FP, R0
    ADDI SC, SC, 916
    STORE S1, SB, SC
    LI S1, 0
; Spill t385 to slot 907
    ADD SC, FP, R0
    ADDI SC, SC, 917
    STORE T1, SB, SC
; Spill load_f30_op1639_t385_bank_val to slot 908
    ADD SC, FP, R0
    ADDI SC, SC, 918
    STORE T0, SB, SC
; Spill t386 to slot 909
    ADD SC, FP, R0
    ADDI SC, SC, 919
    STORE S3, SB, SC
; Spill load_f30_op1639_t385_bank_val to slot 910
    ADD SC, FP, R0
    ADDI SC, SC, 920
    STORE T0, SB, SC
    LI S3, -1
    BEQ T5, S3, L_bc_130b6195_use_global
; Spill load_f30_op1639_t385_bank_val to slot 911
    ADD SC, FP, R0
    ADDI SC, SC, 921
    STORE T0, SB, SC
    LI T0, -2
    BEQ T5, T0, L_bc_130b6195_use_stack
    ADD T1, T5, R0
    BEQ R0, R0, L_bc_130b6195_done
L_bc_130b6195_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_130b6195_done
L_bc_130b6195_use_stack:
    ADD T1, SB, R0
L_bc_130b6195_done:
    STORE S1, T1, T2
; Load instruction: t391 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op1664_t391 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, S3
    LI S1, 1752
; Spill store_f30_op1641_resolved_bank_30_f30_op1642 to slot 912
    ADD SC, FP, R0
    ADDI SC, SC, 922
    STORE T3, SB, SC
; Spill t387 to slot 913
    ADD SC, FP, R0
    ADDI SC, SC, 923
    STORE S2, SB, SC
; Spill load_f30_op1648_t387_bank_val to slot 914
    ADD SC, FP, R0
    ADDI SC, SC, 924
    STORE RV0, SB, SC
    ADD S2, T0, R0
    ADD T3, S1, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t388 to slot 915
    ADD SC, FP, R0
    ADDI SC, SC, 925
    STORE T7, SB, SC
; Spill load_f30_op1648_t387_bank_val to slot 916
    ADD SC, FP, R0
    ADDI SC, SC, 926
    STORE RV0, SB, SC
; Spill load_f30_op1648_t387_bank_val to slot 917
    ADD SC, FP, R0
    ADDI SC, SC, 927
    STORE RV0, SB, SC
    LI RV0, -1
    DIV T7, T3, RV0
; Spill store_f30_op1650_resolved_bank_30_f30_op1651 to slot 918
    ADD SC, FP, R0
    ADDI SC, SC, 928
    STORE T6, SB, SC
    MOD T6, T3, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1671_t392'
; Computing new bank gep_new_bank_f30_op1671_t392 = GP + bank_delta
    ADD S0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op1671_t392)
    ADD T3, T6, R0
; GEP: Setting bank info for t392 to Dynamic("gep_new_bank_f30_op1671_t392")
    LI S2, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_fbb48301_use_global
    LI T6, -2
    BEQ S0, T6, L_bc_fbb48301_use_stack
    ADD T7, S0, R0
    BEQ R0, R0, L_bc_fbb48301_done
L_bc_fbb48301_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_fbb48301_done
L_bc_fbb48301_use_stack:
    ADD T7, SB, R0
L_bc_fbb48301_done:
    STORE S2, T7, T3
; Load instruction: t393 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op1678_t393 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S1
    LI T6, 1802
; Spill t389 to slot 919
    ADD SC, FP, R0
    ADDI SC, SC, 929
    STORE T4, SB, SC
; Spill load_f30_op1657_t389_bank_val to slot 920
    ADD SC, FP, R0
    ADDI SC, SC, 930
    STORE T5, SB, SC
    ADD T4, RV0, R0
    ADD S2, T6, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t390 to slot 921
    ADD SC, FP, R0
    ADDI SC, SC, 931
    STORE T2, SB, SC
; Spill load_f30_op1657_t389_bank_val to slot 922
    ADD SC, FP, R0
    ADDI SC, SC, 932
    STORE T5, SB, SC
; Spill load_f30_op1657_t389_bank_val to slot 923
    ADD SC, FP, R0
    ADDI SC, SC, 933
    STORE T5, SB, SC
    LI T5, -1
    DIV T2, S2, T5
; Spill store_f30_op1659_resolved_bank_30_f30_op1660 to slot 924
    ADD SC, FP, R0
    ADDI SC, SC, 934
    STORE T1, SB, SC
    MOD T1, S2, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1685_t394'
; Spill load_f30_op1663_t391_addr to slot 925
    ADD SC, FP, R0
    ADDI SC, SC, 935
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f30_op1685_t394 = GP + bank_delta
    ADD S3, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1685_t394)
    ADD S2, T1, R0
; GEP: Setting bank info for t394 to Dynamic("gep_new_bank_f30_op1685_t394")
    LI T4, 0
    LI T5, -1
    BEQ S3, T5, L_bc_d4705875_use_global
    LI T1, -2
    BEQ S3, T1, L_bc_d4705875_use_stack
    ADD T2, S3, R0
    BEQ R0, R0, L_bc_d4705875_done
L_bc_d4705875_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_d4705875_done
L_bc_d4705875_use_stack:
    ADD T2, SB, R0
L_bc_d4705875_done:
    STORE T4, T2, S2
; Load instruction: t395 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op1692_t395 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    LI T1, 0
    ADD T5, T5, T1
; Load instruction: t397 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1695_t397 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, T4
; Spill t391 to slot 926
    ADD SC, FP, R0
    ADDI SC, SC, 936
    STORE T0, SB, SC
    LI T0, 1
    ADD T1, T1, T0
    LI T0, 1852
    STORE T1, GP, T0
; Load instruction: t399 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1700_t399 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t392 to slot 927
    ADD SC, FP, R0
    ADDI SC, SC, 937
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1671_t392 to slot 928
    ADD SC, FP, R0
    ADDI SC, SC, 938
    STORE S0, SB, SC
    LOAD T3, GP, T0
; Spill live registers before call
; Spill gep_new_bank_f30_op1671_t392 to slot 929
    ADD SC, FP, R0
    ADDI SC, SC, 939
    STORE S0, SB, SC
; Spill store_f30_op1673_resolved_bank_30_f30_op1674 to slot 930
    ADD SC, FP, R0
    ADDI SC, SC, 940
    STORE T7, SB, SC
; Spill load_f30_op1677_t393_addr to slot 931
    ADD SC, FP, R0
    ADDI SC, SC, 941
    STORE S1, SB, SC
; Spill t393 to slot 932
    ADD SC, FP, R0
    ADDI SC, SC, 942
    STORE RV0, SB, SC
; Spill t394 to slot 933
    ADD SC, FP, R0
    ADDI SC, SC, 943
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op1685_t394 to slot 934
    ADD SC, FP, R0
    ADDI SC, SC, 944
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op1685_t394 to slot 935
    ADD SC, FP, R0
    ADDI SC, SC, 945
    STORE S3, SB, SC
; Spill store_f30_op1687_resolved_bank_30_f30_op1688 to slot 936
    ADD SC, FP, R0
    ADDI SC, SC, 946
    STORE T2, SB, SC
; Spill load_f30_op1691_t395_addr to slot 937
    ADD SC, FP, R0
    ADDI SC, SC, 947
    STORE T6, SB, SC
; Spill t396 to slot 938
    ADD SC, FP, R0
    ADDI SC, SC, 948
    STORE T5, SB, SC
; Spill load_f30_op1694_t397_addr to slot 939
    ADD SC, FP, R0
    ADDI SC, SC, 949
    STORE T4, SB, SC
; Spill t398 to slot 940
    ADD SC, FP, R0
    ADDI SC, SC, 950
    STORE T1, SB, SC
; Spill load_f30_op1699_t399_addr to slot 941
    ADD SC, FP, R0
    ADDI SC, SC, 951
    STORE T0, SB, SC
; Spill t399 to slot 942
    ADD SC, FP, R0
    ADDI SC, SC, 952
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t400
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T7, S0, 1
    STORE RV1, SB, T7
; Load instruction: t401 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1704_t401 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI S2, S0, 1
    LOAD S3, SB, S2
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t402 to Dynamic("load_f30_op1707_t401_bank_val")
    LI T6, 69
    LI T4, -1
    BEQ S3, T4, L_bc_8d18ae6d_use_global
    LI T1, -2
    BEQ S3, T1, L_bc_8d18ae6d_use_stack
    ADD T5, S3, R0
    BEQ R0, R0, L_bc_8d18ae6d_done
L_bc_8d18ae6d_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_8d18ae6d_done
L_bc_8d18ae6d_use_stack:
    ADD T5, SB, R0
L_bc_8d18ae6d_done:
    STORE T6, T5, T2
; Load instruction: t403 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1713_t403 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T3, S0, 1
    LOAD T7, SB, T3
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T0, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t404 to Dynamic("load_f30_op1716_t403_bank_val")
    LI T4, 76
    LI T6, -1
    BEQ T7, T6, L_bc_137e1f4e_use_global
    LI T3, -2
    BEQ T7, T3, L_bc_137e1f4e_use_stack
    ADD T1, T7, R0
    BEQ R0, R0, L_bc_137e1f4e_done
L_bc_137e1f4e_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_137e1f4e_done
L_bc_137e1f4e_use_stack:
    ADD T1, SB, R0
L_bc_137e1f4e_done:
    STORE T4, T1, S2
; Load instruction: t405 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1722_t405 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T3, S0, 1
    LOAD T4, SB, T3
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T6, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t406 to Dynamic("load_f30_op1725_t405_bank_val")
; Spill t400 to slot 943
    ADD SC, FP, R0
    ADDI SC, SC, 953
    STORE RV0, SB, SC
    LI RV0, 83
; Spill t401 to slot 944
    ADD SC, FP, R0
    ADDI SC, SC, 954
    STORE S1, SB, SC
; Spill load_f30_op1707_t401_bank_val to slot 945
    ADD SC, FP, R0
    ADDI SC, SC, 955
    STORE S3, SB, SC
; Spill t402 to slot 946
    ADD SC, FP, R0
    ADDI SC, SC, 956
    STORE T2, SB, SC
; Spill load_f30_op1707_t401_bank_val to slot 947
    ADD SC, FP, R0
    ADDI SC, SC, 957
    STORE S3, SB, SC
    LI T2, -1
    BEQ T4, T2, L_bc_e38070cc_use_global
; Spill load_f30_op1707_t401_bank_val to slot 948
    ADD SC, FP, R0
    ADDI SC, SC, 958
    STORE S3, SB, SC
    LI S3, -2
    BEQ T4, S3, L_bc_e38070cc_use_stack
    ADD S1, T4, R0
    BEQ R0, R0, L_bc_e38070cc_done
L_bc_e38070cc_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_e38070cc_done
L_bc_e38070cc_use_stack:
    ADD S1, SB, R0
L_bc_e38070cc_done:
    STORE RV0, S1, T3
; Load instruction: t407 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1731_t407 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI S3, S0, 1
    LOAD RV0, SB, S3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T2, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t408 to Dynamic("load_f30_op1734_t407_bank_val")
; Spill store_f30_op1709_resolved_bank_30_f30_op1710 to slot 949
    ADD SC, FP, R0
    ADDI SC, SC, 959
    STORE T5, SB, SC
    LI T5, 69
; Spill t403 to slot 950
    ADD SC, FP, R0
    ADDI SC, SC, 960
    STORE T0, SB, SC
; Spill load_f30_op1716_t403_bank_val to slot 951
    ADD SC, FP, R0
    ADDI SC, SC, 961
    STORE T7, SB, SC
; Spill t404 to slot 952
    ADD SC, FP, R0
    ADDI SC, SC, 962
    STORE S2, SB, SC
; Spill load_f30_op1716_t403_bank_val to slot 953
    ADD SC, FP, R0
    ADDI SC, SC, 963
    STORE T7, SB, SC
    LI S2, -1
    BEQ RV0, S2, L_bc_e80f1b33_use_global
; Spill load_f30_op1716_t403_bank_val to slot 954
    ADD SC, FP, R0
    ADDI SC, SC, 964
    STORE T7, SB, SC
    LI T7, -2
    BEQ RV0, T7, L_bc_e80f1b33_use_stack
    ADD T0, RV0, R0
    BEQ R0, R0, L_bc_e80f1b33_done
L_bc_e80f1b33_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_e80f1b33_done
L_bc_e80f1b33_use_stack:
    ADD T0, SB, R0
L_bc_e80f1b33_done:
    STORE T5, T0, S3
; Load instruction: t409 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1740_t409 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T7, S0, 1
    LOAD T5, SB, T7
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, S2, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t410 to Dynamic("load_f30_op1743_t409_bank_val")
; Spill store_f30_op1718_resolved_bank_30_f30_op1719 to slot 955
    ADD SC, FP, R0
    ADDI SC, SC, 965
    STORE T1, SB, SC
    LI T1, 0
; Spill t405 to slot 956
    ADD SC, FP, R0
    ADDI SC, SC, 966
    STORE T6, SB, SC
; Spill load_f30_op1725_t405_bank_val to slot 957
    ADD SC, FP, R0
    ADDI SC, SC, 967
    STORE T4, SB, SC
; Spill t406 to slot 958
    ADD SC, FP, R0
    ADDI SC, SC, 968
    STORE T3, SB, SC
; Spill load_f30_op1725_t405_bank_val to slot 959
    ADD SC, FP, R0
    ADDI SC, SC, 969
    STORE T4, SB, SC
    LI T3, -1
    BEQ T5, T3, L_bc_b3caf93e_use_global
; Spill load_f30_op1725_t405_bank_val to slot 960
    ADD SC, FP, R0
    ADDI SC, SC, 970
    STORE T4, SB, SC
    LI T4, -2
    BEQ T5, T4, L_bc_b3caf93e_use_stack
    ADD T6, T5, R0
    BEQ R0, R0, L_bc_b3caf93e_done
L_bc_b3caf93e_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_b3caf93e_done
L_bc_b3caf93e_use_stack:
    ADD T6, SB, R0
L_bc_b3caf93e_done:
    STORE T1, T6, T7
; Load instruction: t411 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op1750_t411 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T3
    LI T1, 1752
; Spill store_f30_op1727_resolved_bank_30_f30_op1728 to slot 961
    ADD SC, FP, R0
    ADDI SC, SC, 971
    STORE S1, SB, SC
; Spill t407 to slot 962
    ADD SC, FP, R0
    ADDI SC, SC, 972
    STORE T2, SB, SC
; Spill load_f30_op1734_t407_bank_val to slot 963
    ADD SC, FP, R0
    ADDI SC, SC, 973
    STORE RV0, SB, SC
    ADD T2, T4, R0
    ADD S1, T1, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill t408 to slot 964
    ADD SC, FP, R0
    ADDI SC, SC, 974
    STORE S3, SB, SC
; Spill load_f30_op1734_t407_bank_val to slot 965
    ADD SC, FP, R0
    ADDI SC, SC, 975
    STORE RV0, SB, SC
; Spill load_f30_op1734_t407_bank_val to slot 966
    ADD SC, FP, R0
    ADDI SC, SC, 976
    STORE RV0, SB, SC
    LI RV0, -1
    DIV S3, S1, RV0
; Spill store_f30_op1736_resolved_bank_30_f30_op1737 to slot 967
    ADD SC, FP, R0
    ADDI SC, SC, 977
    STORE T0, SB, SC
    MOD T0, S1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1757_t412'
; Computing new bank gep_new_bank_f30_op1757_t412 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op1757_t412)
    ADD S1, T0, R0
; GEP: Setting bank info for t412 to Dynamic("gep_new_bank_f30_op1757_t412")
    LI T2, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_c4b3db3f_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_c4b3db3f_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_c4b3db3f_done
L_bc_c4b3db3f_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_c4b3db3f_done
L_bc_c4b3db3f_use_stack:
    ADD S3, SB, R0
L_bc_c4b3db3f_done:
    STORE T2, S3, S1
; Load instruction: t413 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1764_t413 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T1
    LI T0, 1802
; Spill t409 to slot 968
    ADD SC, FP, R0
    ADDI SC, SC, 978
    STORE S2, SB, SC
; Spill load_f30_op1743_t409_bank_val to slot 969
    ADD SC, FP, R0
    ADDI SC, SC, 979
    STORE T5, SB, SC
    ADD S2, RV0, R0
    ADD T2, T0, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t410 to slot 970
    ADD SC, FP, R0
    ADDI SC, SC, 980
    STORE T7, SB, SC
; Spill load_f30_op1743_t409_bank_val to slot 971
    ADD SC, FP, R0
    ADDI SC, SC, 981
    STORE T5, SB, SC
; Spill load_f30_op1743_t409_bank_val to slot 972
    ADD SC, FP, R0
    ADDI SC, SC, 982
    STORE T5, SB, SC
    LI T5, -1
    DIV T7, T2, T5
; Spill store_f30_op1745_resolved_bank_30_f30_op1746 to slot 973
    ADD SC, FP, R0
    ADDI SC, SC, 983
    STORE T6, SB, SC
    MOD T6, T2, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1771_t414'
; Spill load_f30_op1749_t411_addr to slot 974
    ADD SC, FP, R0
    ADDI SC, SC, 984
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f30_op1771_t414 = GP + bank_delta
    ADD T3, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op1771_t414)
    ADD T2, T6, R0
; GEP: Setting bank info for t414 to Dynamic("gep_new_bank_f30_op1771_t414")
    LI S2, 0
    LI T5, -1
    BEQ T3, T5, L_bc_2403b17f_use_global
    LI T6, -2
    BEQ T3, T6, L_bc_2403b17f_use_stack
    ADD T7, T3, R0
    BEQ R0, R0, L_bc_2403b17f_done
L_bc_2403b17f_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_2403b17f_done
L_bc_2403b17f_use_stack:
    ADD T7, SB, R0
L_bc_2403b17f_done:
    STORE S2, T7, T2
; Load instruction: t415 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1778_t415 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T0
    LI T6, 0
    ADD T5, T5, T6
; Load instruction: t417 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op1781_t417 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, S2
; Spill t411 to slot 975
    ADD SC, FP, R0
    ADDI SC, SC, 985
    STORE T4, SB, SC
    LI T4, 1
    ADD T6, T6, T4
    LI T4, 1852
    STORE T6, GP, T4
; Load instruction: t419 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1786_t419 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t412 to slot 976
    ADD SC, FP, R0
    ADDI SC, SC, 986
    STORE S1, SB, SC
; Spill gep_new_bank_f30_op1757_t412 to slot 977
    ADD SC, FP, R0
    ADDI SC, SC, 987
    STORE S0, SB, SC
    LOAD S1, GP, T4
; Spill live registers before call
; Spill gep_new_bank_f30_op1757_t412 to slot 978
    ADD SC, FP, R0
    ADDI SC, SC, 988
    STORE S0, SB, SC
; Spill store_f30_op1759_resolved_bank_30_f30_op1760 to slot 979
    ADD SC, FP, R0
    ADDI SC, SC, 989
    STORE S3, SB, SC
; Spill load_f30_op1763_t413_addr to slot 980
    ADD SC, FP, R0
    ADDI SC, SC, 990
    STORE T1, SB, SC
; Spill t413 to slot 981
    ADD SC, FP, R0
    ADDI SC, SC, 991
    STORE RV0, SB, SC
; Spill t414 to slot 982
    ADD SC, FP, R0
    ADDI SC, SC, 992
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1771_t414 to slot 983
    ADD SC, FP, R0
    ADDI SC, SC, 993
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1771_t414 to slot 984
    ADD SC, FP, R0
    ADDI SC, SC, 994
    STORE T3, SB, SC
; Spill store_f30_op1773_resolved_bank_30_f30_op1774 to slot 985
    ADD SC, FP, R0
    ADDI SC, SC, 995
    STORE T7, SB, SC
; Spill load_f30_op1777_t415_addr to slot 986
    ADD SC, FP, R0
    ADDI SC, SC, 996
    STORE T0, SB, SC
; Spill t416 to slot 987
    ADD SC, FP, R0
    ADDI SC, SC, 997
    STORE T5, SB, SC
; Spill load_f30_op1780_t417_addr to slot 988
    ADD SC, FP, R0
    ADDI SC, SC, 998
    STORE S2, SB, SC
; Spill t418 to slot 989
    ADD SC, FP, R0
    ADDI SC, SC, 999
    STORE T6, SB, SC
; Spill load_f30_op1785_t419_addr to slot 990
    ADD SC, FP, R0
    ADDI SC, SC, 1000
    STORE T4, SB, SC
; Spill t419 to slot 991
    ADD SC, FP, R0
    ADDI SC, SC, 1001
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t420
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S3, S0, 1
    STORE RV1, SB, S3
; Load instruction: t421 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1790_t421 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T2, S0, 1
    LOAD T3, SB, T2
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, T1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t422 to Dynamic("load_f30_op1793_t421_bank_val")
    LI T0, 66
    LI S2, -1
    BEQ T3, S2, L_bc_388ca70e_use_global
    LI T6, -2
    BEQ T3, T6, L_bc_388ca70e_use_stack
    ADD T5, T3, R0
    BEQ R0, R0, L_bc_388ca70e_done
L_bc_388ca70e_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_388ca70e_done
L_bc_388ca70e_use_stack:
    ADD T5, SB, R0
L_bc_388ca70e_done:
    STORE T0, T5, T7
; Load instruction: t423 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1799_t423 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI S1, S0, 1
    LOAD S3, SB, S1
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T4, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t424 to Dynamic("load_f30_op1802_t423_bank_val")
    LI S2, 69
    LI T0, -1
    BEQ S3, T0, L_bc_5ce9abe4_use_global
    LI S1, -2
    BEQ S3, S1, L_bc_5ce9abe4_use_stack
    ADD T6, S3, R0
    BEQ R0, R0, L_bc_5ce9abe4_done
L_bc_5ce9abe4_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_5ce9abe4_done
L_bc_5ce9abe4_use_stack:
    ADD T6, SB, R0
L_bc_5ce9abe4_done:
    STORE S2, T6, T2
; Load instruction: t425 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1808_t425 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S1, S0, 1
    LOAD S2, SB, S1
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, T0, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t426 to Dynamic("load_f30_op1811_t425_bank_val")
; Spill t420 to slot 992
    ADD SC, FP, R0
    ADDI SC, SC, 1002
    STORE RV0, SB, SC
    LI RV0, 71
; Spill t421 to slot 993
    ADD SC, FP, R0
    ADDI SC, SC, 1003
    STORE T1, SB, SC
; Spill load_f30_op1793_t421_bank_val to slot 994
    ADD SC, FP, R0
    ADDI SC, SC, 1004
    STORE T3, SB, SC
; Spill t422 to slot 995
    ADD SC, FP, R0
    ADDI SC, SC, 1005
    STORE T7, SB, SC
; Spill load_f30_op1793_t421_bank_val to slot 996
    ADD SC, FP, R0
    ADDI SC, SC, 1006
    STORE T3, SB, SC
    LI T7, -1
    BEQ S2, T7, L_bc_60ac6427_use_global
; Spill load_f30_op1793_t421_bank_val to slot 997
    ADD SC, FP, R0
    ADDI SC, SC, 1007
    STORE T3, SB, SC
    LI T3, -2
    BEQ S2, T3, L_bc_60ac6427_use_stack
    ADD T1, S2, R0
    BEQ R0, R0, L_bc_60ac6427_done
L_bc_60ac6427_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_60ac6427_done
L_bc_60ac6427_use_stack:
    ADD T1, SB, R0
L_bc_60ac6427_done:
    STORE RV0, T1, S1
; Load instruction: t427 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1817_t427 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T3, S0, 1
    LOAD RV0, SB, T3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T3, T7, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t428 to Dynamic("load_f30_op1820_t427_bank_val")
; Spill store_f30_op1795_resolved_bank_30_f30_op1796 to slot 998
    ADD SC, FP, R0
    ADDI SC, SC, 1008
    STORE T5, SB, SC
    LI T5, 73
; Spill t423 to slot 999
    ADD SC, FP, R0
    ADDI SC, SC, 1009
    STORE T4, SB, SC
; Spill load_f30_op1802_t423_bank_val to slot 1000
    ADD SC, FP, R0
    ADDI SC, SC, 1010
    STORE S3, SB, SC
; Spill t424 to slot 1001
    ADD SC, FP, R0
    ADDI SC, SC, 1011
    STORE T2, SB, SC
; Spill load_f30_op1802_t423_bank_val to slot 1002
    ADD SC, FP, R0
    ADDI SC, SC, 1012
    STORE S3, SB, SC
    LI T2, -1
    BEQ RV0, T2, L_bc_8c610a50_use_global
; Spill load_f30_op1802_t423_bank_val to slot 1003
    ADD SC, FP, R0
    ADDI SC, SC, 1013
    STORE S3, SB, SC
    LI S3, -2
    BEQ RV0, S3, L_bc_8c610a50_use_stack
    ADD T4, RV0, R0
    BEQ R0, R0, L_bc_8c610a50_done
L_bc_8c610a50_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_8c610a50_done
L_bc_8c610a50_use_stack:
    ADD T4, SB, R0
L_bc_8c610a50_done:
    STORE T5, T4, T3
; Load instruction: t429 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1826_t429 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI S3, S0, 1
    LOAD T5, SB, S3
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T2, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t430 to Dynamic("load_f30_op1829_t429_bank_val")
; Spill store_f30_op1804_resolved_bank_30_f30_op1805 to slot 1004
    ADD SC, FP, R0
    ADDI SC, SC, 1014
    STORE T6, SB, SC
    LI T6, 78
; Spill t425 to slot 1005
    ADD SC, FP, R0
    ADDI SC, SC, 1015
    STORE T0, SB, SC
; Spill load_f30_op1811_t425_bank_val to slot 1006
    ADD SC, FP, R0
    ADDI SC, SC, 1016
    STORE S2, SB, SC
; Spill t426 to slot 1007
    ADD SC, FP, R0
    ADDI SC, SC, 1017
    STORE S1, SB, SC
; Spill load_f30_op1811_t425_bank_val to slot 1008
    ADD SC, FP, R0
    ADDI SC, SC, 1018
    STORE S2, SB, SC
    LI S1, -1
    BEQ T5, S1, L_bc_85a6f20d_use_global
; Spill load_f30_op1811_t425_bank_val to slot 1009
    ADD SC, FP, R0
    ADDI SC, SC, 1019
    STORE S2, SB, SC
    LI S2, -2
    BEQ T5, S2, L_bc_85a6f20d_use_stack
    ADD T0, T5, R0
    BEQ R0, R0, L_bc_85a6f20d_done
L_bc_85a6f20d_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_85a6f20d_done
L_bc_85a6f20d_use_stack:
    ADD T0, SB, R0
L_bc_85a6f20d_done:
    STORE T6, T0, S3
; Load instruction: t431 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1835_t431 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI S2, S0, 1
    LOAD T6, SB, S2
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, S1, 5
; WARNING: Static bank overflow - offset 5 crosses -5 banks
; GEP: Setting bank info for t432 to Dynamic("load_f30_op1838_t431_bank_val")
; Spill store_f30_op1813_resolved_bank_30_f30_op1814 to slot 1010
    ADD SC, FP, R0
    ADDI SC, SC, 1020
    STORE T1, SB, SC
    LI T1, 0
; Spill t427 to slot 1011
    ADD SC, FP, R0
    ADDI SC, SC, 1021
    STORE T7, SB, SC
; Spill load_f30_op1820_t427_bank_val to slot 1012
    ADD SC, FP, R0
    ADDI SC, SC, 1022
    STORE RV0, SB, SC
; Spill t428 to slot 1013
    ADD SC, FP, R0
    ADDI SC, SC, 1023
    STORE T3, SB, SC
; Spill load_f30_op1820_t427_bank_val to slot 1014
    ADD SC, FP, R0
    ADDI SC, SC, 1024
    STORE RV0, SB, SC
    LI T3, -1
    BEQ T6, T3, L_bc_7163c518_use_global
; Spill load_f30_op1820_t427_bank_val to slot 1015
    ADD SC, FP, R0
    ADDI SC, SC, 1025
    STORE RV0, SB, SC
    LI RV0, -2
    BEQ T6, RV0, L_bc_7163c518_use_stack
    ADD T7, T6, R0
    BEQ R0, R0, L_bc_7163c518_done
L_bc_7163c518_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_7163c518_done
L_bc_7163c518_use_stack:
    ADD T7, SB, R0
L_bc_7163c518_done:
    STORE T1, T7, S2
; Load instruction: t433 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op1845_t433 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T3
    LI T1, 1752
; Spill store_f30_op1822_resolved_bank_30_f30_op1823 to slot 1016
    ADD SC, FP, R0
    ADDI SC, SC, 1026
    STORE T4, SB, SC
; Spill t429 to slot 1017
    ADD SC, FP, R0
    ADDI SC, SC, 1027
    STORE T2, SB, SC
; Spill load_f30_op1829_t429_bank_val to slot 1018
    ADD SC, FP, R0
    ADDI SC, SC, 1028
    STORE T5, SB, SC
    ADD T2, RV0, R0
    ADD T4, T1, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill t430 to slot 1019
    ADD SC, FP, R0
    ADDI SC, SC, 1029
    STORE S3, SB, SC
; Spill load_f30_op1829_t429_bank_val to slot 1020
    ADD SC, FP, R0
    ADDI SC, SC, 1030
    STORE T5, SB, SC
; Spill load_f30_op1829_t429_bank_val to slot 1021
    ADD SC, FP, R0
    ADDI SC, SC, 1031
    STORE T5, SB, SC
    LI T5, -1
    DIV S3, T4, T5
; Spill store_f30_op1831_resolved_bank_30_f30_op1832 to slot 1022
    ADD SC, FP, R0
    ADDI SC, SC, 1032
    STORE T0, SB, SC
    MOD T0, T4, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1852_t434'
; Computing new bank gep_new_bank_f30_op1852_t434 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op1852_t434)
    ADD T4, T0, R0
; GEP: Setting bank info for t434 to Dynamic("gep_new_bank_f30_op1852_t434")
    LI T2, 1
    LI T5, -1
    BEQ S0, T5, L_bc_38d10739_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_38d10739_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_38d10739_done
L_bc_38d10739_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_38d10739_done
L_bc_38d10739_use_stack:
    ADD S3, SB, R0
L_bc_38d10739_done:
    STORE T2, S3, T4
; Load instruction: t435 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1859_t435 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T1
    LI T0, 1802
; Spill t431 to slot 1023
    ADD SC, FP, R0
    ADDI SC, SC, 1033
    STORE S1, SB, SC
; Spill load_f30_op1838_t431_bank_val to slot 1024
    ADD SC, FP, R0
    ADDI SC, SC, 1034
    STORE T6, SB, SC
    ADD S1, T5, R0
    ADD T2, T0, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t432 to slot 1025
    ADD SC, FP, R0
    ADDI SC, SC, 1035
    STORE S2, SB, SC
; Spill load_f30_op1838_t431_bank_val to slot 1026
    ADD SC, FP, R0
    ADDI SC, SC, 1036
    STORE T6, SB, SC
; Spill load_f30_op1838_t431_bank_val to slot 1027
    ADD SC, FP, R0
    ADDI SC, SC, 1037
    STORE T6, SB, SC
    LI T6, -1
    DIV S2, T2, T6
; Spill store_f30_op1840_resolved_bank_30_f30_op1841 to slot 1028
    ADD SC, FP, R0
    ADDI SC, SC, 1038
    STORE T7, SB, SC
    MOD T7, T2, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1866_t436'
; Spill load_f30_op1844_t433_addr to slot 1029
    ADD SC, FP, R0
    ADDI SC, SC, 1039
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f30_op1866_t436 = GP + bank_delta
    ADD T3, GP, S2
; Result bank tracked as Dynamic(gep_new_bank_f30_op1866_t436)
    ADD T2, T7, R0
; GEP: Setting bank info for t436 to Dynamic("gep_new_bank_f30_op1866_t436")
    LI S1, 0
    LI T6, -1
    BEQ T3, T6, L_bc_38195efb_use_global
    LI T7, -2
    BEQ T3, T7, L_bc_38195efb_use_stack
    ADD S2, T3, R0
    BEQ R0, R0, L_bc_38195efb_done
L_bc_38195efb_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_38195efb_done
L_bc_38195efb_use_stack:
    ADD S2, SB, R0
L_bc_38195efb_done:
    STORE S1, S2, T2
; Load instruction: t437 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op1873_t437 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T0
    LI T7, 0
    ADD T6, T6, T7
; Load instruction: t439 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op1876_t439 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, S1
; Spill t433 to slot 1030
    ADD SC, FP, R0
    ADDI SC, SC, 1040
    STORE RV0, SB, SC
    LI RV0, 1
    ADD T7, T7, RV0
    LI RV0, 1852
    STORE T7, GP, RV0
; Load instruction: t441 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1881_t441 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t434 to slot 1031
    ADD SC, FP, R0
    ADDI SC, SC, 1041
    STORE T4, SB, SC
; Spill gep_new_bank_f30_op1852_t434 to slot 1032
    ADD SC, FP, R0
    ADDI SC, SC, 1042
    STORE S0, SB, SC
    LOAD T4, GP, RV0
; Spill live registers before call
; Spill gep_new_bank_f30_op1852_t434 to slot 1033
    ADD SC, FP, R0
    ADDI SC, SC, 1043
    STORE S0, SB, SC
; Spill store_f30_op1854_resolved_bank_30_f30_op1855 to slot 1034
    ADD SC, FP, R0
    ADDI SC, SC, 1044
    STORE S3, SB, SC
; Spill load_f30_op1858_t435_addr to slot 1035
    ADD SC, FP, R0
    ADDI SC, SC, 1045
    STORE T1, SB, SC
; Spill t435 to slot 1036
    ADD SC, FP, R0
    ADDI SC, SC, 1046
    STORE T5, SB, SC
; Spill t436 to slot 1037
    ADD SC, FP, R0
    ADDI SC, SC, 1047
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1866_t436 to slot 1038
    ADD SC, FP, R0
    ADDI SC, SC, 1048
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op1866_t436 to slot 1039
    ADD SC, FP, R0
    ADDI SC, SC, 1049
    STORE T3, SB, SC
; Spill store_f30_op1868_resolved_bank_30_f30_op1869 to slot 1040
    ADD SC, FP, R0
    ADDI SC, SC, 1050
    STORE S2, SB, SC
; Spill load_f30_op1872_t437_addr to slot 1041
    ADD SC, FP, R0
    ADDI SC, SC, 1051
    STORE T0, SB, SC
; Spill t438 to slot 1042
    ADD SC, FP, R0
    ADDI SC, SC, 1052
    STORE T6, SB, SC
; Spill load_f30_op1875_t439_addr to slot 1043
    ADD SC, FP, R0
    ADDI SC, SC, 1053
    STORE S1, SB, SC
; Spill t440 to slot 1044
    ADD SC, FP, R0
    ADDI SC, SC, 1054
    STORE T7, SB, SC
; Spill load_f30_op1880_t441_addr to slot 1045
    ADD SC, FP, R0
    ADDI SC, SC, 1055
    STORE RV0, SB, SC
; Spill t441 to slot 1046
    ADD SC, FP, R0
    ADDI SC, SC, 1056
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t442
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S3, S0, 1
    STORE RV1, SB, S3
; Load instruction: t443 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1885_t443 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T5, S0, 1
    LOAD T2, SB, T5
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T3, T1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t444 to Dynamic("load_f30_op1888_t443_bank_val")
    LI S2, 87
    LI T6, -1
    BEQ T2, T6, L_bc_76684049_use_global
    LI S1, -2
    BEQ T2, S1, L_bc_76684049_use_stack
    ADD T0, T2, R0
    BEQ R0, R0, L_bc_76684049_done
L_bc_76684049_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_76684049_done
L_bc_76684049_use_stack:
    ADD T0, SB, R0
L_bc_76684049_done:
    STORE S2, T0, T3
; Load instruction: t445 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1894_t445 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T4, S0, 1
    LOAD S3, SB, T4
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, T7, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t446 to Dynamic("load_f30_op1897_t445_bank_val")
    LI T6, 72
    LI S2, -1
    BEQ S3, S2, L_bc_7a775bdd_use_global
    LI T4, -2
    BEQ S3, T4, L_bc_7a775bdd_use_stack
    ADD S1, S3, R0
    BEQ R0, R0, L_bc_7a775bdd_done
L_bc_7a775bdd_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_7a775bdd_done
L_bc_7a775bdd_use_stack:
    ADD S1, SB, R0
L_bc_7a775bdd_done:
    STORE T6, S1, T5
; Load instruction: t447 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1903_t447 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T4, S0, 1
    LOAD T6, SB, T4
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S2, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t448 to Dynamic("load_f30_op1906_t447_bank_val")
; Spill t442 to slot 1047
    ADD SC, FP, R0
    ADDI SC, SC, 1057
    STORE RV0, SB, SC
    LI RV0, 73
; Spill t443 to slot 1048
    ADD SC, FP, R0
    ADDI SC, SC, 1058
    STORE T1, SB, SC
; Spill load_f30_op1888_t443_bank_val to slot 1049
    ADD SC, FP, R0
    ADDI SC, SC, 1059
    STORE T2, SB, SC
; Spill t444 to slot 1050
    ADD SC, FP, R0
    ADDI SC, SC, 1060
    STORE T3, SB, SC
; Spill load_f30_op1888_t443_bank_val to slot 1051
    ADD SC, FP, R0
    ADDI SC, SC, 1061
    STORE T2, SB, SC
    LI T3, -1
    BEQ T6, T3, L_bc_bc902209_use_global
; Spill load_f30_op1888_t443_bank_val to slot 1052
    ADD SC, FP, R0
    ADDI SC, SC, 1062
    STORE T2, SB, SC
    LI T2, -2
    BEQ T6, T2, L_bc_bc902209_use_stack
    ADD T1, T6, R0
    BEQ R0, R0, L_bc_bc902209_done
L_bc_bc902209_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_bc902209_done
L_bc_bc902209_use_stack:
    ADD T1, SB, R0
L_bc_bc902209_done:
    STORE RV0, T1, T4
; Load instruction: t449 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1912_t449 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T2, S0, 1
    LOAD RV0, SB, T2
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T2, T3, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t450 to Dynamic("load_f30_op1915_t449_bank_val")
; Spill store_f30_op1890_resolved_bank_30_f30_op1891 to slot 1053
    ADD SC, FP, R0
    ADDI SC, SC, 1063
    STORE T0, SB, SC
    LI T0, 76
; Spill t445 to slot 1054
    ADD SC, FP, R0
    ADDI SC, SC, 1064
    STORE T7, SB, SC
; Spill load_f30_op1897_t445_bank_val to slot 1055
    ADD SC, FP, R0
    ADDI SC, SC, 1065
    STORE S3, SB, SC
; Spill t446 to slot 1056
    ADD SC, FP, R0
    ADDI SC, SC, 1066
    STORE T5, SB, SC
; Spill load_f30_op1897_t445_bank_val to slot 1057
    ADD SC, FP, R0
    ADDI SC, SC, 1067
    STORE S3, SB, SC
    LI T5, -1
    BEQ RV0, T5, L_bc_ec98ed5c_use_global
; Spill load_f30_op1897_t445_bank_val to slot 1058
    ADD SC, FP, R0
    ADDI SC, SC, 1068
    STORE S3, SB, SC
    LI S3, -2
    BEQ RV0, S3, L_bc_ec98ed5c_use_stack
    ADD T7, RV0, R0
    BEQ R0, R0, L_bc_ec98ed5c_done
L_bc_ec98ed5c_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_ec98ed5c_done
L_bc_ec98ed5c_use_stack:
    ADD T7, SB, R0
L_bc_ec98ed5c_done:
    STORE T0, T7, T2
; Load instruction: t451 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1921_t451 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI S3, S0, 1
    LOAD T0, SB, S3
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T5, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t452 to Dynamic("load_f30_op1924_t451_bank_val")
; Spill store_f30_op1899_resolved_bank_30_f30_op1900 to slot 1059
    ADD SC, FP, R0
    ADDI SC, SC, 1069
    STORE S1, SB, SC
    LI S1, 69
; Spill t447 to slot 1060
    ADD SC, FP, R0
    ADDI SC, SC, 1070
    STORE S2, SB, SC
; Spill load_f30_op1906_t447_bank_val to slot 1061
    ADD SC, FP, R0
    ADDI SC, SC, 1071
    STORE T6, SB, SC
; Spill t448 to slot 1062
    ADD SC, FP, R0
    ADDI SC, SC, 1072
    STORE T4, SB, SC
; Spill load_f30_op1906_t447_bank_val to slot 1063
    ADD SC, FP, R0
    ADDI SC, SC, 1073
    STORE T6, SB, SC
    LI T4, -1
    BEQ T0, T4, L_bc_055ff2bc_use_global
; Spill load_f30_op1906_t447_bank_val to slot 1064
    ADD SC, FP, R0
    ADDI SC, SC, 1074
    STORE T6, SB, SC
    LI T6, -2
    BEQ T0, T6, L_bc_055ff2bc_use_stack
    ADD S2, T0, R0
    BEQ R0, R0, L_bc_055ff2bc_done
L_bc_055ff2bc_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_055ff2bc_done
L_bc_055ff2bc_use_stack:
    ADD S2, SB, R0
L_bc_055ff2bc_done:
    STORE S1, S2, S3
; Load instruction: t453 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1930_t453 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, S0
    ADDI T6, S0, 1
    LOAD S1, SB, T6
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T4, 5
; WARNING: Static bank overflow - offset 5 crosses -5 banks
; GEP: Setting bank info for t454 to Dynamic("load_f30_op1933_t453_bank_val")
; Spill store_f30_op1908_resolved_bank_30_f30_op1909 to slot 1065
    ADD SC, FP, R0
    ADDI SC, SC, 1075
    STORE T1, SB, SC
    LI T1, 0
; Spill t449 to slot 1066
    ADD SC, FP, R0
    ADDI SC, SC, 1076
    STORE T3, SB, SC
; Spill load_f30_op1915_t449_bank_val to slot 1067
    ADD SC, FP, R0
    ADDI SC, SC, 1077
    STORE RV0, SB, SC
; Spill t450 to slot 1068
    ADD SC, FP, R0
    ADDI SC, SC, 1078
    STORE T2, SB, SC
; Spill load_f30_op1915_t449_bank_val to slot 1069
    ADD SC, FP, R0
    ADDI SC, SC, 1079
    STORE RV0, SB, SC
    LI T2, -1
    BEQ S1, T2, L_bc_e5796a49_use_global
; Spill load_f30_op1915_t449_bank_val to slot 1070
    ADD SC, FP, R0
    ADDI SC, SC, 1080
    STORE RV0, SB, SC
    LI RV0, -2
    BEQ S1, RV0, L_bc_e5796a49_use_stack
    ADD T3, S1, R0
    BEQ R0, R0, L_bc_e5796a49_done
L_bc_e5796a49_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_e5796a49_done
L_bc_e5796a49_use_stack:
    ADD T3, SB, R0
L_bc_e5796a49_done:
    STORE T1, T3, T6
; Load instruction: t455 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op1940_t455 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T2
    LI T1, 1752
; Spill store_f30_op1917_resolved_bank_30_f30_op1918 to slot 1071
    ADD SC, FP, R0
    ADDI SC, SC, 1081
    STORE T7, SB, SC
; Spill t451 to slot 1072
    ADD SC, FP, R0
    ADDI SC, SC, 1082
    STORE T5, SB, SC
; Spill load_f30_op1924_t451_bank_val to slot 1073
    ADD SC, FP, R0
    ADDI SC, SC, 1083
    STORE T0, SB, SC
    ADD T5, RV0, R0
    ADD T7, T1, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill t452 to slot 1074
    ADD SC, FP, R0
    ADDI SC, SC, 1084
    STORE S3, SB, SC
; Spill load_f30_op1924_t451_bank_val to slot 1075
    ADD SC, FP, R0
    ADDI SC, SC, 1085
    STORE T0, SB, SC
; Spill load_f30_op1924_t451_bank_val to slot 1076
    ADD SC, FP, R0
    ADDI SC, SC, 1086
    STORE T0, SB, SC
    LI T0, -1
    DIV S3, T7, T0
; Spill store_f30_op1926_resolved_bank_30_f30_op1927 to slot 1077
    ADD SC, FP, R0
    ADDI SC, SC, 1087
    STORE S2, SB, SC
    MOD S2, T7, T0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1947_t456'
; Computing new bank gep_new_bank_f30_op1947_t456 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op1947_t456)
    ADD T7, S2, R0
; GEP: Setting bank info for t456 to Dynamic("gep_new_bank_f30_op1947_t456")
    LI T5, 1
    LI T0, -1
    BEQ S0, T0, L_bc_9a57c3e6_use_global
    LI S2, -2
    BEQ S0, S2, L_bc_9a57c3e6_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_9a57c3e6_done
L_bc_9a57c3e6_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_9a57c3e6_done
L_bc_9a57c3e6_use_stack:
    ADD S3, SB, R0
L_bc_9a57c3e6_done:
    STORE T5, S3, T7
; Load instruction: t457 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op1954_t457 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T1
    LI S2, 1802
; Spill t453 to slot 1078
    ADD SC, FP, R0
    ADDI SC, SC, 1088
    STORE T4, SB, SC
; Spill load_f30_op1933_t453_bank_val to slot 1079
    ADD SC, FP, R0
    ADDI SC, SC, 1089
    STORE S1, SB, SC
    ADD T4, T0, R0
    ADD T5, S2, T4
; Runtime bank overflow calculation for dynamic GEP
; Spill t454 to slot 1080
    ADD SC, FP, R0
    ADDI SC, SC, 1090
    STORE T6, SB, SC
; Spill load_f30_op1933_t453_bank_val to slot 1081
    ADD SC, FP, R0
    ADDI SC, SC, 1091
    STORE S1, SB, SC
; Spill load_f30_op1933_t453_bank_val to slot 1082
    ADD SC, FP, R0
    ADDI SC, SC, 1092
    STORE S1, SB, SC
    LI S1, -1
    DIV T6, T5, S1
; Spill store_f30_op1935_resolved_bank_30_f30_op1936 to slot 1083
    ADD SC, FP, R0
    ADDI SC, SC, 1093
    STORE T3, SB, SC
    MOD T3, T5, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op1961_t458'
; Spill load_f30_op1939_t455_addr to slot 1084
    ADD SC, FP, R0
    ADDI SC, SC, 1094
    STORE T2, SB, SC
; Computing new bank gep_new_bank_f30_op1961_t458 = GP + bank_delta
    ADD T2, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f30_op1961_t458)
    ADD T5, T3, R0
; GEP: Setting bank info for t458 to Dynamic("gep_new_bank_f30_op1961_t458")
    LI T4, 0
    LI S1, -1
    BEQ T2, S1, L_bc_1eb21378_use_global
    LI T3, -2
    BEQ T2, T3, L_bc_1eb21378_use_stack
    ADD T6, T2, R0
    BEQ R0, R0, L_bc_1eb21378_done
L_bc_1eb21378_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_1eb21378_done
L_bc_1eb21378_use_stack:
    ADD T6, SB, R0
L_bc_1eb21378_done:
    STORE T4, T6, T5
; Load instruction: t459 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op1968_t459 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, S2
    LI T3, 0
    ADD S1, S1, T3
; Load instruction: t461 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T4, 1852
; LOAD: Pointer load_src_ptr_f30_op1971_t461 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T4
; Spill t455 to slot 1085
    ADD SC, FP, R0
    ADDI SC, SC, 1095
    STORE RV0, SB, SC
    LI RV0, 1
    ADD T3, T3, RV0
    LI RV0, 1852
    STORE T3, GP, RV0
; Load instruction: t463 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op1976_t463 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t456 to slot 1086
    ADD SC, FP, R0
    ADDI SC, SC, 1096
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op1947_t456 to slot 1087
    ADD SC, FP, R0
    ADDI SC, SC, 1097
    STORE S0, SB, SC
    LOAD T7, GP, RV0
; Spill live registers before call
; Spill gep_new_bank_f30_op1947_t456 to slot 1088
    ADD SC, FP, R0
    ADDI SC, SC, 1098
    STORE S0, SB, SC
; Spill store_f30_op1949_resolved_bank_30_f30_op1950 to slot 1089
    ADD SC, FP, R0
    ADDI SC, SC, 1099
    STORE S3, SB, SC
; Spill load_f30_op1953_t457_addr to slot 1090
    ADD SC, FP, R0
    ADDI SC, SC, 1100
    STORE T1, SB, SC
; Spill t457 to slot 1091
    ADD SC, FP, R0
    ADDI SC, SC, 1101
    STORE T0, SB, SC
; Spill t458 to slot 1092
    ADD SC, FP, R0
    ADDI SC, SC, 1102
    STORE T5, SB, SC
; Spill gep_new_bank_f30_op1961_t458 to slot 1093
    ADD SC, FP, R0
    ADDI SC, SC, 1103
    STORE T2, SB, SC
; Spill gep_new_bank_f30_op1961_t458 to slot 1094
    ADD SC, FP, R0
    ADDI SC, SC, 1104
    STORE T2, SB, SC
; Spill store_f30_op1963_resolved_bank_30_f30_op1964 to slot 1095
    ADD SC, FP, R0
    ADDI SC, SC, 1105
    STORE T6, SB, SC
; Spill load_f30_op1967_t459_addr to slot 1096
    ADD SC, FP, R0
    ADDI SC, SC, 1106
    STORE S2, SB, SC
; Spill t460 to slot 1097
    ADD SC, FP, R0
    ADDI SC, SC, 1107
    STORE S1, SB, SC
; Spill load_f30_op1970_t461_addr to slot 1098
    ADD SC, FP, R0
    ADDI SC, SC, 1108
    STORE T4, SB, SC
; Spill t462 to slot 1099
    ADD SC, FP, R0
    ADDI SC, SC, 1109
    STORE T3, SB, SC
; Spill load_f30_op1975_t463_addr to slot 1100
    ADD SC, FP, R0
    ADDI SC, SC, 1110
    STORE RV0, SB, SC
; Spill t463 to slot 1101
    ADD SC, FP, R0
    ADDI SC, SC, 1111
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t464
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S3, S0, 1
    STORE RV1, SB, S3
; Load instruction: t465 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1980_t465 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, S0
    ADDI T0, S0, 1
    LOAD T5, SB, T0
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T2, T1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t466 to Dynamic("load_f30_op1983_t465_bank_val")
    LI T6, 82
    LI S1, -1
    BEQ T5, S1, L_bc_66f83e39_use_global
    LI T4, -2
    BEQ T5, T4, L_bc_66f83e39_use_stack
    ADD S2, T5, R0
    BEQ R0, R0, L_bc_66f83e39_done
L_bc_66f83e39_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_66f83e39_done
L_bc_66f83e39_use_stack:
    ADD S2, SB, R0
L_bc_66f83e39_done:
    STORE T6, S2, T2
; Load instruction: t467 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1989_t467 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T7, S0, 1
    LOAD S3, SB, T7
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T0, T3, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t468 to Dynamic("load_f30_op1992_t467_bank_val")
    LI S1, 69
    LI T6, -1
    BEQ S3, T6, L_bc_613bfffd_use_global
    LI T7, -2
    BEQ S3, T7, L_bc_613bfffd_use_stack
    ADD T4, S3, R0
    BEQ R0, R0, L_bc_613bfffd_done
L_bc_613bfffd_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_613bfffd_done
L_bc_613bfffd_use_stack:
    ADD T4, SB, R0
L_bc_613bfffd_done:
    STORE S1, T4, T0
; Load instruction: t469 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op1998_t469 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI T7, S0, 1
    LOAD S1, SB, T7
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T7, T6, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t470 to Dynamic("load_f30_op2001_t469_bank_val")
; Spill t464 to slot 1102
    ADD SC, FP, R0
    ADDI SC, SC, 1112
    STORE RV0, SB, SC
    LI RV0, 80
; Spill t465 to slot 1103
    ADD SC, FP, R0
    ADDI SC, SC, 1113
    STORE T1, SB, SC
; Spill load_f30_op1983_t465_bank_val to slot 1104
    ADD SC, FP, R0
    ADDI SC, SC, 1114
    STORE T5, SB, SC
; Spill t466 to slot 1105
    ADD SC, FP, R0
    ADDI SC, SC, 1115
    STORE T2, SB, SC
; Spill load_f30_op1983_t465_bank_val to slot 1106
    ADD SC, FP, R0
    ADDI SC, SC, 1116
    STORE T5, SB, SC
    LI T2, -1
    BEQ S1, T2, L_bc_93d09102_use_global
; Spill load_f30_op1983_t465_bank_val to slot 1107
    ADD SC, FP, R0
    ADDI SC, SC, 1117
    STORE T5, SB, SC
    LI T5, -2
    BEQ S1, T5, L_bc_93d09102_use_stack
    ADD T1, S1, R0
    BEQ R0, R0, L_bc_93d09102_done
L_bc_93d09102_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_93d09102_done
L_bc_93d09102_use_stack:
    ADD T1, SB, R0
L_bc_93d09102_done:
    STORE RV0, T1, T7
; Load instruction: t471 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2007_t471 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T5, S0, 1
    LOAD RV0, SB, T5
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T5, T2, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t472 to Dynamic("load_f30_op2010_t471_bank_val")
; Spill store_f30_op1985_resolved_bank_30_f30_op1986 to slot 1108
    ADD SC, FP, R0
    ADDI SC, SC, 1118
    STORE S2, SB, SC
    LI S2, 69
; Spill t467 to slot 1109
    ADD SC, FP, R0
    ADDI SC, SC, 1119
    STORE T3, SB, SC
; Spill load_f30_op1992_t467_bank_val to slot 1110
    ADD SC, FP, R0
    ADDI SC, SC, 1120
    STORE S3, SB, SC
; Spill t468 to slot 1111
    ADD SC, FP, R0
    ADDI SC, SC, 1121
    STORE T0, SB, SC
; Spill load_f30_op1992_t467_bank_val to slot 1112
    ADD SC, FP, R0
    ADDI SC, SC, 1122
    STORE S3, SB, SC
    LI T0, -1
    BEQ RV0, T0, L_bc_1fabf374_use_global
; Spill load_f30_op1992_t467_bank_val to slot 1113
    ADD SC, FP, R0
    ADDI SC, SC, 1123
    STORE S3, SB, SC
    LI S3, -2
    BEQ RV0, S3, L_bc_1fabf374_use_stack
    ADD T3, RV0, R0
    BEQ R0, R0, L_bc_1fabf374_done
L_bc_1fabf374_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_1fabf374_done
L_bc_1fabf374_use_stack:
    ADD T3, SB, R0
L_bc_1fabf374_done:
    STORE S2, T3, T5
; Load instruction: t473 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2016_t473 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S3, S0, 1
    LOAD S2, SB, S3
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T0, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t474 to Dynamic("load_f30_op2019_t473_bank_val")
; Spill store_f30_op1994_resolved_bank_30_f30_op1995 to slot 1114
    ADD SC, FP, R0
    ADDI SC, SC, 1124
    STORE T4, SB, SC
    LI T4, 65
; Spill t469 to slot 1115
    ADD SC, FP, R0
    ADDI SC, SC, 1125
    STORE T6, SB, SC
; Spill load_f30_op2001_t469_bank_val to slot 1116
    ADD SC, FP, R0
    ADDI SC, SC, 1126
    STORE S1, SB, SC
; Spill t470 to slot 1117
    ADD SC, FP, R0
    ADDI SC, SC, 1127
    STORE T7, SB, SC
; Spill load_f30_op2001_t469_bank_val to slot 1118
    ADD SC, FP, R0
    ADDI SC, SC, 1128
    STORE S1, SB, SC
    LI T7, -1
    BEQ S2, T7, L_bc_f1d1bb60_use_global
; Spill load_f30_op2001_t469_bank_val to slot 1119
    ADD SC, FP, R0
    ADDI SC, SC, 1129
    STORE S1, SB, SC
    LI S1, -2
    BEQ S2, S1, L_bc_f1d1bb60_use_stack
    ADD T6, S2, R0
    BEQ R0, R0, L_bc_f1d1bb60_done
L_bc_f1d1bb60_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_f1d1bb60_done
L_bc_f1d1bb60_use_stack:
    ADD T6, SB, R0
L_bc_f1d1bb60_done:
    STORE T4, T6, S3
; Load instruction: t475 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2025_t475 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI S1, S0, 1
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S1, T7, 5
; WARNING: Static bank overflow - offset 5 crosses -5 banks
; GEP: Setting bank info for t476 to Dynamic("load_f30_op2028_t475_bank_val")
; Spill store_f30_op2003_resolved_bank_30_f30_op2004 to slot 1120
    ADD SC, FP, R0
    ADDI SC, SC, 1130
    STORE T1, SB, SC
    LI T1, 84
; Spill t471 to slot 1121
    ADD SC, FP, R0
    ADDI SC, SC, 1131
    STORE T2, SB, SC
; Spill load_f30_op2010_t471_bank_val to slot 1122
    ADD SC, FP, R0
    ADDI SC, SC, 1132
    STORE RV0, SB, SC
; Spill t472 to slot 1123
    ADD SC, FP, R0
    ADDI SC, SC, 1133
    STORE T5, SB, SC
; Spill load_f30_op2010_t471_bank_val to slot 1124
    ADD SC, FP, R0
    ADDI SC, SC, 1134
    STORE RV0, SB, SC
    LI T5, -1
    BEQ T4, T5, L_bc_849dab6b_use_global
; Spill load_f30_op2010_t471_bank_val to slot 1125
    ADD SC, FP, R0
    ADDI SC, SC, 1135
    STORE RV0, SB, SC
    LI RV0, -2
    BEQ T4, RV0, L_bc_849dab6b_use_stack
    ADD T2, T4, R0
    BEQ R0, R0, L_bc_849dab6b_done
L_bc_849dab6b_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_849dab6b_done
L_bc_849dab6b_use_stack:
    ADD T2, SB, R0
L_bc_849dab6b_done:
    STORE T1, T2, S1
; Load instruction: t477 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2034_t477 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S0
    ADDI RV0, S0, 1
    LOAD T1, SB, RV0
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI RV0, T5, 6
; WARNING: Static bank overflow - offset 6 crosses -6 banks
; GEP: Setting bank info for t478 to Dynamic("load_f30_op2037_t477_bank_val")
; Spill store_f30_op2012_resolved_bank_30_f30_op2013 to slot 1126
    ADD SC, FP, R0
    ADDI SC, SC, 1136
    STORE T3, SB, SC
    LI T3, 0
; Spill t473 to slot 1127
    ADD SC, FP, R0
    ADDI SC, SC, 1137
    STORE T0, SB, SC
; Spill load_f30_op2019_t473_bank_val to slot 1128
    ADD SC, FP, R0
    ADDI SC, SC, 1138
    STORE S2, SB, SC
; Spill t474 to slot 1129
    ADD SC, FP, R0
    ADDI SC, SC, 1139
    STORE S3, SB, SC
; Spill load_f30_op2019_t473_bank_val to slot 1130
    ADD SC, FP, R0
    ADDI SC, SC, 1140
    STORE S2, SB, SC
    LI S3, -1
    BEQ T1, S3, L_bc_d0b8c949_use_global
; Spill load_f30_op2019_t473_bank_val to slot 1131
    ADD SC, FP, R0
    ADDI SC, SC, 1141
    STORE S2, SB, SC
    LI S2, -2
    BEQ T1, S2, L_bc_d0b8c949_use_stack
    ADD T0, T1, R0
    BEQ R0, R0, L_bc_d0b8c949_done
L_bc_d0b8c949_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_d0b8c949_done
L_bc_d0b8c949_use_stack:
    ADD T0, SB, R0
L_bc_d0b8c949_done:
    STORE T3, T0, RV0
; Load instruction: t479 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op2044_t479 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S2, GP, S3
    LI T3, 1752
; Spill store_f30_op2021_resolved_bank_30_f30_op2022 to slot 1132
    ADD SC, FP, R0
    ADDI SC, SC, 1142
    STORE T6, SB, SC
; Spill t475 to slot 1133
    ADD SC, FP, R0
    ADDI SC, SC, 1143
    STORE T7, SB, SC
; Spill load_f30_op2028_t475_bank_val to slot 1134
    ADD SC, FP, R0
    ADDI SC, SC, 1144
    STORE T4, SB, SC
    ADD T7, S2, R0
    ADD T6, T3, T7
; Runtime bank overflow calculation for dynamic GEP
; Spill t476 to slot 1135
    ADD SC, FP, R0
    ADDI SC, SC, 1145
    STORE S1, SB, SC
; Spill load_f30_op2028_t475_bank_val to slot 1136
    ADD SC, FP, R0
    ADDI SC, SC, 1146
    STORE T4, SB, SC
; Spill load_f30_op2028_t475_bank_val to slot 1137
    ADD SC, FP, R0
    ADDI SC, SC, 1147
    STORE T4, SB, SC
    LI T4, -1
    DIV S1, T6, T4
; Spill store_f30_op2030_resolved_bank_30_f30_op2031 to slot 1138
    ADD SC, FP, R0
    ADDI SC, SC, 1148
    STORE T2, SB, SC
    MOD T2, T6, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2051_t480'
; Computing new bank gep_new_bank_f30_op2051_t480 = GP + bank_delta
    ADD S0, GP, S1
; Result bank tracked as Dynamic(gep_new_bank_f30_op2051_t480)
    ADD T6, T2, R0
; GEP: Setting bank info for t480 to Dynamic("gep_new_bank_f30_op2051_t480")
    LI T7, 1
    LI T4, -1
    BEQ S0, T4, L_bc_776db34f_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_776db34f_use_stack
    ADD S1, S0, R0
    BEQ R0, R0, L_bc_776db34f_done
L_bc_776db34f_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_776db34f_done
L_bc_776db34f_use_stack:
    ADD S1, SB, R0
L_bc_776db34f_done:
    STORE T7, S1, T6
; Load instruction: t481 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op2058_t481 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T3
    LI T2, 1802
; Spill t477 to slot 1139
    ADD SC, FP, R0
    ADDI SC, SC, 1149
    STORE T5, SB, SC
; Spill load_f30_op2037_t477_bank_val to slot 1140
    ADD SC, FP, R0
    ADDI SC, SC, 1150
    STORE T1, SB, SC
    ADD T5, T4, R0
    ADD T7, T2, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill t478 to slot 1141
    ADD SC, FP, R0
    ADDI SC, SC, 1151
    STORE RV0, SB, SC
; Spill load_f30_op2037_t477_bank_val to slot 1142
    ADD SC, FP, R0
    ADDI SC, SC, 1152
    STORE T1, SB, SC
; Spill load_f30_op2037_t477_bank_val to slot 1143
    ADD SC, FP, R0
    ADDI SC, SC, 1153
    STORE T1, SB, SC
    LI T1, -1
    DIV RV0, T7, T1
; Spill store_f30_op2039_resolved_bank_30_f30_op2040 to slot 1144
    ADD SC, FP, R0
    ADDI SC, SC, 1154
    STORE T0, SB, SC
    MOD T0, T7, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2065_t482'
; Spill load_f30_op2043_t479_addr to slot 1145
    ADD SC, FP, R0
    ADDI SC, SC, 1155
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f30_op2065_t482 = GP + bank_delta
    ADD S3, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f30_op2065_t482)
    ADD T7, T0, R0
; GEP: Setting bank info for t482 to Dynamic("gep_new_bank_f30_op2065_t482")
    LI T5, 0
    LI T1, -1
    BEQ S3, T1, L_bc_5ccc3398_use_global
    LI T0, -2
    BEQ S3, T0, L_bc_5ccc3398_use_stack
    ADD RV0, S3, R0
    BEQ R0, R0, L_bc_5ccc3398_done
L_bc_5ccc3398_use_global:
    ADD RV0, GP, R0
    BEQ R0, R0, L_bc_5ccc3398_done
L_bc_5ccc3398_use_stack:
    ADD RV0, SB, R0
L_bc_5ccc3398_done:
    STORE T5, RV0, T7
; Load instruction: t483 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op2072_t483 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, T2
    LI T0, 0
    ADD T1, T1, T0
; Load instruction: t485 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op2075_t485 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T5
; Spill t479 to slot 1146
    ADD SC, FP, R0
    ADDI SC, SC, 1156
    STORE S2, SB, SC
    LI S2, 1
    ADD T0, T0, S2
    LI S2, 1852
    STORE T0, GP, S2
; Load instruction: t487 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op2080_t487 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t480 to slot 1147
    ADD SC, FP, R0
    ADDI SC, SC, 1157
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op2051_t480 to slot 1148
    ADD SC, FP, R0
    ADDI SC, SC, 1158
    STORE S0, SB, SC
    LOAD T6, GP, S2
; Spill live registers before call
; Spill gep_new_bank_f30_op2051_t480 to slot 1149
    ADD SC, FP, R0
    ADDI SC, SC, 1159
    STORE S0, SB, SC
; Spill store_f30_op2053_resolved_bank_30_f30_op2054 to slot 1150
    ADD SC, FP, R0
    ADDI SC, SC, 1160
    STORE S1, SB, SC
; Spill load_f30_op2057_t481_addr to slot 1151
    ADD SC, FP, R0
    ADDI SC, SC, 1161
    STORE T3, SB, SC
; Spill t481 to slot 1152
    ADD SC, FP, R0
    ADDI SC, SC, 1162
    STORE T4, SB, SC
; Spill t482 to slot 1153
    ADD SC, FP, R0
    ADDI SC, SC, 1163
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op2065_t482 to slot 1154
    ADD SC, FP, R0
    ADDI SC, SC, 1164
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op2065_t482 to slot 1155
    ADD SC, FP, R0
    ADDI SC, SC, 1165
    STORE S3, SB, SC
; Spill store_f30_op2067_resolved_bank_30_f30_op2068 to slot 1156
    ADD SC, FP, R0
    ADDI SC, SC, 1166
    STORE RV0, SB, SC
; Spill load_f30_op2071_t483_addr to slot 1157
    ADD SC, FP, R0
    ADDI SC, SC, 1167
    STORE T2, SB, SC
; Spill t484 to slot 1158
    ADD SC, FP, R0
    ADDI SC, SC, 1168
    STORE T1, SB, SC
; Spill load_f30_op2074_t485_addr to slot 1159
    ADD SC, FP, R0
    ADDI SC, SC, 1169
    STORE T5, SB, SC
; Spill t486 to slot 1160
    ADD SC, FP, R0
    ADDI SC, SC, 1170
    STORE T0, SB, SC
; Spill load_f30_op2079_t487_addr to slot 1161
    ADD SC, FP, R0
    ADDI SC, SC, 1171
    STORE S2, SB, SC
; Spill t487 to slot 1162
    ADD SC, FP, R0
    ADDI SC, SC, 1172
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t488
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S1, S0, 1
    STORE RV1, SB, S1
; Load instruction: t489 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2084_t489 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T4, S0, 1
    LOAD T7, SB, T4
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD S3, T3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t490 to Dynamic("load_f30_op2087_t489_bank_val")
    LI T2, 68
    LI T5, -1
    BEQ T7, T5, L_bc_bd879953_use_global
    LI T0, -2
    BEQ T7, T0, L_bc_bd879953_use_stack
    ADD T1, T7, R0
    BEQ R0, R0, L_bc_bd879953_done
L_bc_bd879953_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_bd879953_done
L_bc_bd879953_use_stack:
    ADD T1, SB, R0
L_bc_bd879953_done:
    STORE T2, T1, S3
; Load instruction: t491 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2093_t491 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T6, S0, 1
    LOAD S1, SB, T6
; Bank value in S1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t492 to Dynamic("load_f30_op2096_t491_bank_val")
    LI T5, 79
    LI T2, -1
    BEQ S1, T2, L_bc_e72a4f4f_use_global
    LI T6, -2
    BEQ S1, T6, L_bc_e72a4f4f_use_stack
    ADD T0, S1, R0
    BEQ R0, R0, L_bc_e72a4f4f_done
L_bc_e72a4f4f_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_e72a4f4f_done
L_bc_e72a4f4f_use_stack:
    ADD T0, SB, R0
L_bc_e72a4f4f_done:
    STORE T5, T0, T4
; Load instruction: t493 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2102_t493 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI T6, S0, 1
    LOAD T5, SB, T6
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T2, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t494 to Dynamic("load_f30_op2105_t493_bank_val")
; Spill t488 to slot 1163
    ADD SC, FP, R0
    ADDI SC, SC, 1173
    STORE RV0, SB, SC
    LI RV0, 0
; Spill t489 to slot 1164
    ADD SC, FP, R0
    ADDI SC, SC, 1174
    STORE T3, SB, SC
; Spill load_f30_op2087_t489_bank_val to slot 1165
    ADD SC, FP, R0
    ADDI SC, SC, 1175
    STORE T7, SB, SC
; Spill t490 to slot 1166
    ADD SC, FP, R0
    ADDI SC, SC, 1176
    STORE S3, SB, SC
; Spill load_f30_op2087_t489_bank_val to slot 1167
    ADD SC, FP, R0
    ADDI SC, SC, 1177
    STORE T7, SB, SC
    LI S3, -1
    BEQ T5, S3, L_bc_3bc518f7_use_global
; Spill load_f30_op2087_t489_bank_val to slot 1168
    ADD SC, FP, R0
    ADDI SC, SC, 1178
    STORE T7, SB, SC
    LI T7, -2
    BEQ T5, T7, L_bc_3bc518f7_use_stack
    ADD T3, T5, R0
    BEQ R0, R0, L_bc_3bc518f7_done
L_bc_3bc518f7_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_3bc518f7_done
L_bc_3bc518f7_use_stack:
    ADD T3, SB, R0
L_bc_3bc518f7_done:
    STORE RV0, T3, T6
; Load instruction: t495 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op2112_t495 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, S3
    LI RV0, 1752
; Spill store_f30_op2089_resolved_bank_30_f30_op2090 to slot 1169
    ADD SC, FP, R0
    ADDI SC, SC, 1179
    STORE T1, SB, SC
; Spill t491 to slot 1170
    ADD SC, FP, R0
    ADDI SC, SC, 1180
    STORE S2, SB, SC
; Spill load_f30_op2096_t491_bank_val to slot 1171
    ADD SC, FP, R0
    ADDI SC, SC, 1181
    STORE S1, SB, SC
    ADD S2, T7, R0
    ADD T1, RV0, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t492 to slot 1172
    ADD SC, FP, R0
    ADDI SC, SC, 1182
    STORE T4, SB, SC
; Spill load_f30_op2096_t491_bank_val to slot 1173
    ADD SC, FP, R0
    ADDI SC, SC, 1183
    STORE S1, SB, SC
; Spill load_f30_op2096_t491_bank_val to slot 1174
    ADD SC, FP, R0
    ADDI SC, SC, 1184
    STORE S1, SB, SC
    LI S1, -1
    DIV T4, T1, S1
; Spill store_f30_op2098_resolved_bank_30_f30_op2099 to slot 1175
    ADD SC, FP, R0
    ADDI SC, SC, 1185
    STORE T0, SB, SC
    MOD T0, T1, S1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2119_t496'
; Computing new bank gep_new_bank_f30_op2119_t496 = GP + bank_delta
    ADD S0, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op2119_t496)
    ADD T1, T0, R0
; GEP: Setting bank info for t496 to Dynamic("gep_new_bank_f30_op2119_t496")
    LI S2, 1
    LI S1, -1
    BEQ S0, S1, L_bc_c15c2217_use_global
    LI T0, -2
    BEQ S0, T0, L_bc_c15c2217_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_c15c2217_done
L_bc_c15c2217_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_c15c2217_done
L_bc_c15c2217_use_stack:
    ADD T4, SB, R0
L_bc_c15c2217_done:
    STORE S2, T4, T1
; Load instruction: t497 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI RV0, 1852
; LOAD: Pointer load_src_ptr_f30_op2126_t497 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, RV0
    LI T0, 1802
; Spill t493 to slot 1176
    ADD SC, FP, R0
    ADDI SC, SC, 1186
    STORE T2, SB, SC
; Spill load_f30_op2105_t493_bank_val to slot 1177
    ADD SC, FP, R0
    ADDI SC, SC, 1187
    STORE T5, SB, SC
    ADD T2, S1, R0
    ADD S2, T0, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill t494 to slot 1178
    ADD SC, FP, R0
    ADDI SC, SC, 1188
    STORE T6, SB, SC
; Spill load_f30_op2105_t493_bank_val to slot 1179
    ADD SC, FP, R0
    ADDI SC, SC, 1189
    STORE T5, SB, SC
; Spill load_f30_op2105_t493_bank_val to slot 1180
    ADD SC, FP, R0
    ADDI SC, SC, 1190
    STORE T5, SB, SC
    LI T5, -1
    DIV T6, S2, T5
; Spill store_f30_op2107_resolved_bank_30_f30_op2108 to slot 1181
    ADD SC, FP, R0
    ADDI SC, SC, 1191
    STORE T3, SB, SC
    MOD T3, S2, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2133_t498'
; Spill load_f30_op2111_t495_addr to slot 1182
    ADD SC, FP, R0
    ADDI SC, SC, 1192
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f30_op2133_t498 = GP + bank_delta
    ADD S3, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f30_op2133_t498)
    ADD S2, T3, R0
; GEP: Setting bank info for t498 to Dynamic("gep_new_bank_f30_op2133_t498")
    LI T2, 0
    LI T5, -1
    BEQ S3, T5, L_bc_3a5da702_use_global
    LI T3, -2
    BEQ S3, T3, L_bc_3a5da702_use_stack
    ADD T6, S3, R0
    BEQ R0, R0, L_bc_3a5da702_done
L_bc_3a5da702_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_3a5da702_done
L_bc_3a5da702_use_stack:
    ADD T6, SB, R0
L_bc_3a5da702_done:
    STORE T2, T6, S2
; Load instruction: t499 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op2140_t499 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T0
    LI T3, 0
    ADD T5, T5, T3
; Load instruction: t501 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op2143_t501 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T2
; Spill t495 to slot 1183
    ADD SC, FP, R0
    ADDI SC, SC, 1193
    STORE T7, SB, SC
    LI T7, 1
    ADD T3, T3, T7
    LI T7, 1852
    STORE T3, GP, T7
; Load instruction: t503 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op2148_t503 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t496 to slot 1184
    ADD SC, FP, R0
    ADDI SC, SC, 1194
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op2119_t496 to slot 1185
    ADD SC, FP, R0
    ADDI SC, SC, 1195
    STORE S0, SB, SC
    LOAD T1, GP, T7
; Spill live registers before call
; Spill gep_new_bank_f30_op2119_t496 to slot 1186
    ADD SC, FP, R0
    ADDI SC, SC, 1196
    STORE S0, SB, SC
; Spill store_f30_op2121_resolved_bank_30_f30_op2122 to slot 1187
    ADD SC, FP, R0
    ADDI SC, SC, 1197
    STORE T4, SB, SC
; Spill load_f30_op2125_t497_addr to slot 1188
    ADD SC, FP, R0
    ADDI SC, SC, 1198
    STORE RV0, SB, SC
; Spill t497 to slot 1189
    ADD SC, FP, R0
    ADDI SC, SC, 1199
    STORE S1, SB, SC
; Spill t498 to slot 1190
    ADD SC, FP, R0
    ADDI SC, SC, 1200
    STORE S2, SB, SC
; Spill gep_new_bank_f30_op2133_t498 to slot 1191
    ADD SC, FP, R0
    ADDI SC, SC, 1201
    STORE S3, SB, SC
; Spill gep_new_bank_f30_op2133_t498 to slot 1192
    ADD SC, FP, R0
    ADDI SC, SC, 1202
    STORE S3, SB, SC
; Spill store_f30_op2135_resolved_bank_30_f30_op2136 to slot 1193
    ADD SC, FP, R0
    ADDI SC, SC, 1203
    STORE T6, SB, SC
; Spill load_f30_op2139_t499_addr to slot 1194
    ADD SC, FP, R0
    ADDI SC, SC, 1204
    STORE T0, SB, SC
; Spill t500 to slot 1195
    ADD SC, FP, R0
    ADDI SC, SC, 1205
    STORE T5, SB, SC
; Spill load_f30_op2142_t501_addr to slot 1196
    ADD SC, FP, R0
    ADDI SC, SC, 1206
    STORE T2, SB, SC
; Spill t502 to slot 1197
    ADD SC, FP, R0
    ADDI SC, SC, 1207
    STORE T3, SB, SC
; Spill load_f30_op2147_t503_addr to slot 1198
    ADD SC, FP, R0
    ADDI SC, SC, 1208
    STORE T7, SB, SC
; Spill t503 to slot 1199
    ADD SC, FP, R0
    ADDI SC, SC, 1209
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t504
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T4, S0, 1
    STORE RV1, SB, T4
; Load instruction: t505 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2152_t505 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S0
    ADDI S2, S0, 1
    LOAD S3, SB, S2
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T6, S1, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t506 to Dynamic("load_f30_op2155_t505_bank_val")
    LI T0, 76
    LI T2, -1
    BEQ S3, T2, L_bc_5604063d_use_global
    LI T3, -2
    BEQ S3, T3, L_bc_5604063d_use_stack
    ADD T5, S3, R0
    BEQ R0, R0, L_bc_5604063d_done
L_bc_5604063d_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_5604063d_done
L_bc_5604063d_use_stack:
    ADD T5, SB, R0
L_bc_5604063d_done:
    STORE T0, T5, T6
; Load instruction: t507 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2161_t507 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S0
    ADDI T1, S0, 1
    LOAD T4, SB, T1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S2, T7, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t508 to Dynamic("load_f30_op2164_t507_bank_val")
    LI T2, 79
    LI T0, -1
    BEQ T4, T0, L_bc_a854d543_use_global
    LI T1, -2
    BEQ T4, T1, L_bc_a854d543_use_stack
    ADD T3, T4, R0
    BEQ R0, R0, L_bc_a854d543_done
L_bc_a854d543_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_a854d543_done
L_bc_a854d543_use_stack:
    ADD T3, SB, R0
L_bc_a854d543_done:
    STORE T2, T3, S2
; Load instruction: t509 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2170_t509 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI T1, S0, 1
    LOAD T2, SB, T1
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T0, 2
; WARNING: Static bank overflow - offset 2 crosses -2 banks
; GEP: Setting bank info for t510 to Dynamic("load_f30_op2173_t509_bank_val")
; Spill t504 to slot 1200
    ADD SC, FP, R0
    ADDI SC, SC, 1210
    STORE RV0, SB, SC
    LI RV0, 79
; Spill t505 to slot 1201
    ADD SC, FP, R0
    ADDI SC, SC, 1211
    STORE S1, SB, SC
; Spill load_f30_op2155_t505_bank_val to slot 1202
    ADD SC, FP, R0
    ADDI SC, SC, 1212
    STORE S3, SB, SC
; Spill t506 to slot 1203
    ADD SC, FP, R0
    ADDI SC, SC, 1213
    STORE T6, SB, SC
; Spill load_f30_op2155_t505_bank_val to slot 1204
    ADD SC, FP, R0
    ADDI SC, SC, 1214
    STORE S3, SB, SC
    LI T6, -1
    BEQ T2, T6, L_bc_085ad046_use_global
; Spill load_f30_op2155_t505_bank_val to slot 1205
    ADD SC, FP, R0
    ADDI SC, SC, 1215
    STORE S3, SB, SC
    LI S3, -2
    BEQ T2, S3, L_bc_085ad046_use_stack
    ADD S1, T2, R0
    BEQ R0, R0, L_bc_085ad046_done
L_bc_085ad046_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_085ad046_done
L_bc_085ad046_use_stack:
    ADD S1, SB, R0
L_bc_085ad046_done:
    STORE RV0, S1, T1
; Load instruction: t511 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2179_t511 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T6, SB, S0
    ADDI S3, S0, 1
    LOAD RV0, SB, S3
; Bank value in Rv0 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI S3, T6, 3
; WARNING: Static bank overflow - offset 3 crosses -3 banks
; GEP: Setting bank info for t512 to Dynamic("load_f30_op2182_t511_bank_val")
; Spill store_f30_op2157_resolved_bank_30_f30_op2158 to slot 1206
    ADD SC, FP, R0
    ADDI SC, SC, 1216
    STORE T5, SB, SC
    LI T5, 80
; Spill t507 to slot 1207
    ADD SC, FP, R0
    ADDI SC, SC, 1217
    STORE T7, SB, SC
; Spill load_f30_op2164_t507_bank_val to slot 1208
    ADD SC, FP, R0
    ADDI SC, SC, 1218
    STORE T4, SB, SC
; Spill t508 to slot 1209
    ADD SC, FP, R0
    ADDI SC, SC, 1219
    STORE S2, SB, SC
; Spill load_f30_op2164_t507_bank_val to slot 1210
    ADD SC, FP, R0
    ADDI SC, SC, 1220
    STORE T4, SB, SC
    LI S2, -1
    BEQ RV0, S2, L_bc_fc892cec_use_global
; Spill load_f30_op2164_t507_bank_val to slot 1211
    ADD SC, FP, R0
    ADDI SC, SC, 1221
    STORE T4, SB, SC
    LI T4, -2
    BEQ RV0, T4, L_bc_fc892cec_use_stack
    ADD T7, RV0, R0
    BEQ R0, R0, L_bc_fc892cec_done
L_bc_fc892cec_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_fc892cec_done
L_bc_fc892cec_use_stack:
    ADD T7, SB, R0
L_bc_fc892cec_done:
    STORE T5, T7, S3
; Load instruction: t513 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2188_t513 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T4, S0, 1
    LOAD T5, SB, T4
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T4, S2, 4
; WARNING: Static bank overflow - offset 4 crosses -4 banks
; GEP: Setting bank info for t514 to Dynamic("load_f30_op2191_t513_bank_val")
; Spill store_f30_op2166_resolved_bank_30_f30_op2167 to slot 1212
    ADD SC, FP, R0
    ADDI SC, SC, 1222
    STORE T3, SB, SC
    LI T3, 0
; Spill t509 to slot 1213
    ADD SC, FP, R0
    ADDI SC, SC, 1223
    STORE T0, SB, SC
; Spill load_f30_op2173_t509_bank_val to slot 1214
    ADD SC, FP, R0
    ADDI SC, SC, 1224
    STORE T2, SB, SC
; Spill t510 to slot 1215
    ADD SC, FP, R0
    ADDI SC, SC, 1225
    STORE T1, SB, SC
; Spill load_f30_op2173_t509_bank_val to slot 1216
    ADD SC, FP, R0
    ADDI SC, SC, 1226
    STORE T2, SB, SC
    LI T1, -1
    BEQ T5, T1, L_bc_d687ddb7_use_global
; Spill load_f30_op2173_t509_bank_val to slot 1217
    ADD SC, FP, R0
    ADDI SC, SC, 1227
    STORE T2, SB, SC
    LI T2, -2
    BEQ T5, T2, L_bc_d687ddb7_use_stack
    ADD T0, T5, R0
    BEQ R0, R0, L_bc_d687ddb7_done
L_bc_d687ddb7_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_d687ddb7_done
L_bc_d687ddb7_use_stack:
    ADD T0, SB, R0
L_bc_d687ddb7_done:
    STORE T3, T0, T4
; Load instruction: t515 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f30_op2198_t515 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T1
    LI T3, 1752
; Spill store_f30_op2175_resolved_bank_30_f30_op2176 to slot 1218
    ADD SC, FP, R0
    ADDI SC, SC, 1228
    STORE S1, SB, SC
; Spill t511 to slot 1219
    ADD SC, FP, R0
    ADDI SC, SC, 1229
    STORE T6, SB, SC
; Spill load_f30_op2182_t511_bank_val to slot 1220
    ADD SC, FP, R0
    ADDI SC, SC, 1230
    STORE RV0, SB, SC
    ADD T6, T2, R0
    ADD S1, T3, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill t512 to slot 1221
    ADD SC, FP, R0
    ADDI SC, SC, 1231
    STORE S3, SB, SC
; Spill load_f30_op2182_t511_bank_val to slot 1222
    ADD SC, FP, R0
    ADDI SC, SC, 1232
    STORE RV0, SB, SC
; Spill load_f30_op2182_t511_bank_val to slot 1223
    ADD SC, FP, R0
    ADDI SC, SC, 1233
    STORE RV0, SB, SC
    LI RV0, -1
    DIV S3, S1, RV0
; Spill store_f30_op2184_resolved_bank_30_f30_op2185 to slot 1224
    ADD SC, FP, R0
    ADDI SC, SC, 1234
    STORE T7, SB, SC
    MOD T7, S1, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2205_t516'
; Computing new bank gep_new_bank_f30_op2205_t516 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f30_op2205_t516)
    ADD S1, T7, R0
; GEP: Setting bank info for t516 to Dynamic("gep_new_bank_f30_op2205_t516")
    LI T6, 1
    LI RV0, -1
    BEQ S0, RV0, L_bc_c7dbf21c_use_global
    LI T7, -2
    BEQ S0, T7, L_bc_c7dbf21c_use_stack
    ADD S3, S0, R0
    BEQ R0, R0, L_bc_c7dbf21c_done
L_bc_c7dbf21c_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_c7dbf21c_done
L_bc_c7dbf21c_use_stack:
    ADD S3, SB, R0
L_bc_c7dbf21c_done:
    STORE T6, S3, S1
; Load instruction: t517 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T3, 1852
; LOAD: Pointer load_src_ptr_f30_op2212_t517 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, T3
    LI T7, 1802
; Spill t513 to slot 1225
    ADD SC, FP, R0
    ADDI SC, SC, 1235
    STORE S2, SB, SC
; Spill load_f30_op2191_t513_bank_val to slot 1226
    ADD SC, FP, R0
    ADDI SC, SC, 1236
    STORE T5, SB, SC
    ADD S2, RV0, R0
    ADD T6, T7, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t514 to slot 1227
    ADD SC, FP, R0
    ADDI SC, SC, 1237
    STORE T4, SB, SC
; Spill load_f30_op2191_t513_bank_val to slot 1228
    ADD SC, FP, R0
    ADDI SC, SC, 1238
    STORE T5, SB, SC
; Spill load_f30_op2191_t513_bank_val to slot 1229
    ADD SC, FP, R0
    ADDI SC, SC, 1239
    STORE T5, SB, SC
    LI T5, -1
    DIV T4, T6, T5
; Spill store_f30_op2193_resolved_bank_30_f30_op2194 to slot 1230
    ADD SC, FP, R0
    ADDI SC, SC, 1240
    STORE T0, SB, SC
    MOD T0, T6, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2219_t518'
; Spill load_f30_op2197_t515_addr to slot 1231
    ADD SC, FP, R0
    ADDI SC, SC, 1241
    STORE T1, SB, SC
; Computing new bank gep_new_bank_f30_op2219_t518 = GP + bank_delta
    ADD T1, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op2219_t518)
    ADD T6, T0, R0
; GEP: Setting bank info for t518 to Dynamic("gep_new_bank_f30_op2219_t518")
    LI S2, 0
    LI T5, -1
    BEQ T1, T5, L_bc_4f990aab_use_global
    LI T0, -2
    BEQ T1, T0, L_bc_4f990aab_use_stack
    ADD T4, T1, R0
    BEQ R0, R0, L_bc_4f990aab_done
L_bc_4f990aab_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_4f990aab_done
L_bc_4f990aab_use_stack:
    ADD T4, SB, R0
L_bc_4f990aab_done:
    STORE S2, T4, T6
; Load instruction: t519 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op2226_t519 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T7
    LI T0, 0
    ADD T5, T5, T0
; Load instruction: t521 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op2229_t521 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, S2
; Spill t515 to slot 1232
    ADD SC, FP, R0
    ADDI SC, SC, 1242
    STORE T2, SB, SC
    LI T2, 1
    ADD T0, T0, T2
    LI T2, 1852
    STORE T0, GP, T2
; Load instruction: t523 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op2234_t523 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t516 to slot 1233
    ADD SC, FP, R0
    ADDI SC, SC, 1243
    STORE S1, SB, SC
; Spill gep_new_bank_f30_op2205_t516 to slot 1234
    ADD SC, FP, R0
    ADDI SC, SC, 1244
    STORE S0, SB, SC
    LOAD S1, GP, T2
; Spill live registers before call
; Spill gep_new_bank_f30_op2205_t516 to slot 1235
    ADD SC, FP, R0
    ADDI SC, SC, 1245
    STORE S0, SB, SC
; Spill store_f30_op2207_resolved_bank_30_f30_op2208 to slot 1236
    ADD SC, FP, R0
    ADDI SC, SC, 1246
    STORE S3, SB, SC
; Spill load_f30_op2211_t517_addr to slot 1237
    ADD SC, FP, R0
    ADDI SC, SC, 1247
    STORE T3, SB, SC
; Spill t517 to slot 1238
    ADD SC, FP, R0
    ADDI SC, SC, 1248
    STORE RV0, SB, SC
; Spill t518 to slot 1239
    ADD SC, FP, R0
    ADDI SC, SC, 1249
    STORE T6, SB, SC
; Spill gep_new_bank_f30_op2219_t518 to slot 1240
    ADD SC, FP, R0
    ADDI SC, SC, 1250
    STORE T1, SB, SC
; Spill gep_new_bank_f30_op2219_t518 to slot 1241
    ADD SC, FP, R0
    ADDI SC, SC, 1251
    STORE T1, SB, SC
; Spill store_f30_op2221_resolved_bank_30_f30_op2222 to slot 1242
    ADD SC, FP, R0
    ADDI SC, SC, 1252
    STORE T4, SB, SC
; Spill load_f30_op2225_t519_addr to slot 1243
    ADD SC, FP, R0
    ADDI SC, SC, 1253
    STORE T7, SB, SC
; Spill t520 to slot 1244
    ADD SC, FP, R0
    ADDI SC, SC, 1254
    STORE T5, SB, SC
; Spill load_f30_op2228_t521_addr to slot 1245
    ADD SC, FP, R0
    ADDI SC, SC, 1255
    STORE S2, SB, SC
; Spill t522 to slot 1246
    ADD SC, FP, R0
    ADDI SC, SC, 1256
    STORE T0, SB, SC
; Spill load_f30_op2233_t523_addr to slot 1247
    ADD SC, FP, R0
    ADDI SC, SC, 1257
    STORE T2, SB, SC
; Spill t523 to slot 1248
    ADD SC, FP, R0
    ADDI SC, SC, 1258
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t524
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI S3, S0, 1
    STORE RV1, SB, S3
; Load instruction: t525 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2238_t525 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, S0
    ADDI T6, S0, 1
    LOAD T1, SB, T6
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T4, T3, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t526 to Dynamic("load_f30_op2241_t525_bank_val")
    LI T7, 73
    LI S2, -1
    BEQ T1, S2, L_bc_22919afb_use_global
    LI T0, -2
    BEQ T1, T0, L_bc_22919afb_use_stack
    ADD T5, T1, R0
    BEQ R0, R0, L_bc_22919afb_done
L_bc_22919afb_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_22919afb_done
L_bc_22919afb_use_stack:
    ADD T5, SB, R0
L_bc_22919afb_done:
    STORE T7, T5, T4
; Load instruction: t527 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2247_t527 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T2, SB, S0
    ADDI S1, S0, 1
    LOAD S3, SB, S1
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T6, T2, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t528 to Dynamic("load_f30_op2250_t527_bank_val")
    LI S2, 0
    LI T7, -1
    BEQ S3, T7, L_bc_ca40708d_use_global
    LI S1, -2
    BEQ S3, S1, L_bc_ca40708d_use_stack
    ADD T0, S3, R0
    BEQ R0, R0, L_bc_ca40708d_done
L_bc_ca40708d_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_ca40708d_done
L_bc_ca40708d_use_stack:
    ADD T0, SB, R0
L_bc_ca40708d_done:
    STORE S2, T0, T6
; Load instruction: t529 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T7, 1852
; LOAD: Pointer load_src_ptr_f30_op2257_t529 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T7
    LI S2, 1752
; Spill t524 to slot 1249
    ADD SC, FP, R0
    ADDI SC, SC, 1259
    STORE RV0, SB, SC
; Spill t525 to slot 1250
    ADD SC, FP, R0
    ADDI SC, SC, 1260
    STORE T3, SB, SC
; Spill load_f30_op2241_t525_bank_val to slot 1251
    ADD SC, FP, R0
    ADDI SC, SC, 1261
    STORE T1, SB, SC
    ADD T3, S1, R0
    ADD RV0, S2, T3
; Runtime bank overflow calculation for dynamic GEP
; Spill t526 to slot 1252
    ADD SC, FP, R0
    ADDI SC, SC, 1262
    STORE T4, SB, SC
; Spill load_f30_op2241_t525_bank_val to slot 1253
    ADD SC, FP, R0
    ADDI SC, SC, 1263
    STORE T1, SB, SC
; Spill load_f30_op2241_t525_bank_val to slot 1254
    ADD SC, FP, R0
    ADDI SC, SC, 1264
    STORE T1, SB, SC
    LI T1, -1
    DIV T4, RV0, T1
; Spill store_f30_op2243_resolved_bank_30_f30_op2244 to slot 1255
    ADD SC, FP, R0
    ADDI SC, SC, 1265
    STORE T5, SB, SC
    MOD T5, RV0, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2264_t530'
; Computing new bank gep_new_bank_f30_op2264_t530 = GP + bank_delta
    ADD S0, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f30_op2264_t530)
    ADD RV0, T5, R0
; GEP: Setting bank info for t530 to Dynamic("gep_new_bank_f30_op2264_t530")
    LI T3, 1
    LI T1, -1
    BEQ S0, T1, L_bc_dde14a00_use_global
    LI T5, -2
    BEQ S0, T5, L_bc_dde14a00_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_dde14a00_done
L_bc_dde14a00_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_dde14a00_done
L_bc_dde14a00_use_stack:
    ADD T4, SB, R0
L_bc_dde14a00_done:
    STORE T3, T4, RV0
; Load instruction: t531 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f30_op2271_t531 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S2
    LI T5, 1802
; Spill t527 to slot 1256
    ADD SC, FP, R0
    ADDI SC, SC, 1266
    STORE T2, SB, SC
; Spill load_f30_op2250_t527_bank_val to slot 1257
    ADD SC, FP, R0
    ADDI SC, SC, 1267
    STORE S3, SB, SC
    ADD T2, T1, R0
    ADD T3, T5, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill t528 to slot 1258
    ADD SC, FP, R0
    ADDI SC, SC, 1268
    STORE T6, SB, SC
; Spill load_f30_op2250_t527_bank_val to slot 1259
    ADD SC, FP, R0
    ADDI SC, SC, 1269
    STORE S3, SB, SC
; Spill load_f30_op2250_t527_bank_val to slot 1260
    ADD SC, FP, R0
    ADDI SC, SC, 1270
    STORE S3, SB, SC
    LI S3, -1
    DIV T6, T3, S3
; Spill store_f30_op2252_resolved_bank_30_f30_op2253 to slot 1261
    ADD SC, FP, R0
    ADDI SC, SC, 1271
    STORE T0, SB, SC
    MOD T0, T3, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2278_t532'
; Spill load_f30_op2256_t529_addr to slot 1262
    ADD SC, FP, R0
    ADDI SC, SC, 1272
    STORE T7, SB, SC
; Computing new bank gep_new_bank_f30_op2278_t532 = GP + bank_delta
    ADD T7, GP, T6
; Result bank tracked as Dynamic(gep_new_bank_f30_op2278_t532)
    ADD T3, T0, R0
; GEP: Setting bank info for t532 to Dynamic("gep_new_bank_f30_op2278_t532")
    LI T2, 0
    LI S3, -1
    BEQ T7, S3, L_bc_0b7f9a9a_use_global
    LI T0, -2
    BEQ T7, T0, L_bc_0b7f9a9a_use_stack
    ADD T6, T7, R0
    BEQ R0, R0, L_bc_0b7f9a9a_done
L_bc_0b7f9a9a_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_0b7f9a9a_done
L_bc_0b7f9a9a_use_stack:
    ADD T6, SB, R0
L_bc_0b7f9a9a_done:
    STORE T2, T6, T3
; Load instruction: t533 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op2285_t533 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T5
    LI T0, 0
    ADD S3, S3, T0
; Load instruction: t535 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f30_op2288_t535 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T2
; Spill t529 to slot 1263
    ADD SC, FP, R0
    ADDI SC, SC, 1273
    STORE S1, SB, SC
    LI S1, 1
    ADD T0, T0, S1
    LI S1, 1852
    STORE T0, GP, S1
; Load instruction: t537 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f30_op2293_t537 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t530 to slot 1264
    ADD SC, FP, R0
    ADDI SC, SC, 1274
    STORE RV0, SB, SC
; Spill gep_new_bank_f30_op2264_t530 to slot 1265
    ADD SC, FP, R0
    ADDI SC, SC, 1275
    STORE S0, SB, SC
    LOAD RV0, GP, S1
; Spill live registers before call
; Spill gep_new_bank_f30_op2264_t530 to slot 1266
    ADD SC, FP, R0
    ADDI SC, SC, 1276
    STORE S0, SB, SC
; Spill store_f30_op2266_resolved_bank_30_f30_op2267 to slot 1267
    ADD SC, FP, R0
    ADDI SC, SC, 1277
    STORE T4, SB, SC
; Spill load_f30_op2270_t531_addr to slot 1268
    ADD SC, FP, R0
    ADDI SC, SC, 1278
    STORE S2, SB, SC
; Spill t531 to slot 1269
    ADD SC, FP, R0
    ADDI SC, SC, 1279
    STORE T1, SB, SC
; Spill t532 to slot 1270
    ADD SC, FP, R0
    ADDI SC, SC, 1280
    STORE T3, SB, SC
; Spill gep_new_bank_f30_op2278_t532 to slot 1271
    ADD SC, FP, R0
    ADDI SC, SC, 1281
    STORE T7, SB, SC
; Spill gep_new_bank_f30_op2278_t532 to slot 1272
    ADD SC, FP, R0
    ADDI SC, SC, 1282
    STORE T7, SB, SC
; Spill store_f30_op2280_resolved_bank_30_f30_op2281 to slot 1273
    ADD SC, FP, R0
    ADDI SC, SC, 1283
    STORE T6, SB, SC
; Spill load_f30_op2284_t533_addr to slot 1274
    ADD SC, FP, R0
    ADDI SC, SC, 1284
    STORE T5, SB, SC
; Spill t534 to slot 1275
    ADD SC, FP, R0
    ADDI SC, SC, 1285
    STORE S3, SB, SC
; Spill load_f30_op2287_t535_addr to slot 1276
    ADD SC, FP, R0
    ADDI SC, SC, 1286
    STORE T2, SB, SC
; Spill t536 to slot 1277
    ADD SC, FP, R0
    ADDI SC, SC, 1287
    STORE T0, SB, SC
; Spill load_f30_op2292_t537_addr to slot 1278
    ADD SC, FP, R0
    ADDI SC, SC, 1288
    STORE S1, SB, SC
; Spill t537 to slot 1279
    ADD SC, FP, R0
    ADDI SC, SC, 1289
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t538
; Recompute alloca t0 at FP+0
    ADD S0, FP, R0
    STORE RV0, SB, S0
    ADDI T4, S0, 1
    STORE RV1, SB, T4
; Load instruction: t539 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2297_t539 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, S0
    ADDI T1, S0, 1
    LOAD T3, SB, T1
; Bank value in T3 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADD T7, S2, R0
; WARNING: Static bank overflow - offset 0 crosses 0 banks
; GEP: Setting bank info for t540 to Dynamic("load_f30_op2300_t539_bank_val")
    LI T6, 74
    LI S3, -1
    BEQ T3, S3, L_bc_dbb0fcf3_use_global
    LI T2, -2
    BEQ T3, T2, L_bc_dbb0fcf3_use_stack
    ADD T5, T3, R0
    BEQ R0, R0, L_bc_dbb0fcf3_done
L_bc_dbb0fcf3_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_dbb0fcf3_done
L_bc_dbb0fcf3_use_stack:
    ADD T5, SB, R0
L_bc_dbb0fcf3_done:
    STORE T6, T5, T7
; Load instruction: t541 = load FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(0), bank: Stack })
; LOAD: Pointer load_src_ptr_f30_op2306_t541 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, S0
    ADDI S1, S0, 1
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
    ADDI T1, T0, 1
; WARNING: Static bank overflow - offset 1 crosses -1 banks
; GEP: Setting bank info for t542 to Dynamic("load_f30_op2309_t541_bank_val")
    LI S3, 0
    LI T6, -1
    BEQ T4, T6, L_bc_3e431629_use_global
    LI S1, -2
    BEQ T4, S1, L_bc_3e431629_use_stack
    ADD T2, T4, R0
    BEQ R0, R0, L_bc_3e431629_done
L_bc_3e431629_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_3e431629_done
L_bc_3e431629_use_stack:
    ADD T2, SB, R0
L_bc_3e431629_done:
    STORE S3, T2, T1
; Load instruction: t543 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f30_op2316_t543 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T6
    LI S3, 1752
; Spill t538 to slot 1280
    ADD SC, FP, R0
    ADDI SC, SC, 1290
    STORE RV0, SB, SC
; Spill t539 to slot 1281
    ADD SC, FP, R0
    ADDI SC, SC, 1291
    STORE S2, SB, SC
; Spill load_f30_op2300_t539_bank_val to slot 1282
    ADD SC, FP, R0
    ADDI SC, SC, 1292
    STORE T3, SB, SC
    ADD S2, S1, R0
    ADD RV0, S3, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t540 to slot 1283
    ADD SC, FP, R0
    ADDI SC, SC, 1293
    STORE T7, SB, SC
; Spill load_f30_op2300_t539_bank_val to slot 1284
    ADD SC, FP, R0
    ADDI SC, SC, 1294
    STORE T3, SB, SC
; Spill load_f30_op2300_t539_bank_val to slot 1285
    ADD SC, FP, R0
    ADDI SC, SC, 1295
    STORE T3, SB, SC
    LI T3, -1
    DIV T7, RV0, T3
; Spill store_f30_op2302_resolved_bank_30_f30_op2303 to slot 1286
    ADD SC, FP, R0
    ADDI SC, SC, 1296
    STORE T5, SB, SC
    MOD T5, RV0, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2323_t544'
; Computing new bank gep_new_bank_f30_op2323_t544 = GP + bank_delta
    ADD S0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f30_op2323_t544)
    ADD RV0, T5, R0
; GEP: Setting bank info for t544 to Dynamic("gep_new_bank_f30_op2323_t544")
    LI S2, 1
    LI T3, -1
    BEQ S0, T3, L_bc_d1c3d696_use_global
    LI T5, -2
    BEQ S0, T5, L_bc_d1c3d696_use_stack
    ADD T7, S0, R0
    BEQ R0, R0, L_bc_d1c3d696_done
L_bc_d1c3d696_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_d1c3d696_done
L_bc_d1c3d696_use_stack:
    ADD T7, SB, R0
L_bc_d1c3d696_done:
    STORE S2, T7, RV0
; Load instruction: t545 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S3, 1852
; LOAD: Pointer load_src_ptr_f30_op2330_t545 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, S3
    LI T5, 1802
; Spill t541 to slot 1287
    ADD SC, FP, R0
    ADDI SC, SC, 1297
    STORE T0, SB, SC
; Spill load_f30_op2309_t541_bank_val to slot 1288
    ADD SC, FP, R0
    ADDI SC, SC, 1298
    STORE T4, SB, SC
    ADD T0, T3, R0
    ADD S2, T5, T0
; Runtime bank overflow calculation for dynamic GEP
; Spill t542 to slot 1289
    ADD SC, FP, R0
    ADDI SC, SC, 1299
    STORE T1, SB, SC
; Spill load_f30_op2309_t541_bank_val to slot 1290
    ADD SC, FP, R0
    ADDI SC, SC, 1300
    STORE T4, SB, SC
; Spill load_f30_op2309_t541_bank_val to slot 1291
    ADD SC, FP, R0
    ADDI SC, SC, 1301
    STORE T4, SB, SC
    LI T4, -1
    DIV T1, S2, T4
; Spill store_f30_op2311_resolved_bank_30_f30_op2312 to slot 1292
    ADD SC, FP, R0
    ADDI SC, SC, 1302
    STORE T2, SB, SC
    MOD T2, S2, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f30_op2337_t546'
; Spill load_f30_op2315_t543_addr to slot 1293
    ADD SC, FP, R0
    ADDI SC, SC, 1303
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f30_op2337_t546 = GP + bank_delta
    ADD T6, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f30_op2337_t546)
    ADD S2, T2, R0
; GEP: Setting bank info for t546 to Dynamic("gep_new_bank_f30_op2337_t546")
    LI T0, 0
    LI T4, -1
    BEQ T6, T4, L_bc_54e9683e_use_global
    LI T2, -2
    BEQ T6, T2, L_bc_54e9683e_use_stack
    ADD T1, T6, R0
    BEQ R0, R0, L_bc_54e9683e_done
L_bc_54e9683e_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_54e9683e_done
L_bc_54e9683e_use_stack:
    ADD T1, SB, R0
L_bc_54e9683e_done:
    STORE T0, T1, S2
; Load instruction: t547 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T5, 1852
; LOAD: Pointer load_src_ptr_f30_op2344_t547 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T5
    LI T2, 0
    ADD T4, T4, T2
; Load instruction: t549 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T0, 1852
; LOAD: Pointer load_src_ptr_f30_op2347_t549 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T0
; Spill t543 to slot 1294
    ADD SC, FP, R0
    ADDI SC, SC, 1304
    STORE S1, SB, SC
    LI S1, 1
    ADD T2, T2, S1
    LI S1, 1852
    STORE T2, GP, S1
; Jump to epilogue
    BEQ R0, R0, L_init_dict_99999
L_init_dict_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
show_word_definition:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 12 slots for locals
    ADDI SP, SP, 12
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
L_show_word_definition_280:
    ADD S2, FP, R0
    STORE S3, SB, S2
; Load instruction: t2 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op2_t2 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, S2
    LI S0, 0
    SLT S1, S1, S0
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op4_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, S2
; Load instruction: t5 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f32_op7_t5 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T5, GP, T6
    SLT T4, T7, T5
    LI T3, 1
    SUB T7, T3, T4
    OR S1, S1, T7
    BEQ S1, R0, L_show_word_definition_283
; Branch to L_show_word_definition_283 if condition is false
    BEQ R0, R0, L_show_word_definition_281
; Unconditional branch to L_show_word_definition_281 (condition was true)
; Invalidated 1 alloca bindings
L_show_word_definition_281:
    LI T2, 2593
    LI T1, -1
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE S3, SB, SC
; Spill load_f32_op6_t5_addr to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T6, SB, SC
; Spill const_f32_op11_2593 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op12 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, T1, R0
; Call function puts
    CALL puts
; Scalar return value for t8
; Jump to epilogue
    BEQ R0, R0, L_show_word_definition_99999
    BEQ R0, R0, L_show_word_definition_283
; Unconditional branch to L_show_word_definition_283
L_show_word_definition_283:
    ADD T0, FP, R0
    ADDI T0, T0, 1
; Load instruction: t10 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op13_t10 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD S0, FP, R0
    LOAD T4, SB, S0
; Spill live registers before call
; Spill t8 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE RV0, SB, SC
; Spill t10 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t11
; Recompute alloca t9 at FP+1
    ADD T3, FP, R0
    ADDI T3, T3, 1
    STORE RV0, SB, T3
    ADDI T5, T3, 1
    STORE RV1, SB, T5
; Load instruction: t12 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op17_t12 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T7, FP, R0
    LOAD S1, SB, T7
    LI S2, 1752
    ADD T6, S1, R0
    ADD S3, S2, T6
; Runtime bank overflow calculation for dynamic GEP
    LI T1, -1
    DIV T2, S3, T1
    MOD T0, S3, T1
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op24_t13'
; Computing new bank gep_new_bank_f32_op24_t13 = GP + bank_delta
    ADD S0, GP, T2
; Result bank tracked as Dynamic(gep_new_bank_f32_op24_t13)
    ADD S3, T0, R0
; GEP: Setting bank info for t13 to Dynamic("gep_new_bank_f32_op24_t13")
; Load instruction: t14 = load FatPtr(FatPointer { addr: Temp(13), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(13), bank: Mixed })
; LOAD: Pointer t13 has bank info: Dynamic("gep_new_bank_f32_op24_t13")
    LI T5, -1
    BEQ S0, T5, L_bc_ac0c62b7_use_global
    LI T6, -2
    BEQ S0, T6, L_bc_ac0c62b7_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_ac0c62b7_done
L_bc_ac0c62b7_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_ac0c62b7_done
L_bc_ac0c62b7_use_stack:
    ADD T4, SB, R0
L_bc_ac0c62b7_done:
; LOAD: Using bank register T4 for load
    LOAD T2, T4, S3
    BEQ T2, R0, L_show_word_definition_285
; Branch to L_show_word_definition_285 if condition is false
    BEQ R0, R0, L_show_word_definition_284
; Unconditional branch to L_show_word_definition_284 (condition was true)
; Invalidated 2 alloca bindings
L_show_word_definition_284:
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op29_t15 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t9 at FP+1
    ADD T1, FP, R0
    ADDI T1, T1, 1
    LOAD T0, SB, T1
    ADDI S2, T1, 1
    LOAD T5, SB, S2
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t11 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE RV0, SB, SC
; Spill t12 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE S1, SB, SC
; Spill t13 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE S3, SB, SC
; Spill gep_new_bank_f32_op24_t13 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE S0, SB, SC
; Spill gep_new_bank_f32_op24_t13 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE S0, SB, SC
; Spill load_f32_op25_t14_resolved_bank_32_f32_op26 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T4, SB, SC
; Spill t15 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T0, SB, SC
; Spill load_f32_op32_t15_bank_val to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T5, SB, SC
; Spill load_f32_op32_t15_bank_val to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T5, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, T5, R0
; Call function puts
    CALL puts
; Scalar return value for t16
    LI T6, 2608
    LI T2, -1
; Spill live registers before call
; Spill t16 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE RV0, SB, SC
; Spill const_f32_op33_2608 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE T6, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op34 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T6, R0
    ADD A1, T2, R0
; Call function puts
    CALL puts
; Scalar return value for t17
    BEQ R0, R0, L_show_word_definition_286
; Unconditional branch to L_show_word_definition_286
L_show_word_definition_285:
    LI T3, 2621
    LI T7, -1
; Spill live registers before call
; Spill t17 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE RV0, SB, SC
; Spill const_f32_op35_2621 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE T3, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op36 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, T7, R0
; Call function puts
    CALL puts
; Scalar return value for t18
; Load instruction: t19 = load FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(9), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op37_t19 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t9 at FP+1
    ADD S2, FP, R0
    ADDI S2, S2, 1
    LOAD S1, SB, S2
    ADDI S3, S2, 1
    LOAD S0, SB, S3
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t18 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE RV0, SB, SC
; Spill t19 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE S1, SB, SC
; Spill load_f32_op40_t19_bank_val to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE S0, SB, SC
; Spill load_f32_op40_t19_bank_val to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, S0, R0
; Call function puts
    CALL puts
; Scalar return value for t20
    LI T4, 2624
    LI T1, -1
; Spill live registers before call
; Spill t20 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE RV0, SB, SC
; Spill const_f32_op41_2624 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T4, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op42 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T4, R0
    ADD A1, T1, R0
; Call function puts
    CALL puts
; Scalar return value for t21
    ADD T0, FP, R0
    ADDI T0, T0, 3
; Load instruction: t23 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op43_t23 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T5, FP, R0
    LOAD T6, SB, T5
    LI T2, 1802
    ADD T7, T6, R0
    ADD T3, T2, T7
; Runtime bank overflow calculation for dynamic GEP
    LI S2, -1
    DIV S3, T3, S2
    MOD S1, T3, S2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op50_t24'
; Computing new bank gep_new_bank_f32_op50_t24 = GP + bank_delta
    ADD S0, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f32_op50_t24)
    ADD T3, S1, R0
; GEP: Setting bank info for t24 to Dynamic("gep_new_bank_f32_op50_t24")
; Load instruction: t25 = load FatPtr(FatPointer { addr: Temp(24), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(24), bank: Mixed })
; LOAD: Pointer t24 has bank info: Dynamic("gep_new_bank_f32_op50_t24")
    LI T1, -1
    BEQ S0, T1, L_bc_9a35293d_use_global
    LI T7, -2
    BEQ S0, T7, L_bc_9a35293d_use_stack
    ADD T4, S0, R0
    BEQ R0, R0, L_bc_9a35293d_done
L_bc_9a35293d_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_9a35293d_done
L_bc_9a35293d_use_stack:
    ADD T4, SB, R0
L_bc_9a35293d_done:
; LOAD: Using bank register T4 for load
    LOAD S3, T4, T3
    STORE S3, SB, T0
    BEQ R0, R0, L_show_word_definition_287
; Unconditional branch to L_show_word_definition_287
; Invalidated 2 alloca bindings
L_show_word_definition_287:
; Load instruction: t26 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op56_t26 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD S2, FP, R0
    ADDI S2, S2, 3
    LOAD S1, SB, S2
    LI T2, 1853
    ADD T7, S1, R0
    ADD T1, T2, T7
; Runtime bank overflow calculation for dynamic GEP
    LI T5, -1
    DIV T0, T1, T5
; Spill t21 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE RV0, SB, SC
    MOD RV0, T1, T5
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op63_t27'
; Spill t23 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f32_op63_t27 = GP + bank_delta
    ADD T6, GP, T0
; Result bank tracked as Dynamic(gep_new_bank_f32_op63_t27)
    ADD T1, RV0, R0
; GEP: Setting bank info for t27 to Dynamic("gep_new_bank_f32_op63_t27")
; Load instruction: t28 = load FatPtr(FatPointer { addr: Temp(27), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(27), bank: Mixed })
; LOAD: Pointer t27 has bank info: Dynamic("gep_new_bank_f32_op63_t27")
    LI T0, -1
    BEQ T6, T0, L_bc_39561839_use_global
    LI T5, -2
    BEQ T6, T5, L_bc_39561839_use_stack
    ADD T7, T6, R0
    BEQ R0, R0, L_bc_39561839_done
L_bc_39561839_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_39561839_done
L_bc_39561839_use_stack:
    ADD T7, SB, R0
L_bc_39561839_done:
; LOAD: Using bank register T7 for load
    LOAD RV0, T7, T1
    LI T2, 0
    LI T0, 1
    SUB T2, T2, T0
    XOR T5, RV0, T2
    LI T0, 0
    SLTU RV0, T0, T5
    BEQ RV0, R0, L_show_word_definition_289
; Branch to L_show_word_definition_289 if condition is false
    BEQ R0, R0, L_show_word_definition_288
; Unconditional branch to L_show_word_definition_288 (condition was true)
; Invalidated 1 alloca bindings
L_show_word_definition_288:
; Load instruction: t31 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op70_t31 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD T5, FP, R0
    ADDI T5, T5, 3
    LOAD T0, SB, T5
    LI T2, 1853
    ADD S2, T0, R0
    ADD RV0, T2, S2
; Runtime bank overflow calculation for dynamic GEP
; Spill t24 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE T3, SB, SC
; Spill gep_new_bank_f32_op50_t24 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S0, SB, SC
; Spill gep_new_bank_f32_op50_t24 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE S0, SB, SC
    LI S0, -1
    DIV T3, RV0, S0
; Spill load_f32_op51_t25_resolved_bank_32_f32_op52 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T4, SB, SC
    MOD T4, RV0, S0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op77_t32'
; Spill t25 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE S3, SB, SC
; Computing new bank gep_new_bank_f32_op77_t32 = GP + bank_delta
    ADD S3, GP, T3
; Result bank tracked as Dynamic(gep_new_bank_f32_op77_t32)
    ADD RV0, T4, R0
; GEP: Setting bank info for t32 to Dynamic("gep_new_bank_f32_op77_t32")
; Load instruction: t33 = load FatPtr(FatPointer { addr: Temp(32), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(32), bank: Mixed })
; LOAD: Pointer t32 has bank info: Dynamic("gep_new_bank_f32_op77_t32")
    LI T3, -1
    BEQ S3, T3, L_bc_ed8c6a58_use_global
    LI S0, -2
    BEQ S3, S0, L_bc_ed8c6a58_use_stack
    ADD S2, S3, R0
    BEQ R0, R0, L_bc_ed8c6a58_done
L_bc_ed8c6a58_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_ed8c6a58_done
L_bc_ed8c6a58_use_stack:
    ADD S2, SB, R0
L_bc_ed8c6a58_done:
; LOAD: Using bank register S2 for load
    LOAD T4, S2, RV0
    LI T2, 0
    SLT T3, T4, T2
    LI S0, 1
    SUB T4, S0, T3
; Load instruction: t35 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op84_t35 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T3, SB, T5
    LI S0, 1853
; Spill t26 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE S1, SB, SC
    ADD S1, T3, R0
    ADD T2, S0, S1
; Runtime bank overflow calculation for dynamic GEP
; Spill t27 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T1, SB, SC
; Spill gep_new_bank_f32_op63_t27 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T6, SB, SC
; Spill gep_new_bank_f32_op63_t27 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T6, SB, SC
    LI T6, -1
    DIV T1, T2, T6
; Spill load_f32_op64_t28_resolved_bank_32_f32_op65 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T7, SB, SC
    MOD T7, T2, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op91_t36'
; Spill t31 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T0, SB, SC
; Computing new bank gep_new_bank_f32_op91_t36 = GP + bank_delta
    ADD T0, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f32_op91_t36)
    ADD T2, T7, R0
; GEP: Setting bank info for t36 to Dynamic("gep_new_bank_f32_op91_t36")
; Load instruction: t37 = load FatPtr(FatPointer { addr: Temp(36), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(36), bank: Mixed })
; LOAD: Pointer t36 has bank info: Dynamic("gep_new_bank_f32_op91_t36")
    LI T1, -1
    BEQ T0, T1, L_bc_5795cc28_use_global
    LI T6, -2
    BEQ T0, T6, L_bc_5795cc28_use_stack
    ADD S1, T0, R0
    BEQ R0, R0, L_bc_5795cc28_done
L_bc_5795cc28_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_5795cc28_done
L_bc_5795cc28_use_stack:
    ADD S1, SB, R0
L_bc_5795cc28_done:
; LOAD: Using bank register S1 for load
    LOAD T7, S1, T2
; Load instruction: t38 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S0, 1852
; LOAD: Pointer load_src_ptr_f32_op97_t38 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S0
    SLT T7, T7, T1
    AND T4, T4, T7
    BEQ T4, R0, L_show_word_definition_291
; Branch to L_show_word_definition_291 if condition is false
    BEQ R0, R0, L_show_word_definition_290
; Unconditional branch to L_show_word_definition_290 (condition was true)
; Invalidated 1 alloca bindings
L_show_word_definition_290:
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op99_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD T6, FP, R0
    ADDI T6, T6, 3
    LOAD T1, SB, T6
    LI T7, 1853
    ADD T5, T1, R0
    ADD T4, T7, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill t32 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE RV0, SB, SC
; Spill gep_new_bank_f32_op77_t32 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE S3, SB, SC
; Spill gep_new_bank_f32_op77_t32 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE S3, SB, SC
    LI S3, -1
    DIV RV0, T4, S3
; Spill load_f32_op78_t33_resolved_bank_32_f32_op79 to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE S2, SB, SC
    MOD S2, T4, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op106_t42'
; Spill t35 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T3, SB, SC
; Computing new bank gep_new_bank_f32_op106_t42 = GP + bank_delta
    ADD T3, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f32_op106_t42)
    ADD T4, S2, R0
; GEP: Setting bank info for t42 to Dynamic("gep_new_bank_f32_op106_t42")
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(42), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(42), bank: Mixed })
; LOAD: Pointer t42 has bank info: Dynamic("gep_new_bank_f32_op106_t42")
    LI RV0, -1
    BEQ T3, RV0, L_bc_d4fdecde_use_global
    LI S3, -2
    BEQ T3, S3, L_bc_d4fdecde_use_stack
    ADD T5, T3, R0
    BEQ R0, R0, L_bc_d4fdecde_done
L_bc_d4fdecde_use_global:
    ADD T5, GP, R0
    BEQ R0, R0, L_bc_d4fdecde_done
L_bc_d4fdecde_use_stack:
    ADD T5, SB, R0
L_bc_d4fdecde_done:
; LOAD: Using bank register T5 for load
    LOAD S2, T5, T4
; Spill live registers before call
; Spill t36 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE T2, SB, SC
; Spill gep_new_bank_f32_op91_t36 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE T0, SB, SC
; Spill gep_new_bank_f32_op91_t36 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE T0, SB, SC
; Spill load_f32_op92_t37_resolved_bank_32_f32_op93 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE S1, SB, SC
; Spill load_f32_op96_t38_addr to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE S0, SB, SC
; Spill t41 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE T1, SB, SC
; Spill t42 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE T4, SB, SC
; Spill gep_new_bank_f32_op106_t42 to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T3, SB, SC
; Spill gep_new_bank_f32_op106_t42 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE T3, SB, SC
; Spill load_f32_op107_t43_resolved_bank_32_f32_op108 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T5, SB, SC
; Spill t43 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S2, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t44
; Spill live registers before call
; Spill t44 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, RV0, R0
    ADD A1, RV1, R0
; Call function puts
    CALL puts
; Scalar return value for t45
    LI T7, 2626
    LI S3, -1
; Spill live registers before call
; Spill t45 to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE RV0, SB, SC
; Spill const_f32_op111_2626 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op112 to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, S3, R0
; Call function puts
    CALL puts
; Scalar return value for t46
    BEQ R0, R0, L_show_word_definition_292
; Unconditional branch to L_show_word_definition_292
L_show_word_definition_291:
; Load instruction: t47 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op113_t47 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD T2, FP, R0
    ADDI T2, T2, 3
    LOAD T0, SB, T2
    LI S1, 1853
    ADD T6, T0, R0
    ADD S0, S1, T6
; Runtime bank overflow calculation for dynamic GEP
    LI T4, -1
    DIV T1, S0, T4
    MOD T3, S0, T4
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op120_t48'
; Computing new bank gep_new_bank_f32_op120_t48 = GP + bank_delta
    ADD T5, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f32_op120_t48)
    ADD S0, T3, R0
; GEP: Setting bank info for t48 to Dynamic("gep_new_bank_f32_op120_t48")
; Load instruction: t49 = load FatPtr(FatPointer { addr: Temp(48), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(48), bank: Mixed })
; LOAD: Pointer t48 has bank info: Dynamic("gep_new_bank_f32_op120_t48")
    LI T7, -1
    BEQ T5, T7, L_bc_7659b928_use_global
    LI S3, -2
    BEQ T5, S3, L_bc_7659b928_use_stack
    ADD S2, T5, R0
    BEQ R0, R0, L_bc_7659b928_done
L_bc_7659b928_use_global:
    ADD S2, GP, R0
    BEQ R0, R0, L_bc_7659b928_done
L_bc_7659b928_use_stack:
    ADD S2, SB, R0
L_bc_7659b928_done:
; LOAD: Using bank register S2 for load
    LOAD T6, S2, S0
    LI T1, 10000
    SLT T4, T6, T1
    LI T3, 1
    SUB T6, T3, T4
    BEQ T6, R0, L_show_word_definition_295
; Branch to L_show_word_definition_295 if condition is false
    BEQ R0, R0, L_show_word_definition_293
; Unconditional branch to L_show_word_definition_293 (condition was true)
; Invalidated 1 alloca bindings
L_show_word_definition_293:
; Load instruction: t51 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op127_t51 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD S1, FP, R0
    ADDI S1, S1, 3
    LOAD T7, SB, S1
    LI S3, 1853
    ADD T3, T7, R0
    ADD T4, S3, T3
; Runtime bank overflow calculation for dynamic GEP
    LI T6, -1
    DIV T1, T4, T6
    MOD T2, T4, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f32_op134_t52'
; Spill t46 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE RV0, SB, SC
; Computing new bank gep_new_bank_f32_op134_t52 = GP + bank_delta
    ADD RV0, GP, T1
; Result bank tracked as Dynamic(gep_new_bank_f32_op134_t52)
    ADD T4, T2, R0
; GEP: Setting bank info for t52 to Dynamic("gep_new_bank_f32_op134_t52")
; Load instruction: t53 = load FatPtr(FatPointer { addr: Temp(52), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(52), bank: Mixed })
; LOAD: Pointer t52 has bank info: Dynamic("gep_new_bank_f32_op134_t52")
    LI T1, -1
    BEQ RV0, T1, L_bc_6d8e86c5_use_global
    LI T6, -2
    BEQ RV0, T6, L_bc_6d8e86c5_use_stack
    ADD T3, RV0, R0
    BEQ R0, R0, L_bc_6d8e86c5_done
L_bc_6d8e86c5_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_6d8e86c5_done
L_bc_6d8e86c5_use_stack:
    ADD T3, SB, R0
L_bc_6d8e86c5_done:
; LOAD: Using bank register T3 for load
    LOAD T2, T3, T4
    LI S3, 10000
    SUB T2, T2, S3
; Spill live registers before call
; Spill t47 to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE T0, SB, SC
; Spill t48 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE S0, SB, SC
; Spill gep_new_bank_f32_op120_t48 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE T5, SB, SC
; Spill gep_new_bank_f32_op120_t48 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE T5, SB, SC
; Spill load_f32_op121_t49_resolved_bank_32_f32_op122 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE S2, SB, SC
; Spill t51 to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE T7, SB, SC
; Spill t52 to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE T4, SB, SC
; Spill gep_new_bank_f32_op134_t52 to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE RV0, SB, SC
; Spill gep_new_bank_f32_op134_t52 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE RV0, SB, SC
; Spill load_f32_op135_t53_resolved_bank_32_f32_op136 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE T3, SB, SC
; Spill t54 to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function print_num
    CALL print_num
    LI T1, 32
; Spill live registers before call
; Spill const_f32_op139_32 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE T1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_show_word_definition_295
; Unconditional branch to L_show_word_definition_295
L_show_word_definition_295:
    BEQ R0, R0, L_show_word_definition_292
; Unconditional branch to L_show_word_definition_292
L_show_word_definition_292:
; Load instruction: t55 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op140_t55 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t22 at FP+3
    ADD T6, FP, R0
    ADDI T6, T6, 3
    LOAD S3, SB, T6
    LI T0, 0
    ADD S3, S3, T0
; Load instruction: t57 = load FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(22), bank: Stack })
; LOAD: Pointer load_src_ptr_f32_op142_t57 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, T6
    LI T5, 1
    ADD S0, S0, T5
    STORE S0, SB, T6
    BEQ R0, R0, L_show_word_definition_287
; Unconditional branch to L_show_word_definition_287
; Invalidated 1 alloca bindings
L_show_word_definition_289:
    LI S2, 2628
    LI S1, -1
; Spill live registers before call
; Spill t56 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE S3, SB, SC
; Spill t58 to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE S0, SB, SC
; Spill const_f32_op145_2628 to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE S2, SB, SC
; Spill call_arg_fp_global_tag_32_f32_op146 to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, S1, R0
; Call function puts
    CALL puts
; Scalar return value for t59
    BEQ R0, R0, L_show_word_definition_286
; Unconditional branch to L_show_word_definition_286
L_show_word_definition_286:
    LI T7, 10
; Spill live registers before call
; Spill t59 to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE RV0, SB, SC
; Spill const_f32_op147_10 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
; Jump to epilogue
    BEQ R0, R0, L_show_word_definition_99999
L_show_word_definition_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
process_word:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 14 slots for locals
    ADDI SP, SP, 14
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
L_process_word_296:
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADDI S1, S2, 1
    STORE A1, SB, S1
; Load instruction: t2 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op5_t2 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, S2
    ADDI T7, S2, 1
    LOAD T6, SB, T7
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI T5, 2630
    LI T4, -1
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE S3, SB, SC
; Spill t2 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S0, SB, SC
; Spill load_f34_op8_t2_bank_val to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE T6, SB, SC
; Spill load_f34_op8_t2_bank_val to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T6, SB, SC
; Spill const_f34_op9_2630 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_34_f34_op10 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T4, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T6, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, T4, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t3
    BEQ RV0, R0, L_process_word_299
; Branch to L_process_word_299 if condition is false
    BEQ R0, R0, L_process_word_297
; Unconditional branch to L_process_word_297 (condition was true)
L_process_word_297:
    LI T3, 1
    LI T2, 2354
    STORE T3, GP, T2
; Jump to epilogue
    BEQ R0, R0, L_process_word_99999
    BEQ R0, R0, L_process_word_299
; Unconditional branch to L_process_word_299
L_process_word_299:
; Load instruction: t4 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op14_t4 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T1, FP, R0
    LOAD T0, SB, T1
    ADDI S1, T1, 1
    LOAD T7, SB, S1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S3, 2632
    LI S2, -1
; Spill live registers before call
; Spill t4 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T0, SB, SC
; Spill load_f34_op17_t4_bank_val to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T7, SB, SC
; Spill load_f34_op17_t4_bank_val to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T7, SB, SC
; Spill const_f34_op18_2632 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_34_f34_op19 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE S2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S3, R0
    ADD A3, S2, R0
; Call function str_eq
    CALL str_eq
; Scalar return value for t5
    BEQ RV0, R0, L_process_word_302
; Branch to L_process_word_302 if condition is false
    BEQ R0, R0, L_process_word_300
; Unconditional branch to L_process_word_300 (condition was true)
L_process_word_300:
; Load instruction: t6 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI S0, 2354
; LOAD: Pointer load_src_ptr_f34_op21_t6 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, S0
    BEQ T6, R0, L_process_word_305
; Branch to L_process_word_305 if condition is false
    BEQ R0, R0, L_process_word_303
; Unconditional branch to L_process_word_303 (condition was true)
L_process_word_303:
; Load instruction: t7 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI T5, 2353
; LOAD: Pointer load_src_ptr_f34_op24_t7 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T5
    LI T3, 0
    ADD T4, T4, T3
; Load instruction: t9 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI T2, 2353
; LOAD: Pointer load_src_ptr_f34_op27_t9 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S1, GP, T2
    LI T1, 1
    ADD S1, S1, T1
    LI T0, 2353
    STORE S1, GP, T0
    LI T7, 1853
    ADD S2, T4, R0
    ADD S3, T7, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T6, -1
    DIV RV0, S3, T6
    MOD T3, S3, T6
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f34_op36_t11'
; Computing new bank gep_new_bank_f34_op36_t11 = GP + bank_delta
    ADD T1, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f34_op36_t11)
    ADD S3, T3, R0
; GEP: Setting bank info for t11 to Dynamic("gep_new_bank_f34_op36_t11")
    LI T0, 0
    LI S2, 1
    SUB T0, T0, S2
    LI T6, -1
    BEQ T1, T6, L_bc_6ef11d47_use_global
    LI T3, -2
    BEQ T1, T3, L_bc_6ef11d47_use_stack
    ADD RV0, T1, R0
    BEQ R0, R0, L_bc_6ef11d47_done
L_bc_6ef11d47_use_global:
    ADD RV0, GP, R0
    BEQ R0, R0, L_bc_6ef11d47_done
L_bc_6ef11d47_use_stack:
    ADD RV0, SB, R0
L_bc_6ef11d47_done:
    STORE T0, RV0, S3
    LI T7, 0
    LI S2, 2354
    STORE T7, GP, S2
    BEQ R0, R0, L_process_word_305
; Unconditional branch to L_process_word_305
L_process_word_305:
; Jump to epilogue
    BEQ R0, R0, L_process_word_99999
    BEQ R0, R0, L_process_word_302
; Unconditional branch to L_process_word_302
L_process_word_302:
    ADD T6, FP, R0
    ADDI T6, T6, 2
; Load instruction: t14 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op44_t14 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T3, FP, R0
    LOAD T7, SB, T3
    ADDI S2, T3, 1
; Spill load_f34_op20_t6_addr to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE S0, SB, SC
    LOAD S0, SB, S2
; Bank value in S0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill load_f34_op23_t7_addr to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T5, SB, SC
; Spill load_f34_op26_t9_addr to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T2, SB, SC
; Spill t10 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S1, SB, SC
; Spill t8 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T4, SB, SC
; Spill t12 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T0, SB, SC
; Spill t11 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S3, SB, SC
; Spill gep_new_bank_f34_op36_t11 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T1, SB, SC
; Spill gep_new_bank_f34_op36_t11 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T1, SB, SC
; Spill store_f34_op37_resolved_bank_34_f34_op38 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE RV0, SB, SC
; Spill t14 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T7, SB, SC
; Spill load_f34_op47_t14_bank_val to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE S0, SB, SC
; Spill load_f34_op47_t14_bank_val to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, S0, R0
; Call function find_word
    CALL find_word
; Scalar return value for t15
; Recompute alloca t13 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
    STORE RV0, SB, S2
; Load instruction: t16 = load FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op49_t16 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T5, SB, S2
    LI T2, 0
    SLT S1, T5, T2
    LI T4, 1
    SUB T5, T4, S1
    BEQ T5, R0, L_process_word_307
; Branch to L_process_word_307 if condition is false
    BEQ R0, R0, L_process_word_306
; Unconditional branch to L_process_word_306 (condition was true)
; Invalidated 1 alloca bindings
L_process_word_306:
; Load instruction: t18 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI T0, 2354
; LOAD: Pointer load_src_ptr_f34_op54_t18 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T0
    BEQ S3, R0, L_process_word_310
; Branch to L_process_word_310 if condition is false
    BEQ R0, R0, L_process_word_309
; Unconditional branch to L_process_word_309 (condition was true)
L_process_word_309:
; Load instruction: t19 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI T1, 2353
; LOAD: Pointer load_src_ptr_f34_op57_t19 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T6, GP, T1
    LI T3, 0
    ADD T6, T6, T3
; Load instruction: t21 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI T7, 2353
; LOAD: Pointer load_src_ptr_f34_op60_t21 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S0, GP, T7
    LI S1, 1
    ADD S0, S0, S1
    LI T4, 2353
    STORE S0, GP, T4
    LI T2, 1853
    ADD S2, T6, R0
    ADD T5, T2, S2
; Runtime bank overflow calculation for dynamic GEP
    LI T3, -1
    DIV S3, T5, T3
    MOD S1, T5, T3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f34_op69_t23'
; Computing new bank gep_new_bank_f34_op69_t23 = GP + bank_delta
    ADD T4, GP, S3
; Result bank tracked as Dynamic(gep_new_bank_f34_op69_t23)
    ADD T5, S1, R0
; GEP: Setting bank info for t23 to Dynamic("gep_new_bank_f34_op69_t23")
; Load instruction: t24 = load FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op70_t24 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t13 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
    LOAD S3, SB, S2
    LI S1, -1
    BEQ T4, S1, L_bc_113c74d6_use_global
    LI T2, -2
    BEQ T4, T2, L_bc_113c74d6_use_stack
    ADD T3, T4, R0
    BEQ R0, R0, L_bc_113c74d6_done
L_bc_113c74d6_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_113c74d6_done
L_bc_113c74d6_use_stack:
    ADD T3, SB, R0
L_bc_113c74d6_done:
    STORE S3, T3, T5
    BEQ R0, R0, L_process_word_311
; Unconditional branch to L_process_word_311
; Invalidated 1 alloca bindings
L_process_word_310:
; Load instruction: t25 = load FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(13), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op76_t25 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t13 at FP+2
    ADD S1, FP, R0
    ADDI S1, S1, 2
    LOAD T2, SB, S1
; Spill live registers before call
; Spill t15 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE RV0, SB, SC
; Spill load_f34_op53_t18_addr to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T0, SB, SC
; Spill load_f34_op56_t19_addr to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T1, SB, SC
; Spill load_f34_op59_t21_addr to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE T7, SB, SC
; Spill t22 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE S0, SB, SC
; Spill t20 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE T6, SB, SC
; Spill t24 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE S3, SB, SC
; Spill t23 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE T5, SB, SC
; Spill gep_new_bank_f34_op69_t23 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T4, SB, SC
; Spill gep_new_bank_f34_op69_t23 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T4, SB, SC
; Spill store_f34_op72_resolved_bank_34_f34_op73 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T3, SB, SC
; Spill t25 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T2, R0
; Call function execute
    CALL execute
    BEQ R0, R0, L_process_word_311
; Unconditional branch to L_process_word_311
L_process_word_311:
    BEQ R0, R0, L_process_word_308
; Unconditional branch to L_process_word_308
L_process_word_307:
    ADD S2, FP, R0
    ADDI S2, S2, 3
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op78_t27 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD RV0, FP, R0
    LOAD T0, SB, RV0
    ADDI T1, RV0, 1
    LOAD T7, SB, T1
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
    LI S0, -2
; Spill live registers before call
; Spill t27 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T0, SB, SC
; Spill load_f34_op81_t27_bank_val to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T7, SB, SC
; Spill load_f34_op81_t27_bank_val to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T7, SB, SC
; Spill call_arg_fp_stack_tag_34_f34_op82 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE S0, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T0, R0
    ADD A1, T7, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, S2, R0
    ADD A3, S0, R0
; Call function parse_num
    CALL parse_num
; Scalar return value for t28
    BEQ RV0, R0, L_process_word_313
; Branch to L_process_word_313 if condition is false
    BEQ R0, R0, L_process_word_312
; Unconditional branch to L_process_word_312 (condition was true)
L_process_word_312:
; Load instruction: t29 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI T6, 2354
; LOAD: Pointer load_src_ptr_f34_op84_t29 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T6
    BEQ S3, R0, L_process_word_316
; Branch to L_process_word_316 if condition is false
    BEQ R0, R0, L_process_word_315
; Unconditional branch to L_process_word_315 (condition was true)
L_process_word_315:
; Load instruction: t30 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI T5, 2353
; LOAD: Pointer load_src_ptr_f34_op87_t30 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T5
    LI T3, 0
    ADD T4, T4, T3
; Load instruction: t32 = load FatPtr(FatPointer { addr: Global("here"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("here"), bank: Global })
    LI S1, 2353
; LOAD: Pointer load_src_ptr_f34_op90_t32 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, S1
    LI T1, 1
    ADD T2, T2, T1
    LI T0, 2353
    STORE T2, GP, T0
    LI T7, 1853
    ADD S0, T4, R0
    ADD S2, T7, S0
; Runtime bank overflow calculation for dynamic GEP
    LI S3, -1
    DIV RV0, S2, S3
    MOD T3, S2, S3
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f34_op99_t34'
; Computing new bank gep_new_bank_f34_op99_t34 = GP + bank_delta
    ADD T1, GP, RV0
; Result bank tracked as Dynamic(gep_new_bank_f34_op99_t34)
    ADD S2, T3, R0
; GEP: Setting bank info for t34 to Dynamic("gep_new_bank_f34_op99_t34")
; Load instruction: t35 = load FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op100_t35 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t26 at FP+3
    ADD T0, FP, R0
    ADDI T0, T0, 3
    LOAD S0, SB, T0
    LI RV0, 10000
    ADD S0, S0, RV0
    LI T3, -1
    BEQ T1, T3, L_bc_75be0fe0_use_global
    LI T7, -2
    BEQ T1, T7, L_bc_75be0fe0_use_stack
    ADD S3, T1, R0
    BEQ R0, R0, L_bc_75be0fe0_done
L_bc_75be0fe0_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_75be0fe0_done
L_bc_75be0fe0_use_stack:
    ADD S3, SB, R0
L_bc_75be0fe0_done:
    STORE S0, S3, S2
    BEQ R0, R0, L_process_word_317
; Unconditional branch to L_process_word_317
; Invalidated 1 alloca bindings
L_process_word_316:
; Load instruction: t37 = load FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op106_t37 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t26 at FP+3
    ADD RV0, FP, R0
    ADDI RV0, RV0, 3
    LOAD T3, SB, RV0
; Spill live registers before call
; Spill load_f34_op83_t29_addr to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE T6, SB, SC
; Spill load_f34_op86_t30_addr to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE T5, SB, SC
; Spill load_f34_op89_t32_addr to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE S1, SB, SC
; Spill t33 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE T2, SB, SC
; Spill t31 to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE T4, SB, SC
; Spill t36 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE S0, SB, SC
; Spill t34 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE S2, SB, SC
; Spill gep_new_bank_f34_op99_t34 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE T1, SB, SC
; Spill gep_new_bank_f34_op99_t34 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T1, SB, SC
; Spill store_f34_op102_resolved_bank_34_f34_op103 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE S3, SB, SC
; Spill t37 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE T3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T3, R0
; Call function push
    CALL push
    BEQ R0, R0, L_process_word_317
; Unconditional branch to L_process_word_317
L_process_word_317:
    BEQ R0, R0, L_process_word_314
; Unconditional branch to L_process_word_314
L_process_word_313:
; Load instruction: t38 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI T7, 2354
; LOAD: Pointer load_src_ptr_f34_op109_t38 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T7
    LI T6, 1
    XOR T5, T0, T6
    LI S1, 1
    SLTU T0, T5, S1
    BEQ T0, R0, L_process_word_319
; Branch to L_process_word_319 if condition is false
    BEQ R0, R0, L_process_word_318
; Unconditional branch to L_process_word_318 (condition was true)
L_process_word_318:
; Load instruction: t40 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T2, 1852
; LOAD: Pointer load_src_ptr_f34_op114_t40 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, T2
    LI S0, 50
    SLT T4, T4, S0
    BEQ T4, R0, L_process_word_323
; Branch to L_process_word_323 if condition is false
    BEQ R0, R0, L_process_word_321
; Unconditional branch to L_process_word_321 (condition was true)
L_process_word_321:
    ADD S2, FP, R0
    ADDI S2, S2, 4
; Load instruction: t43 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f34_op117_t43 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD S3, GP, T1
; Spill live registers before call
; Spill load_f34_op108_t38_addr to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T7, SB, SC
; Spill load_f34_op113_t40_addr to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE T2, SB, SC
; Spill load_f34_op116_t43_addr to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T1, SB, SC
; Spill t43 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S3, R0
; Call function get_dict_name
    CALL get_dict_name
; Fat pointer return value for t44
; Recompute alloca t42 at FP+4
    ADD T3, FP, R0
    ADDI T3, T3, 4
    STORE RV0, SB, T3
    ADDI T5, T3, 1
    STORE RV1, SB, T5
; Load instruction: t45 = load FatPtr(FatPointer { addr: Temp(42), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(42), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op121_t45 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, T3
    ADDI T6, T3, 1
    LOAD T0, SB, T6
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t46 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op125_t46 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD S0, FP, R0
    LOAD T4, SB, S0
    ADDI T7, S0, 1
    LOAD T2, SB, T7
; Bank value in T2 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t44 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE RV0, SB, SC
; Spill t45 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE S1, SB, SC
; Spill load_f34_op124_t45_bank_val to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE T0, SB, SC
; Spill load_f34_op124_t45_bank_val to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE T0, SB, SC
; Spill t46 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE T4, SB, SC
; Spill load_f34_op128_t46_bank_val to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE T2, SB, SC
; Spill load_f34_op128_t46_bank_val to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE T2, SB, SC
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, T0, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T4, R0
    ADD A3, T2, R0
; Call function str_copy
    CALL str_copy
; Load instruction: t47 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI S2, 1852
; LOAD: Pointer load_src_ptr_f34_op130_t47 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T1, GP, S2
    LI S3, 1752
    ADD T6, T1, R0
    ADD T5, S3, T6
; Runtime bank overflow calculation for dynamic GEP
    LI RV0, -1
    DIV T7, T5, RV0
    MOD T3, T5, RV0
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f34_op137_t48'
; Computing new bank gep_new_bank_f34_op137_t48 = GP + bank_delta
    ADD S0, GP, T7
; Result bank tracked as Dynamic(gep_new_bank_f34_op137_t48)
    ADD T5, T3, R0
; GEP: Setting bank info for t48 to Dynamic("gep_new_bank_f34_op137_t48")
    LI S1, 0
    LI T4, -1
    BEQ S0, T4, L_bc_10206fea_use_global
    LI T2, -2
    BEQ S0, T2, L_bc_10206fea_use_stack
    ADD T0, S0, R0
    BEQ R0, R0, L_bc_10206fea_done
L_bc_10206fea_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_10206fea_done
L_bc_10206fea_use_stack:
    ADD T0, SB, R0
L_bc_10206fea_done:
    STORE S1, T0, T5
; Load instruction: t49 = load Global("dict_count")
; Canonicalizing global variable: dict_count
    LI T6, 1852
; LOAD: Pointer load_src_ptr_f34_op144_t49 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T7, GP, T6
    LI RV0, 1802
    ADD S3, T7, R0
    ADD T3, RV0, S3
; Runtime bank overflow calculation for dynamic GEP
    LI T2, -1
    DIV T4, T3, T2
    MOD S1, T3, T2
; Base bank info: Global
; Clearing binding for 'gep_new_bank_f34_op151_t50'
; Spill load_f34_op129_t47_addr to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE S2, SB, SC
; Computing new bank gep_new_bank_f34_op151_t50 = GP + bank_delta
    ADD S2, GP, T4
; Result bank tracked as Dynamic(gep_new_bank_f34_op151_t50)
    ADD T3, S1, R0
; GEP: Setting bank info for t50 to Dynamic("gep_new_bank_f34_op151_t50")
; Load instruction: t51 = load Global("here")
; Canonicalizing global variable: here
    LI S3, 2353
; LOAD: Pointer load_src_ptr_f34_op153_t51 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T4, GP, S3
    LI S1, -1
    BEQ S2, S1, L_bc_55d3c423_use_global
    LI RV0, -2
    BEQ S2, RV0, L_bc_55d3c423_use_stack
    ADD T2, S2, R0
    BEQ R0, R0, L_bc_55d3c423_done
L_bc_55d3c423_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_55d3c423_done
L_bc_55d3c423_use_stack:
    ADD T2, SB, R0
L_bc_55d3c423_done:
    STORE T4, T2, T3
; Load instruction: t52 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI S1, 1852
; LOAD: Pointer load_src_ptr_f34_op160_t52 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD RV0, GP, S1
; Spill t47 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE T1, SB, SC
    LI T1, 0
    ADD RV0, RV0, T1
; Load instruction: t54 = load FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Global("dict_count"), bank: Global })
    LI T1, 1852
; LOAD: Pointer load_src_ptr_f34_op163_t54 has bank info: Global
; LOAD: Using bank register Gp for load
; Spill t48 to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE T5, SB, SC
; Spill gep_new_bank_f34_op137_t48 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE S0, SB, SC
    LOAD T5, GP, T1
; Spill gep_new_bank_f34_op137_t48 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE S0, SB, SC
    LI S0, 1
    ADD T5, T5, S0
    LI S0, 1852
    STORE T5, GP, S0
    LI S0, 2
; Spill store_f34_op139_resolved_bank_34_f34_op140 to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE T0, SB, SC
    LI T0, 2354
    STORE S0, GP, T0
    BEQ R0, R0, L_process_word_323
; Unconditional branch to L_process_word_323
L_process_word_323:
    BEQ R0, R0, L_process_word_320
; Unconditional branch to L_process_word_320
L_process_word_319:
    LI S0, 2634
    LI T0, -1
; Spill live registers before call
; Spill load_f34_op143_t49_addr to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE T6, SB, SC
; Spill t49 to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE T7, SB, SC
; Spill load_f34_op152_t51_addr to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE S3, SB, SC
; Spill t51 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE T4, SB, SC
; Spill t50 to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE T3, SB, SC
; Spill gep_new_bank_f34_op151_t50 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE S2, SB, SC
; Spill gep_new_bank_f34_op151_t50 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE S2, SB, SC
; Spill store_f34_op155_resolved_bank_34_f34_op156 to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE T2, SB, SC
; Spill load_f34_op159_t52_addr to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE S1, SB, SC
; Spill t53 to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE RV0, SB, SC
; Spill load_f34_op162_t54_addr to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE T1, SB, SC
; Spill t55 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE T5, SB, SC
; Spill const_f34_op170_2634 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE S0, SB, SC
; Spill call_arg_fp_global_tag_34_f34_op171 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S0, R0
    ADD A1, T0, R0
; Call function puts
    CALL puts
; Scalar return value for t56
; Load instruction: t57 = load FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(1), bank: Stack })
; LOAD: Pointer load_src_ptr_f34_op172_t57 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t1 at FP+0
    ADD T6, FP, R0
    LOAD T7, SB, T6
    ADDI S3, T6, 1
    LOAD T4, SB, S3
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Spill live registers before call
; Spill t56 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE RV0, SB, SC
; Spill t57 to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE T7, SB, SC
; Spill load_f34_op175_t57_bank_val to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE T4, SB, SC
; Spill load_f34_op175_t57_bank_val to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, T4, R0
; Call function puts
    CALL puts
; Scalar return value for t58
    BEQ R0, R0, L_process_word_320
; Unconditional branch to L_process_word_320
L_process_word_320:
    BEQ R0, R0, L_process_word_314
; Unconditional branch to L_process_word_314
L_process_word_314:
    BEQ R0, R0, L_process_word_308
; Unconditional branch to L_process_word_308
L_process_word_308:
; Jump to epilogue
    BEQ R0, R0, L_process_word_99999
L_process_word_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
get_word:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 16 slots for locals
    ADDI SP, SP, 16
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 1 bank from A3
; Load param 2 from FP-7
    ADDI SC, FP, -7
    LOAD S1, SB, SC
; Load param 2 bank from FP-8
    ADDI SC, FP, -8
    LOAD S0, SB, SC
L_get_word_324:
    ADD T7, FP, R0
    STORE S3, SB, T7
    ADDI T6, T7, 1
    STORE A1, SB, T6
    ADD T5, FP, R0
    ADDI T5, T5, 2
    STORE S2, SB, T5
    ADDI T4, T5, 1
    STORE A3, SB, T4
    ADD T3, FP, R0
    ADDI T3, T3, 4
    STORE S1, SB, T3
    ADDI T2, T3, 1
    STORE S0, SB, T2
    ADD T1, FP, R0
    ADDI T1, T1, 6
    LI T0, 0
    STORE T0, SB, T1
    BEQ R0, R0, L_get_word_325
; Unconditional branch to L_get_word_325
; Invalidated 4 alloca bindings
L_get_word_325:
; Load instruction: t7 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op18_t7 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD T6, FP, R0
    LOAD T4, SB, T6
    ADDI T2, T6, 1
    LOAD T0, SB, T2
; Bank value in T0 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t8 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op22_t8 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T1, FP, R0
    ADDI T1, T1, 2
    LOAD T3, SB, T1
    ADDI T5, T1, 1
    LOAD T7, SB, T5
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t9 = load FatPtr(FatPointer { addr: Temp(8), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(8), bank: Mixed })
; LOAD: Pointer t8 has bank info: Dynamic("load_f36_op25_t8_bank_val")
    LI T5, -1
    BEQ T7, T5, L_bc_4e8df526_use_global
; Spill param_bank_f36_op5_2 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S0, SB, SC
    LI S0, -2
    BEQ T7, S0, L_bc_4e8df526_use_stack
    ADD T2, T7, R0
    BEQ R0, R0, L_bc_4e8df526_done
L_bc_4e8df526_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_4e8df526_done
L_bc_4e8df526_use_stack:
    ADD T2, SB, R0
L_bc_4e8df526_done:
; LOAD: Using bank register T2 for load
    LOAD T5, T2, T3
; Spill t0 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S3, SB, SC
    ADD S3, T5, R0
    ADD S0, T4, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill t1 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S2, SB, SC
; Spill t2 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE S1, SB, SC
    LI S1, -1
    DIV S2, S0, S1
    MOD T6, S0, S1
; Base bank info: Dynamic("load_f36_op21_t7_bank_val")
; Clearing binding for 'gep_new_bank_f36_op34_t10'
; Computing new bank gep_new_bank_f36_op34_t10 = load_f36_op21_t7_bank_val + bank_delta
    ADD T1, T0, S2
; Result bank tracked as Dynamic(gep_new_bank_f36_op34_t10)
    ADD S0, T6, R0
; GEP: Setting bank info for t10 to Dynamic("gep_new_bank_f36_op34_t10")
; Load instruction: t11 = load FatPtr(FatPointer { addr: Temp(10), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(10), bank: Mixed })
; LOAD: Pointer t10 has bank info: Dynamic("gep_new_bank_f36_op34_t10")
    LI S2, -1
    BEQ T1, S2, L_bc_c9422879_use_global
    LI S1, -2
    BEQ T1, S1, L_bc_c9422879_use_stack
    ADD S3, T1, R0
    BEQ R0, R0, L_bc_c9422879_done
L_bc_c9422879_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_c9422879_done
L_bc_c9422879_use_stack:
    ADD S3, SB, R0
L_bc_c9422879_done:
; LOAD: Using bank register S3 for load
    LOAD T6, S3, S0
    LI S2, 32
    XOR S1, T6, S2
; Spill t8 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T3, SB, SC
; Spill load_f36_op25_t8_bank_val to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T7, SB, SC
    LI T3, 1
    SLTU T6, S1, T3
; Load instruction: t13 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op41_t13 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD S1, FP, R0
    LOAD T3, SB, S1
    ADDI S2, S1, 1
; Spill load_f36_op25_t8_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T7, SB, SC
    LOAD T7, SB, S2
; Bank value in T7 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t14 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op45_t14 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD S2, FP, R0
    ADDI S2, S2, 2
; Spill load_f36_op26_t9_resolved_bank_36_f36_op27 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 23
    STORE T2, SB, SC
    LOAD T2, SB, S2
; Spill t7 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 24
    STORE T4, SB, SC
; Spill load_f36_op21_t7_bank_val to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 25
    STORE T0, SB, SC
    ADDI T4, S2, 1
; Spill t9 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 26
    STORE T5, SB, SC
    LOAD T5, SB, T4
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t15 = load FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Mixed })
; LOAD: Pointer t14 has bank info: Dynamic("load_f36_op48_t14_bank_val")
; Spill load_f36_op21_t7_bank_val to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 27
    STORE T0, SB, SC
    LI T0, -1
    BEQ T5, T0, L_bc_f523f449_use_global
; Spill t10 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 28
    STORE S0, SB, SC
; Spill gep_new_bank_f36_op34_t10 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 29
    STORE T1, SB, SC
    LI S0, -2
    BEQ T5, S0, L_bc_f523f449_use_stack
    ADD T4, T5, R0
    BEQ R0, R0, L_bc_f523f449_done
L_bc_f523f449_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_f523f449_done
L_bc_f523f449_use_stack:
    ADD T4, SB, R0
L_bc_f523f449_done:
; LOAD: Using bank register T4 for load
    LOAD T0, T4, T2
; Spill gep_new_bank_f36_op34_t10 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 30
    STORE T1, SB, SC
    ADD T1, T0, R0
    ADD S0, T3, T1
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op35_t11_resolved_bank_36_f36_op36 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 31
    STORE S3, SB, SC
; Spill t12 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 32
    STORE T6, SB, SC
    LI T6, -1
    DIV S3, S0, T6
    MOD S1, S0, T6
; Base bank info: Dynamic("load_f36_op44_t13_bank_val")
; Clearing binding for 'gep_new_bank_f36_op57_t16'
; Computing new bank gep_new_bank_f36_op57_t16 = load_f36_op44_t13_bank_val + bank_delta
    ADD S2, T7, S3
; Result bank tracked as Dynamic(gep_new_bank_f36_op57_t16)
    ADD S0, S1, R0
; GEP: Setting bank info for t16 to Dynamic("gep_new_bank_f36_op57_t16")
; Load instruction: t17 = load FatPtr(FatPointer { addr: Temp(16), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(16), bank: Mixed })
; LOAD: Pointer t16 has bank info: Dynamic("gep_new_bank_f36_op57_t16")
    LI S3, -1
    BEQ S2, S3, L_bc_e1489e9f_use_global
    LI T6, -2
    BEQ S2, T6, L_bc_e1489e9f_use_stack
    ADD T1, S2, R0
    BEQ R0, R0, L_bc_e1489e9f_done
L_bc_e1489e9f_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_e1489e9f_done
L_bc_e1489e9f_use_stack:
    ADD T1, SB, R0
L_bc_e1489e9f_done:
; LOAD: Using bank register T1 for load
    LOAD S1, T1, S0
    LI S3, 9
    XOR T6, S1, S3
; Spill t14 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 33
    STORE T2, SB, SC
; Spill load_f36_op48_t14_bank_val to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 34
    STORE T5, SB, SC
    LI T2, 1
    SLTU S1, T6, T2
; Reload t12 from slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 32
    LOAD T6, SB, SC
    OR T6, T6, S1
    BEQ T6, R0, L_get_word_327
; Branch to L_get_word_327 if condition is false
    BEQ R0, R0, L_get_word_326
; Unconditional branch to L_get_word_326 (condition was true)
L_get_word_326:
; Load instruction: t20 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op64_t20 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T2, FP, R0
    ADDI T2, T2, 2
    LOAD S3, SB, T2
    ADDI S1, T2, 1
    LOAD T6, SB, S1
; Bank value in T6 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t21 = load FatPtr(FatPointer { addr: Temp(20), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(20), bank: Mixed })
; LOAD: Pointer t20 has bank info: Dynamic("load_f36_op67_t20_bank_val")
; Spill load_f36_op48_t14_bank_val to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 35
    STORE T5, SB, SC
    LI T5, -1
    BEQ T6, T5, L_bc_62a87e99_use_global
; Spill load_f36_op49_t15_resolved_bank_36_f36_op50 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 36
    STORE T4, SB, SC
    LI T4, -2
    BEQ T6, T4, L_bc_62a87e99_use_stack
    ADD S1, T6, R0
    BEQ R0, R0, L_bc_62a87e99_done
L_bc_62a87e99_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_62a87e99_done
L_bc_62a87e99_use_stack:
    ADD S1, SB, R0
L_bc_62a87e99_done:
; LOAD: Using bank register S1 for load
    LOAD T5, S1, S3
    LI T4, 0
    ADD T5, T5, T4
; Load instruction: t23 = load FatPtr(FatPointer { addr: Temp(20), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(20), bank: Mixed })
; LOAD: Pointer t20 has bank info: Dynamic("load_f36_op67_t20_bank_val")
; Spill t13 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 37
    STORE T3, SB, SC
; Spill load_f36_op44_t13_bank_val to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 38
    STORE T7, SB, SC
    LI T3, -1
    BEQ T6, T3, L_bc_d2dc09b2_use_global
; Spill t15 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 39
    STORE T0, SB, SC
    LI T0, -2
    BEQ T6, T0, L_bc_d2dc09b2_use_stack
    ADD T4, T6, R0
    BEQ R0, R0, L_bc_d2dc09b2_done
L_bc_d2dc09b2_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_d2dc09b2_done
L_bc_d2dc09b2_use_stack:
    ADD T4, SB, R0
L_bc_d2dc09b2_done:
; LOAD: Using bank register T4 for load
    LOAD T3, T4, S3
    LI T0, 1
    ADD T3, T3, T0
; Spill load_f36_op44_t13_bank_val to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 40
    STORE T7, SB, SC
    LI T7, -1
    BEQ T6, T7, L_bc_829ba145_use_global
; Spill t16 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 41
    STORE S0, SB, SC
; Spill gep_new_bank_f36_op57_t16 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 42
    STORE S2, SB, SC
    LI S0, -2
    BEQ T6, S0, L_bc_829ba145_use_stack
    ADD T0, T6, R0
    BEQ R0, R0, L_bc_829ba145_done
L_bc_829ba145_use_global:
    ADD T0, GP, R0
    BEQ R0, R0, L_bc_829ba145_done
L_bc_829ba145_use_stack:
    ADD T0, SB, R0
L_bc_829ba145_done:
    STORE T3, T0, S3
    BEQ R0, R0, L_get_word_325
; Unconditional branch to L_get_word_325
; Invalidated 1 alloca bindings
L_get_word_327:
; Load instruction: t25 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op80_t25 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD T7, FP, R0
    LOAD S0, SB, T7
    ADDI T2, T7, 1
; Spill gep_new_bank_f36_op57_t16 to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 43
    STORE S2, SB, SC
    LOAD S2, SB, T2
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t26 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op84_t26 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T2, FP, R0
    ADDI T2, T2, 2
; Spill load_f36_op58_t17_resolved_bank_36_f36_op59 to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 44
    STORE T1, SB, SC
    LOAD T1, SB, T2
; Spill load_f36_op68_t21_resolved_bank_36_f36_op69 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 45
    STORE S1, SB, SC
    ADDI S1, T2, 1
; Spill t22 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 46
    STORE T5, SB, SC
    LOAD T5, SB, S1
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t27 = load FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(26), bank: Mixed })
; LOAD: Pointer t26 has bank info: Dynamic("load_f36_op87_t26_bank_val")
; Spill load_f36_op72_t23_resolved_bank_36_f36_op73 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 47
    STORE T4, SB, SC
    LI T4, -1
    BEQ T5, T4, L_bc_6da8be50_use_global
; Spill t24 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 48
    STORE T3, SB, SC
    LI T3, -2
    BEQ T5, T3, L_bc_6da8be50_use_stack
    ADD S1, T5, R0
    BEQ R0, R0, L_bc_6da8be50_done
L_bc_6da8be50_use_global:
    ADD S1, GP, R0
    BEQ R0, R0, L_bc_6da8be50_done
L_bc_6da8be50_use_stack:
    ADD S1, SB, R0
L_bc_6da8be50_done:
; LOAD: Using bank register S1 for load
    LOAD T4, S1, T1
; Spill t20 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 49
    STORE S3, SB, SC
; Spill load_f36_op67_t20_bank_val to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 50
    STORE T6, SB, SC
    ADD S3, T4, R0
    ADD T3, S0, S3
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op67_t20_bank_val to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 51
    STORE T6, SB, SC
; Spill store_f36_op76_resolved_bank_36_f36_op77 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 52
    STORE T0, SB, SC
    LI T0, -1
    DIV T6, T3, T0
    MOD T7, T3, T0
; Base bank info: Dynamic("load_f36_op83_t25_bank_val")
; Clearing binding for 'gep_new_bank_f36_op96_t28'
; Computing new bank gep_new_bank_f36_op96_t28 = load_f36_op83_t25_bank_val + bank_delta
    ADD T2, S2, T6
; Result bank tracked as Dynamic(gep_new_bank_f36_op96_t28)
    ADD T3, T7, R0
; GEP: Setting bank info for t28 to Dynamic("gep_new_bank_f36_op96_t28")
; Load instruction: t29 = load FatPtr(FatPointer { addr: Temp(28), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(28), bank: Mixed })
; LOAD: Pointer t28 has bank info: Dynamic("gep_new_bank_f36_op96_t28")
    LI T6, -1
    BEQ T2, T6, L_bc_b8ee03c3_use_global
    LI T0, -2
    BEQ T2, T0, L_bc_b8ee03c3_use_stack
    ADD S3, T2, R0
    BEQ R0, R0, L_bc_b8ee03c3_done
L_bc_b8ee03c3_use_global:
    ADD S3, GP, R0
    BEQ R0, R0, L_bc_b8ee03c3_done
L_bc_b8ee03c3_use_stack:
    ADD S3, SB, R0
L_bc_b8ee03c3_done:
; LOAD: Using bank register S3 for load
    LOAD T7, S3, T3
    LI T6, 0
    XOR T0, T7, T6
; Spill t26 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 53
    STORE T1, SB, SC
; Spill load_f36_op87_t26_bank_val to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 54
    STORE T5, SB, SC
    LI T1, 1
    SLTU T7, T0, T1
; Load instruction: t31 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op103_t31 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD T0, FP, R0
    LOAD T1, SB, T0
    ADDI T6, T0, 1
; Spill load_f36_op87_t26_bank_val to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 55
    STORE T5, SB, SC
    LOAD T5, SB, T6
; Bank value in T5 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t32 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op107_t32 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD T6, FP, R0
    ADDI T6, T6, 2
; Spill load_f36_op88_t27_resolved_bank_36_f36_op89 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 56
    STORE S1, SB, SC
    LOAD S1, SB, T6
; Spill t25 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 57
    STORE S0, SB, SC
; Spill load_f36_op83_t25_bank_val to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 58
    STORE S2, SB, SC
    ADDI S0, T6, 1
; Spill t27 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 59
    STORE T4, SB, SC
    LOAD T4, SB, S0
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t33 = load FatPtr(FatPointer { addr: Temp(32), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(32), bank: Mixed })
; LOAD: Pointer t32 has bank info: Dynamic("load_f36_op110_t32_bank_val")
; Spill load_f36_op83_t25_bank_val to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 60
    STORE S2, SB, SC
    LI S2, -1
    BEQ T4, S2, L_bc_596e23f5_use_global
; Spill t28 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 61
    STORE T3, SB, SC
; Spill gep_new_bank_f36_op96_t28 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 62
    STORE T2, SB, SC
    LI T3, -2
    BEQ T4, T3, L_bc_596e23f5_use_stack
    ADD S0, T4, R0
    BEQ R0, R0, L_bc_596e23f5_done
L_bc_596e23f5_use_global:
    ADD S0, GP, R0
    BEQ R0, R0, L_bc_596e23f5_done
L_bc_596e23f5_use_stack:
    ADD S0, SB, R0
L_bc_596e23f5_done:
; LOAD: Using bank register S0 for load
    LOAD S2, S0, S1
; Spill gep_new_bank_f36_op96_t28 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 63
    STORE T2, SB, SC
    ADD T2, S2, R0
    ADD T3, T1, T2
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op97_t29_resolved_bank_36_f36_op98 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 64
    STORE S3, SB, SC
; Spill t30 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 65
    STORE T7, SB, SC
    LI T7, -1
    DIV S3, T3, T7
    MOD T0, T3, T7
; Base bank info: Dynamic("load_f36_op106_t31_bank_val")
; Clearing binding for 'gep_new_bank_f36_op119_t34'
; Computing new bank gep_new_bank_f36_op119_t34 = load_f36_op106_t31_bank_val + bank_delta
    ADD T6, T5, S3
; Result bank tracked as Dynamic(gep_new_bank_f36_op119_t34)
    ADD T3, T0, R0
; GEP: Setting bank info for t34 to Dynamic("gep_new_bank_f36_op119_t34")
; Load instruction: t35 = load FatPtr(FatPointer { addr: Temp(34), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(34), bank: Mixed })
; LOAD: Pointer t34 has bank info: Dynamic("gep_new_bank_f36_op119_t34")
    LI S3, -1
    BEQ T6, S3, L_bc_79690b75_use_global
    LI T7, -2
    BEQ T6, T7, L_bc_79690b75_use_stack
    ADD T2, T6, R0
    BEQ R0, R0, L_bc_79690b75_done
L_bc_79690b75_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_79690b75_done
L_bc_79690b75_use_stack:
    ADD T2, SB, R0
L_bc_79690b75_done:
; LOAD: Using bank register T2 for load
    LOAD T0, T2, T3
    LI S3, 10
    XOR T7, T0, S3
; Spill t32 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 66
    STORE S1, SB, SC
; Spill load_f36_op110_t32_bank_val to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 67
    STORE T4, SB, SC
    LI S1, 1
    SLTU T0, T7, S1
; Reload t30 from slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 65
    LOAD T7, SB, SC
    OR T7, T7, T0
    BEQ T7, R0, L_get_word_330
; Branch to L_get_word_330 if condition is false
    BEQ R0, R0, L_get_word_328
; Unconditional branch to L_get_word_328 (condition was true)
L_get_word_328:
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_get_word_99999
    BEQ R0, R0, L_get_word_330
; Unconditional branch to L_get_word_330
L_get_word_330:
    BEQ R0, R0, L_get_word_331
; Unconditional branch to L_get_word_331
L_get_word_331:
; Load instruction: t38 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op126_t38 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+6
    ADD S1, FP, R0
    ADDI S1, S1, 6
    LOAD S3, SB, S1
    LI T0, 31
    SLT S3, S3, T0
    BEQ S3, R0, L_get_word_333
; Branch to L_get_word_333 if condition is false
    BEQ R0, R0, L_get_word_332
; Unconditional branch to L_get_word_332 (condition was true)
; Invalidated 1 alloca bindings
L_get_word_332:
    ADD T7, FP, R0
    ADDI T7, T7, 7
; Load instruction: t41 = load FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(3), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op128_t41 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t3 at FP+0
    ADD T0, FP, R0
    LOAD S3, SB, T0
    ADDI S1, T0, 1
; Spill load_f36_op110_t32_bank_val to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 68
    STORE T4, SB, SC
    LOAD T4, SB, S1
; Bank value in T4 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t42 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op132_t42 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD S1, FP, R0
    ADDI S1, S1, 2
; Spill load_f36_op111_t33_resolved_bank_36_f36_op112 to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 69
    STORE S0, SB, SC
    LOAD S0, SB, S1
; Spill t31 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 70
    STORE T1, SB, SC
; Spill load_f36_op106_t31_bank_val to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 71
    STORE T5, SB, SC
    ADDI T1, S1, 1
; Spill t33 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 72
    STORE S2, SB, SC
    LOAD S2, SB, T1
; Bank value in S2 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t43 = load FatPtr(FatPointer { addr: Temp(42), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(42), bank: Mixed })
; LOAD: Pointer t42 has bank info: Dynamic("load_f36_op135_t42_bank_val")
; Spill load_f36_op106_t31_bank_val to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 73
    STORE T5, SB, SC
    LI T5, -1
    BEQ S2, T5, L_bc_d8a2ce67_use_global
; Spill t34 to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 74
    STORE T3, SB, SC
; Spill gep_new_bank_f36_op119_t34 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 75
    STORE T6, SB, SC
    LI T3, -2
    BEQ S2, T3, L_bc_d8a2ce67_use_stack
    ADD T1, S2, R0
    BEQ R0, R0, L_bc_d8a2ce67_done
L_bc_d8a2ce67_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_d8a2ce67_done
L_bc_d8a2ce67_use_stack:
    ADD T1, SB, R0
L_bc_d8a2ce67_done:
; LOAD: Using bank register T1 for load
    LOAD T5, T1, S0
; Spill gep_new_bank_f36_op119_t34 to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 76
    STORE T6, SB, SC
    ADD T6, T5, R0
    ADD T3, S3, T6
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op120_t35_resolved_bank_36_f36_op121 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 77
    STORE T2, SB, SC
    LI T7, -1
    DIV T2, T3, T7
    MOD T0, T3, T7
; Base bank info: Dynamic("load_f36_op131_t41_bank_val")
; Clearing binding for 'gep_new_bank_f36_op144_t44'
; Computing new bank gep_new_bank_f36_op144_t44 = load_f36_op131_t41_bank_val + bank_delta
    ADD S1, T4, T2
; Result bank tracked as Dynamic(gep_new_bank_f36_op144_t44)
    ADD T3, T0, R0
; GEP: Setting bank info for t44 to Dynamic("gep_new_bank_f36_op144_t44")
; Load instruction: t45 = load FatPtr(FatPointer { addr: Temp(44), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(44), bank: Mixed })
; LOAD: Pointer t44 has bank info: Dynamic("gep_new_bank_f36_op144_t44")
    LI T2, -1
    BEQ S1, T2, L_bc_8e12b53d_use_global
    LI T7, -2
    BEQ S1, T7, L_bc_8e12b53d_use_stack
    ADD T6, S1, R0
    BEQ R0, R0, L_bc_8e12b53d_done
L_bc_8e12b53d_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_8e12b53d_done
L_bc_8e12b53d_use_stack:
    ADD T6, SB, R0
L_bc_8e12b53d_done:
; LOAD: Using bank register T6 for load
    LOAD T0, T6, T3
; Recompute alloca t40 at FP+7
    ADD T2, FP, R0
    ADDI T2, T2, 7
    STORE T0, SB, T2
; Load instruction: t46 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op150_t46 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T7, SB, T2
; Spill t42 to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 78
    STORE S0, SB, SC
; Spill load_f36_op135_t42_bank_val to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 79
    STORE S2, SB, SC
    LI S0, 0
; Spill load_f36_op135_t42_bank_val to slot 64
    ADD SC, FP, R0
    ADDI SC, SC, 80
    STORE S2, SB, SC
    XOR S2, T7, S0
; Spill load_f36_op136_t43_resolved_bank_36_f36_op137 to slot 65
    ADD SC, FP, R0
    ADDI SC, SC, 81
    STORE T1, SB, SC
    LI T1, 1
    SLTU T7, S2, T1
; Load instruction: t48 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op154_t48 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T2
    LI T1, 32
    XOR S0, S2, T1
; Spill t41 to slot 66
    ADD SC, FP, R0
    ADDI SC, SC, 82
    STORE S3, SB, SC
; Spill load_f36_op131_t41_bank_val to slot 67
    ADD SC, FP, R0
    ADDI SC, SC, 83
    STORE T4, SB, SC
    LI S3, 1
    SLTU S2, S0, S3
    OR T7, T7, S2
; Load instruction: t51 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op158_t51 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S0, SB, T2
    LI S3, 9
    XOR T1, S0, S3
    LI S2, 1
    SLTU S0, T1, S2
    OR T7, T7, S0
; Load instruction: t54 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op162_t54 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, T2
    LI S2, 10
    XOR S3, T1, S2
    LI S0, 1
    SLTU T1, S3, S0
    OR T7, T7, T1
    BEQ T7, R0, L_get_word_336
; Branch to L_get_word_336 if condition is false
    BEQ R0, R0, L_get_word_334
; Unconditional branch to L_get_word_334 (condition was true)
; Invalidated 1 alloca bindings
L_get_word_334:
    BEQ R0, R0, L_get_word_333
; Unconditional branch to L_get_word_333
    BEQ R0, R0, L_get_word_336
; Unconditional branch to L_get_word_336
L_get_word_336:
; Load instruction: t57 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op166_t57 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+4
    ADD S3, FP, R0
    ADDI S3, S3, 4
    LOAD S0, SB, S3
    ADDI S2, S3, 1
    LOAD T1, SB, S2
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t58 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op170_t58 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+6
    ADD T7, FP, R0
    ADDI T7, T7, 6
    LOAD T2, SB, T7
; Spill t43 to slot 68
    ADD SC, FP, R0
    ADDI SC, SC, 84
    STORE T5, SB, SC
    ADD T5, T2, R0
    ADD S2, S0, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op131_t41_bank_val to slot 69
    ADD SC, FP, R0
    ADDI SC, SC, 85
    STORE T4, SB, SC
; Spill t44 to slot 70
    ADD SC, FP, R0
    ADDI SC, SC, 86
    STORE T3, SB, SC
; Spill gep_new_bank_f36_op144_t44 to slot 71
    ADD SC, FP, R0
    ADDI SC, SC, 87
    STORE S1, SB, SC
    LI T3, -1
    DIV T4, S2, T3
; Spill gep_new_bank_f36_op144_t44 to slot 72
    ADD SC, FP, R0
    ADDI SC, SC, 88
    STORE S1, SB, SC
    MOD S1, S2, T3
; Base bank info: Dynamic("load_f36_op169_t57_bank_val")
; Clearing binding for 'gep_new_bank_f36_op176_t59'
; Spill load_f36_op145_t45_resolved_bank_36_f36_op146 to slot 73
    ADD SC, FP, R0
    ADDI SC, SC, 89
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f36_op176_t59 = load_f36_op169_t57_bank_val + bank_delta
    ADD T6, T1, T4
; Result bank tracked as Dynamic(gep_new_bank_f36_op176_t59)
    ADD S2, S1, R0
; GEP: Setting bank info for t59 to Dynamic("gep_new_bank_f36_op176_t59")
; Load instruction: t60 = load FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(40), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op177_t60 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t40 at FP+7
    ADD T5, FP, R0
    ADDI T5, T5, 7
    LOAD T4, SB, T5
    LI S1, -1
    BEQ T6, S1, L_bc_4788923c_use_global
; Spill t45 to slot 74
    ADD SC, FP, R0
    ADDI SC, SC, 90
    STORE T0, SB, SC
    LI T0, -2
    BEQ T6, T0, L_bc_4788923c_use_stack
    ADD T3, T6, R0
    BEQ R0, R0, L_bc_4788923c_done
L_bc_4788923c_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_4788923c_done
L_bc_4788923c_use_stack:
    ADD T3, SB, R0
L_bc_4788923c_done:
    STORE T4, T3, S2
; Load instruction: t61 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op183_t61 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S1, SB, T7
    LI T0, 0
    ADD S1, S1, T0
; Load instruction: t63 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op185_t63 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T0, SB, T7
    LI S3, 1
    ADD T0, T0, S3
    STORE T0, SB, T7
; Load instruction: t65 = load FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(4), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op188_t65 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t4 at FP+2
    ADD S3, FP, R0
    ADDI S3, S3, 2
; Spill t57 to slot 75
    ADD SC, FP, R0
    ADDI SC, SC, 91
    STORE S0, SB, SC
; Spill load_f36_op169_t57_bank_val to slot 76
    ADD SC, FP, R0
    ADDI SC, SC, 92
    STORE T1, SB, SC
    LOAD S0, SB, S3
; Spill t58 to slot 77
    ADD SC, FP, R0
    ADDI SC, SC, 93
    STORE T2, SB, SC
    ADDI T2, S3, 1
; Spill load_f36_op169_t57_bank_val to slot 78
    ADD SC, FP, R0
    ADDI SC, SC, 94
    STORE T1, SB, SC
    LOAD T1, SB, T2
; Bank value in T1 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t66 = load FatPtr(FatPointer { addr: Temp(65), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(65), bank: Mixed })
; LOAD: Pointer t65 has bank info: Dynamic("load_f36_op191_t65_bank_val")
    LI T5, -1
    BEQ T1, T5, L_bc_ac677875_use_global
; Spill t60 to slot 79
    ADD SC, FP, R0
    ADDI SC, SC, 95
    STORE T4, SB, SC
    LI T4, -2
    BEQ T1, T4, L_bc_ac677875_use_stack
    ADD T2, T1, R0
    BEQ R0, R0, L_bc_ac677875_done
L_bc_ac677875_use_global:
    ADD T2, GP, R0
    BEQ R0, R0, L_bc_ac677875_done
L_bc_ac677875_use_stack:
    ADD T2, SB, R0
L_bc_ac677875_done:
; LOAD: Using bank register T2 for load
    LOAD T5, T2, S0
    LI T4, 0
    ADD T5, T5, T4
; Load instruction: t68 = load FatPtr(FatPointer { addr: Temp(65), bank: Mixed })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(65), bank: Mixed })
; LOAD: Pointer t65 has bank info: Dynamic("load_f36_op191_t65_bank_val")
; Spill t59 to slot 80
    ADD SC, FP, R0
    ADDI SC, SC, 96
    STORE S2, SB, SC
; Spill gep_new_bank_f36_op176_t59 to slot 81
    ADD SC, FP, R0
    ADDI SC, SC, 97
    STORE T6, SB, SC
    LI S2, -1
    BEQ T1, S2, L_bc_a8950c5a_use_global
; Spill gep_new_bank_f36_op176_t59 to slot 82
    ADD SC, FP, R0
    ADDI SC, SC, 98
    STORE T6, SB, SC
    LI T6, -2
    BEQ T1, T6, L_bc_a8950c5a_use_stack
    ADD T4, T1, R0
    BEQ R0, R0, L_bc_a8950c5a_done
L_bc_a8950c5a_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_a8950c5a_done
L_bc_a8950c5a_use_stack:
    ADD T4, SB, R0
L_bc_a8950c5a_done:
; LOAD: Using bank register T4 for load
    LOAD S2, T4, S0
    LI T6, 1
    ADD S2, S2, T6
; Spill store_f36_op179_resolved_bank_36_f36_op180 to slot 83
    ADD SC, FP, R0
    ADDI SC, SC, 99
    STORE T3, SB, SC
    LI T3, -1
    BEQ T1, T3, L_bc_1ecf2d6f_use_global
; Spill t62 to slot 84
    ADD SC, FP, R0
    ADDI SC, SC, 100
    STORE S1, SB, SC
    LI S1, -2
    BEQ T1, S1, L_bc_1ecf2d6f_use_stack
    ADD T6, T1, R0
    BEQ R0, R0, L_bc_1ecf2d6f_done
L_bc_1ecf2d6f_use_global:
    ADD T6, GP, R0
    BEQ R0, R0, L_bc_1ecf2d6f_done
L_bc_1ecf2d6f_use_stack:
    ADD T6, SB, R0
L_bc_1ecf2d6f_done:
    STORE S2, T6, S0
    BEQ R0, R0, L_get_word_331
; Unconditional branch to L_get_word_331
; Invalidated 2 alloca bindings
L_get_word_333:
; Load instruction: t70 = load FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(5), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op204_t70 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t5 at FP+4
    ADD T3, FP, R0
    ADDI T3, T3, 4
    LOAD S1, SB, T3
    ADDI T7, T3, 1
    LOAD S3, SB, T7
; Bank value in S3 - tags: -1 = Global, -2 = Stack, positive = dynamic
; Load instruction: t71 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op208_t71 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t6 at FP+6
    ADD T7, FP, R0
    ADDI T7, T7, 6
; Spill t64 to slot 85
    ADD SC, FP, R0
    ADDI SC, SC, 101
    STORE T0, SB, SC
    LOAD T0, SB, T7
; Spill load_f36_op192_t66_resolved_bank_36_f36_op193 to slot 86
    ADD SC, FP, R0
    ADDI SC, SC, 102
    STORE T2, SB, SC
; Spill t67 to slot 87
    ADD SC, FP, R0
    ADDI SC, SC, 103
    STORE T5, SB, SC
    ADD T5, T0, R0
    ADD T2, S1, T5
; Runtime bank overflow calculation for dynamic GEP
; Spill load_f36_op196_t68_resolved_bank_36_f36_op197 to slot 88
    ADD SC, FP, R0
    ADDI SC, SC, 104
    STORE T4, SB, SC
; Spill t69 to slot 89
    ADD SC, FP, R0
    ADDI SC, SC, 105
    STORE S2, SB, SC
    LI S2, -1
    DIV T4, T2, S2
; Spill t65 to slot 90
    ADD SC, FP, R0
    ADDI SC, SC, 106
    STORE S0, SB, SC
; Spill load_f36_op191_t65_bank_val to slot 91
    ADD SC, FP, R0
    ADDI SC, SC, 107
    STORE T1, SB, SC
    MOD S0, T2, S2
; Base bank info: Dynamic("load_f36_op207_t70_bank_val")
; Clearing binding for 'gep_new_bank_f36_op214_t72'
; Spill load_f36_op191_t65_bank_val to slot 92
    ADD SC, FP, R0
    ADDI SC, SC, 108
    STORE T1, SB, SC
; Computing new bank gep_new_bank_f36_op214_t72 = load_f36_op207_t70_bank_val + bank_delta
    ADD T1, S3, T4
; Result bank tracked as Dynamic(gep_new_bank_f36_op214_t72)
    ADD T2, S0, R0
; GEP: Setting bank info for t72 to Dynamic("gep_new_bank_f36_op214_t72")
    LI T5, 0
    LI S2, -1
    BEQ T1, S2, L_bc_8a00dc40_use_global
    LI S0, -2
    BEQ T1, S0, L_bc_8a00dc40_use_stack
    ADD T4, T1, R0
    BEQ R0, R0, L_bc_8a00dc40_done
L_bc_8a00dc40_use_global:
    ADD T4, GP, R0
    BEQ R0, R0, L_bc_8a00dc40_done
L_bc_8a00dc40_use_stack:
    ADD T4, SB, R0
L_bc_8a00dc40_done:
    STORE T5, T4, T2
; Load instruction: t73 = load FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(6), bank: Stack })
; LOAD: Pointer load_src_ptr_f36_op220_t73 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD S2, SB, T7
    LI S0, 0
    SLT S2, S0, S2
    MOVE RV0, S2
; Jump to epilogue
    BEQ R0, R0, L_get_word_99999
L_get_word_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
main:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 299 slots for locals
    ADDI SP, SP, 299
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
L_main_337:
    LI S3, 2646
    LI S2, -1
; Spill live registers before call
; Spill const_f38_op0_2646 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 299
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 300
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, S2, R0
; Call function puts
    CALL puts
; Scalar return value for t0
    LI S1, 2660
    LI S0, -1
; Spill live registers before call
; Spill t0 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 301
    STORE RV0, SB, SC
; Spill const_f38_op2_2660 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 302
    STORE S1, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op3 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 303
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, S0, R0
; Call function puts
    CALL puts
; Scalar return value for t1
    LI T7, 2684
    LI T6, -1
; Spill live registers before call
; Spill t1 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 304
    STORE RV0, SB, SC
; Spill const_f38_op4_2684 to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 305
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op5 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 306
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, T6, R0
; Call function puts
    CALL puts
; Scalar return value for t2
    LI T5, 2702
    LI T4, -1
; Spill live registers before call
; Spill t2 to slot 8
    ADD SC, FP, R0
    ADDI SC, SC, 307
    STORE RV0, SB, SC
; Spill const_f38_op6_2702 to slot 9
    ADD SC, FP, R0
    ADDI SC, SC, 308
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op7 to slot 10
    ADD SC, FP, R0
    ADDI SC, SC, 309
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, T4, R0
; Call function puts
    CALL puts
; Scalar return value for t3
    LI T3, 2737
    LI T2, -1
; Spill live registers before call
; Spill t3 to slot 11
    ADD SC, FP, R0
    ADDI SC, SC, 310
    STORE RV0, SB, SC
; Spill const_f38_op8_2737 to slot 12
    ADD SC, FP, R0
    ADDI SC, SC, 311
    STORE T3, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op9 to slot 13
    ADD SC, FP, R0
    ADDI SC, SC, 312
    STORE T2, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T3, R0
    ADD A1, T2, R0
; Call function puts
    CALL puts
; Scalar return value for t4
    LI T1, 2790
    LI T0, -1
; Spill live registers before call
; Spill t4 to slot 14
    ADD SC, FP, R0
    ADDI SC, SC, 313
    STORE RV0, SB, SC
; Spill const_f38_op10_2790 to slot 15
    ADD SC, FP, R0
    ADDI SC, SC, 314
    STORE T1, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op11 to slot 16
    ADD SC, FP, R0
    ADDI SC, SC, 315
    STORE T0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T1, R0
    ADD A1, T0, R0
; Call function puts
    CALL puts
; Scalar return value for t5
    LI S3, 2813
    LI S2, -1
; Spill live registers before call
; Spill t5 to slot 17
    ADD SC, FP, R0
    ADDI SC, SC, 316
    STORE RV0, SB, SC
; Spill const_f38_op12_2813 to slot 18
    ADD SC, FP, R0
    ADDI SC, SC, 317
    STORE S3, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op13 to slot 19
    ADD SC, FP, R0
    ADDI SC, SC, 318
    STORE S2, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S3, R0
    ADD A1, S2, R0
; Call function puts
    CALL puts
; Scalar return value for t6
    LI S1, 2862
    LI S0, -1
; Spill live registers before call
; Spill t6 to slot 20
    ADD SC, FP, R0
    ADDI SC, SC, 319
    STORE RV0, SB, SC
; Spill const_f38_op14_2862 to slot 21
    ADD SC, FP, R0
    ADDI SC, SC, 320
    STORE S1, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op15 to slot 22
    ADD SC, FP, R0
    ADDI SC, SC, 321
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S1, R0
    ADD A1, S0, R0
; Call function puts
    CALL puts
; Scalar return value for t7
    LI T7, 2887
    LI T6, -1
; Spill live registers before call
; Spill t7 to slot 23
    ADD SC, FP, R0
    ADDI SC, SC, 322
    STORE RV0, SB, SC
; Spill const_f38_op16_2887 to slot 24
    ADD SC, FP, R0
    ADDI SC, SC, 323
    STORE T7, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op17 to slot 25
    ADD SC, FP, R0
    ADDI SC, SC, 324
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T7, R0
    ADD A1, T6, R0
; Call function puts
    CALL puts
; Scalar return value for t8
; Spill live registers before call
; Spill t8 to slot 26
    ADD SC, FP, R0
    ADDI SC, SC, 325
    STORE RV0, SB, SC
; Call function init_dict
    CALL init_dict
    ADD T5, FP, R0
    ADD T4, FP, R0
    ADDI T4, T4, 256
    BEQ R0, R0, L_main_338
; Unconditional branch to L_main_338
; Invalidated 2 alloca bindings
L_main_338:
; Load instruction: t11 = load Global("running")
; Canonicalizing global variable: running
    LI T3, 2355
; LOAD: Pointer load_src_ptr_f38_op19_t11 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T2, GP, T3
    BEQ T2, R0, L_main_340
; Branch to L_main_340 if condition is false
    BEQ R0, R0, L_main_339
; Unconditional branch to L_main_339 (condition was true)
L_main_339:
; Load instruction: t12 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI T1, 2354
; LOAD: Pointer load_src_ptr_f38_op22_t12 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T0, GP, T1
    LI S3, 0
    XOR S2, T0, S3
    LI S1, 1
    SLTU T0, S2, S1
    BEQ T0, R0, L_main_342
; Branch to L_main_342 if condition is false
    BEQ R0, R0, L_main_341
; Unconditional branch to L_main_341 (condition was true)
L_main_341:
    LI S0, 62
; Spill live registers before call
; Spill load_f38_op18_t11_addr to slot 27
    ADD SC, FP, R0
    ADDI SC, SC, 326
    STORE T3, SB, SC
; Spill load_f38_op21_t12_addr to slot 28
    ADD SC, FP, R0
    ADDI SC, SC, 327
    STORE T1, SB, SC
; Spill const_f38_op26_62 to slot 29
    ADD SC, FP, R0
    ADDI SC, SC, 328
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S0, R0
; Call function putchar
    CALL putchar
    LI T7, 32
; Spill live registers before call
; Spill const_f38_op27_32 to slot 30
    ADD SC, FP, R0
    ADDI SC, SC, 329
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_main_343
; Unconditional branch to L_main_343
L_main_342:
    LI T6, 46
; Spill live registers before call
; Spill const_f38_op28_46 to slot 31
    ADD SC, FP, R0
    ADDI SC, SC, 330
    STORE T6, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T6, R0
; Call function putchar
    CALL putchar
    LI RV0, 46
; Spill live registers before call
; Spill const_f38_op29_46 to slot 32
    ADD SC, FP, R0
    ADDI SC, SC, 331
    STORE RV0, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, RV0, R0
; Call function putchar
    CALL putchar
    LI T4, 32
; Spill live registers before call
; Spill const_f38_op30_32 to slot 33
    ADD SC, FP, R0
    ADDI SC, SC, 332
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function putchar
    CALL putchar
    BEQ R0, R0, L_main_343
; Unconditional branch to L_main_343
L_main_343:
    ADD T5, FP, R0
    ADDI T5, T5, 288
    LI T2, 0
    STORE T2, SB, T5
    ADD S2, FP, R0
    ADDI S2, S2, 289
    BEQ R0, R0, L_main_344
; Unconditional branch to L_main_344
; Invalidated 2 alloca bindings
L_main_344:
; Load instruction: t16 = load FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op33_t16 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t14 at FP+288
    ADD S1, FP, R0
    ADDI S1, S1, 288
    LOAD S3, SB, S1
    LI T0, 255
    SLT S3, S3, T0
    BEQ S3, R0, L_main_346
; Branch to L_main_346 if condition is false
    BEQ R0, R0, L_main_345
; Unconditional branch to L_main_345 (condition was true)
; Invalidated 1 alloca bindings
L_main_345:
; Spill live registers before call
; Call function getchar
    CALL getchar
; Scalar return value for t18
; Recompute alloca t15 at FP+289
    ADD T3, FP, R0
    ADDI T3, T3, 289
    STORE RV0, SB, T3
; Load instruction: t19 = load FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op36_t19 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T1, SB, T3
    LI S0, 10
    XOR T7, T1, S0
    LI T6, 1
    SLTU T1, T7, T6
    BEQ T1, R0, L_main_349
; Branch to L_main_349 if condition is false
    BEQ R0, R0, L_main_347
; Unconditional branch to L_main_347 (condition was true)
; Invalidated 1 alloca bindings
L_main_347:
    LI T4, 10
; Spill live registers before call
; Spill t18 to slot 34
    ADD SC, FP, R0
    ADDI SC, SC, 333
    STORE RV0, SB, SC
; Spill const_f38_op40_10 to slot 35
    ADD SC, FP, R0
    ADDI SC, SC, 334
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T4, R0
; Call function putchar
    CALL putchar
; Load instruction: t21 = load FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op41_t21 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t14 at FP+288
    ADD T2, FP, R0
    ADDI T2, T2, 288
    LOAD T5, SB, T2
; Recompute alloca t9 at FP+0
    ADD S2, FP, R0
    ADD S3, T5, R0
    ADD T0, S2, S3
; Runtime bank overflow calculation for dynamic GEP
    LI T7, -1
    DIV S1, T0, T7
    MOD T6, T0, T7
; Base bank info: Stack
; Clearing binding for 'gep_new_bank_f38_op47_t22'
; Computing new bank gep_new_bank_f38_op47_t22 = SB + bank_delta
    ADD S0, SB, S1
; Result bank tracked as Dynamic(gep_new_bank_f38_op47_t22)
    ADD T0, T6, R0
; GEP: Setting bank info for t22 to Dynamic("gep_new_bank_f38_op47_t22")
    LI T1, 0
    LI RV0, -1
    BEQ S0, RV0, L_bc_29c3229d_use_global
    LI T4, -2
    BEQ S0, T4, L_bc_29c3229d_use_stack
    ADD T3, S0, R0
    BEQ R0, R0, L_bc_29c3229d_done
L_bc_29c3229d_use_global:
    ADD T3, GP, R0
    BEQ R0, R0, L_bc_29c3229d_done
L_bc_29c3229d_use_stack:
    ADD T3, SB, R0
L_bc_29c3229d_done:
    STORE T1, T3, T0
    BEQ R0, R0, L_main_346
; Unconditional branch to L_main_346
    BEQ R0, R0, L_main_349
; Unconditional branch to L_main_349
; Invalidated 2 alloca bindings
L_main_349:
; Load instruction: t23 = load FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op53_t23 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t15 at FP+289
    ADD S3, FP, R0
    ADDI S3, S3, 289
    LOAD S1, SB, S3
; Spill live registers before call
; Spill t21 to slot 36
    ADD SC, FP, R0
    ADDI SC, SC, 335
    STORE T5, SB, SC
; Spill t22 to slot 37
    ADD SC, FP, R0
    ADDI SC, SC, 336
    STORE T0, SB, SC
; Spill gep_new_bank_f38_op47_t22 to slot 38
    ADD SC, FP, R0
    ADDI SC, SC, 337
    STORE S0, SB, SC
; Spill gep_new_bank_f38_op47_t22 to slot 39
    ADD SC, FP, R0
    ADDI SC, SC, 338
    STORE S0, SB, SC
; Spill store_f38_op49_resolved_bank_38_f38_op50 to slot 40
    ADD SC, FP, R0
    ADDI SC, SC, 339
    STORE T3, SB, SC
; Spill t23 to slot 41
    ADD SC, FP, R0
    ADDI SC, SC, 340
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Load instruction: t24 = load FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op55_t24 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t14 at FP+288
    ADD T7, FP, R0
    ADDI T7, T7, 288
    LOAD T6, SB, T7
    LI RV0, 0
    ADD T6, T6, RV0
; Load instruction: t26 = load FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op57_t26 has bank info: Stack
; LOAD: Using bank register Sb for load
    LOAD T4, SB, T7
    LI T1, 1
    ADD T4, T4, T1
    STORE T4, SB, T7
; Recompute alloca t9 at FP+0
    ADD T2, FP, R0
    ADD T5, T6, R0
    ADD S2, T2, T5
; Runtime bank overflow calculation for dynamic GEP
    LI S0, -1
    DIV T0, S2, S0
    MOD T3, S2, S0
; Base bank info: Stack
; Clearing binding for 'gep_new_bank_f38_op64_t28'
; Computing new bank gep_new_bank_f38_op64_t28 = SB + bank_delta
    ADD S3, SB, T0
; Result bank tracked as Dynamic(gep_new_bank_f38_op64_t28)
    ADD S2, T3, R0
; GEP: Setting bank info for t28 to Dynamic("gep_new_bank_f38_op64_t28")
; Load instruction: t29 = load FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(15), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op65_t29 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t15 at FP+289
    ADD S1, FP, R0
    ADDI S1, S1, 289
    LOAD RV0, SB, S1
    LI T5, -1
    BEQ S3, T5, L_bc_18752fd2_use_global
    LI T0, -2
    BEQ S3, T0, L_bc_18752fd2_use_stack
    ADD T1, S3, R0
    BEQ R0, R0, L_bc_18752fd2_done
L_bc_18752fd2_use_global:
    ADD T1, GP, R0
    BEQ R0, R0, L_bc_18752fd2_done
L_bc_18752fd2_use_stack:
    ADD T1, SB, R0
L_bc_18752fd2_done:
    STORE RV0, T1, S2
    BEQ R0, R0, L_main_344
; Unconditional branch to L_main_344
; Invalidated 3 alloca bindings
L_main_346:
; Load instruction: t30 = load FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; Canonicalizing fat pointer: FatPtr(FatPointer { addr: Temp(14), bank: Stack })
; LOAD: Pointer load_src_ptr_f38_op71_t30 has bank info: Stack
; LOAD: Using bank register Sb for load
; Recompute alloca t14 at FP+288
    ADD S0, FP, R0
    ADDI S0, S0, 288
    LOAD T3, SB, S0
; Recompute alloca t9 at FP+0
    ADD T5, FP, R0
    ADD T2, T3, R0
    ADD T0, T5, T2
; Runtime bank overflow calculation for dynamic GEP
    LI S1, -1
    DIV T7, T0, S1
; Spill t27 to slot 42
    ADD SC, FP, R0
    ADDI SC, SC, 341
    STORE T4, SB, SC
    MOD T4, T0, S1
; Base bank info: Stack
; Clearing binding for 'gep_new_bank_f38_op77_t31'
; Spill t25 to slot 43
    ADD SC, FP, R0
    ADDI SC, SC, 342
    STORE T6, SB, SC
; Computing new bank gep_new_bank_f38_op77_t31 = SB + bank_delta
    ADD T6, SB, T7
; Result bank tracked as Dynamic(gep_new_bank_f38_op77_t31)
    ADD T0, T4, R0
; GEP: Setting bank info for t31 to Dynamic("gep_new_bank_f38_op77_t31")
    LI T2, 0
    LI S1, -1
    BEQ T6, S1, L_bc_a4ee01ac_use_global
    LI T4, -2
    BEQ T6, T4, L_bc_a4ee01ac_use_stack
    ADD T7, T6, R0
    BEQ R0, R0, L_bc_a4ee01ac_done
L_bc_a4ee01ac_use_global:
    ADD T7, GP, R0
    BEQ R0, R0, L_bc_a4ee01ac_done
L_bc_a4ee01ac_use_stack:
    ADD T7, SB, R0
L_bc_a4ee01ac_done:
    STORE T2, T7, T0
    ADD S1, FP, R0
    ADDI S1, S1, 290
    LI T4, 0
    STORE T4, SB, S1
    BEQ R0, R0, L_main_350
; Unconditional branch to L_main_350
; Invalidated 3 alloca bindings
L_main_350:
; Recompute alloca t9 at FP+0
    ADD T2, FP, R0
    LI T4, -2
; Recompute alloca t32 at FP+290
    ADD T5, FP, R0
    ADDI T5, T5, 290
    LI S0, -2
; Recompute alloca t10 at FP+256
    ADD S1, FP, R0
    ADDI S1, S1, 256
; Spill t29 to slot 44
    ADD SC, FP, R0
    ADDI SC, SC, 343
    STORE RV0, SB, SC
    LI RV0, -2
; Spill live registers before call
; Spill t28 to slot 45
    ADD SC, FP, R0
    ADDI SC, SC, 344
    STORE S2, SB, SC
; Spill gep_new_bank_f38_op64_t28 to slot 46
    ADD SC, FP, R0
    ADDI SC, SC, 345
    STORE S3, SB, SC
; Spill gep_new_bank_f38_op64_t28 to slot 47
    ADD SC, FP, R0
    ADDI SC, SC, 346
    STORE S3, SB, SC
; Spill store_f38_op67_resolved_bank_38_f38_op68 to slot 48
    ADD SC, FP, R0
    ADDI SC, SC, 347
    STORE T1, SB, SC
; Spill t30 to slot 49
    ADD SC, FP, R0
    ADDI SC, SC, 348
    STORE T3, SB, SC
; Spill t31 to slot 50
    ADD SC, FP, R0
    ADDI SC, SC, 349
    STORE T0, SB, SC
; Spill gep_new_bank_f38_op77_t31 to slot 51
    ADD SC, FP, R0
    ADDI SC, SC, 350
    STORE T6, SB, SC
; Spill gep_new_bank_f38_op77_t31 to slot 52
    ADD SC, FP, R0
    ADDI SC, SC, 351
    STORE T6, SB, SC
; Spill store_f38_op79_resolved_bank_38_f38_op80 to slot 53
    ADD SC, FP, R0
    ADDI SC, SC, 352
    STORE T7, SB, SC
; Spill call_arg_fp_stack_tag_38_f38_op85 to slot 54
    ADD SC, FP, R0
    ADDI SC, SC, 353
    STORE T4, SB, SC
; Spill call_arg_fp_stack_tag_38_f38_op86 to slot 55
    ADD SC, FP, R0
    ADDI SC, SC, 354
    STORE S0, SB, SC
; Spill call_arg_fp_stack_tag_38_f38_op87 to slot 56
    ADD SC, FP, R0
    ADDI SC, SC, 355
    STORE RV0, SB, SC
; Pushing 1 arguments to stack
; Push arg 2 (fat ptr) to stack
    STORE RV0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
; Setting up 2 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, T4, R0
; Arg 1 (fat ptr) to A2,A3
    ADD A2, T5, R0
    ADD A3, S0, R0
; Pushed 2 words to stack
; Call function get_word
    CALL get_word
; Scalar return value for t33
; Clean up 2 words from stack
    ADDI SP, SP, -2
    BEQ RV0, R0, L_main_352
; Branch to L_main_352 if condition is false
    BEQ R0, R0, L_main_351
; Unconditional branch to L_main_351 (condition was true)
L_main_351:
; Recompute alloca t10 at FP+256
    ADD S2, FP, R0
    ADDI S2, S2, 256
    LI S3, -2
; Spill live registers before call
; Spill call_arg_fp_stack_tag_38_f38_op88 to slot 57
    ADD SC, FP, R0
    ADDI SC, SC, 356
    STORE S3, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, S2, R0
    ADD A1, S3, R0
; Call function process_word
    CALL process_word
    BEQ R0, R0, L_main_350
; Unconditional branch to L_main_350
L_main_352:
; Load instruction: t34 = load Global("compile_mode")
; Canonicalizing global variable: compile_mode
    LI T1, 2354
; LOAD: Pointer load_src_ptr_f38_op90_t34 has bank info: Global
; LOAD: Using bank register Gp for load
    LOAD T3, GP, T1
    LI T0, 0
    XOR T6, T3, T0
    LI T7, 1
    SLTU T3, T6, T7
    BEQ T3, R0, L_main_355
; Branch to L_main_355 if condition is false
    BEQ R0, R0, L_main_353
; Unconditional branch to L_main_353 (condition was true)
L_main_353:
    LI T2, 2888
    LI T4, -1
; Spill live registers before call
; Spill load_f38_op89_t34_addr to slot 58
    ADD SC, FP, R0
    ADDI SC, SC, 357
    STORE T1, SB, SC
; Spill const_f38_op94_2888 to slot 59
    ADD SC, FP, R0
    ADDI SC, SC, 358
    STORE T2, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op95 to slot 60
    ADD SC, FP, R0
    ADDI SC, SC, 359
    STORE T4, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T2, R0
    ADD A1, T4, R0
; Call function puts
    CALL puts
; Scalar return value for t36
    BEQ R0, R0, L_main_355
; Unconditional branch to L_main_355
L_main_355:
    BEQ R0, R0, L_main_338
; Unconditional branch to L_main_338
L_main_340:
    BRK
    LI T5, 2892
    LI S0, -1
; Spill live registers before call
; Spill t36 to slot 61
    ADD SC, FP, R0
    ADDI SC, SC, 360
    STORE RV0, SB, SC
; Spill const_f38_op96_2892 to slot 62
    ADD SC, FP, R0
    ADDI SC, SC, 361
    STORE T5, SB, SC
; Spill call_arg_fp_global_tag_38_f38_op97 to slot 63
    ADD SC, FP, R0
    ADDI SC, SC, 362
    STORE S0, SB, SC
; Setting up 1 register arguments
; Arg 0 (fat ptr) to A0,A1
    ADD A0, T5, R0
    ADD A1, S0, R0
; Call function puts
    CALL puts
; Scalar return value for t37
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_main_99999
L_main_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
