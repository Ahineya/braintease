<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>$schema</key>
	<string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
	<key>fileTypes</key>
	<array>
		<string>bfm</string>
		<string>bfmacro</string>
		<string>bf</string>
	</array>
	<key>name</key>
	<string>Brainfuck Macro</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro-invocation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin-functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#brainfuck-operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#identifiers</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>brainfuck-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\++</string>
					<key>name</key>
					<string>keyword.operator.increment.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--</string>
					<key>name</key>
					<string>keyword.operator.decrement.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+</string>
					<key>name</key>
					<string>keyword.operator.add.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-</string>
					<key>name</key>
					<string>keyword.operator.subtract.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;+</string>
					<key>name</key>
					<string>keyword.operator.move.left.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;+</string>
					<key>name</key>
					<string>keyword.operator.move.right.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>keyword.operator.input.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.output.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[</string>
					<key>name</key>
					<string>keyword.control.loop.begin.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\]</string>
					<key>name</key>
					<string>keyword.control.loop.end.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\$</string>
					<key>name</key>
					<string>keyword.control.break.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>builtin-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro-invocation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.arguments.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>builtin-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.preserve.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.builtin.preserve.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#preserve-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(label)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.label.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.builtin.label.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[a-zA-Z_]\w*</string>
							<key>name</key>
							<string>entity.name.label.bfmacro</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.br.bfmacro</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(br)\}</string>
					<key>name</key>
					<string>meta.builtin.br.bfmacro</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(repeat)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.repeat.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.repeat.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(if)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.if.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.if.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(for)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.for.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.for.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(in)\b</string>
							<key>name</key>
							<string>keyword.control.in.bfmacro</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(reverse)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.reverse.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.reverse.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(preserve)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.builtin.preserve.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.preserve.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#preserve-content</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash.bfmacro</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>identifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>variable.other.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>macro-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.arguments.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>macro-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.other.define.bfmacro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.macro.bfmacro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.bfmacro</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[a-zA-Z_]\w*</string>
									<key>name</key>
									<string>variable.parameter.bfmacro</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>(#define)\s+([a-zA-Z_]\w*)\s*(\(([^)]*)\))?</string>
				</dict>
			</array>
		</dict>
		<key>macro-invocation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@)([a-zA-Z_]\w*)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.macro.bfmacro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.macro.bfmacro</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin.bfmacro</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end.bfmacro</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.macro.bfmacro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#macro-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@[a-zA-Z_]\w*</string>
					<key>name</key>
					<string>entity.name.function.macro.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#[a-zA-Z_]\w*(?!define)</string>
					<key>name</key>
					<string>entity.name.function.macro.hash.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>'[^']'</string>
					<key>name</key>
					<string>constant.character.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b0[xX][0-9a-fA-F]+\b</string>
					<key>name</key>
					<string>constant.numeric.hex.bfmacro</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+\b</string>
					<key>name</key>
					<string>constant.numeric.decimal.bfmacro</string>
				</dict>
			</array>
		</dict>
		<key>preserve-content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^{}]+</string>
					<key>name</key>
					<string>string.unquoted.preserve.bfmacro</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.bfmacro</string>
</dict>
</plist>
