<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>$schema</key>
	<string>https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json</string>
	<key>fileTypes</key>
	<array>
		<string>bfm</string>
		<string>bfmacro</string>
		<string>bf</string>
	</array>
	<key>name</key>
	<string>Brainfuck Macro</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comments</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro-definition</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#builtin-functions</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro-invocation</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#brainfuck-operators</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#numbers</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#identifiers</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>brainfuck-operators</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\++</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.increment</string>
				</dict>
				<dict>
					<key>match</key>
					<string>--</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.decrement</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\+</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.plus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>-</string>
					<key>name</key>
					<string>keyword.operator.arithmetic.minus</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&lt;+</string>
					<key>name</key>
					<string>keyword.operator.memory.pointer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>&gt;+</string>
					<key>name</key>
					<string>keyword.operator.memory.pointer</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>keyword.operator.io.input</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\.</string>
					<key>name</key>
					<string>keyword.operator.io.output</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\[</string>
					<key>name</key>
					<string>keyword.control.flow.loop.begin</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\]</string>
					<key>name</key>
					<string>keyword.control.flow.loop.end</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\$</string>
					<key>name</key>
					<string>keyword.control.flow.break</string>
				</dict>
			</array>
		</dict>
		<key>builtin-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro-invocation</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.arguments</string>
				</dict>
			</array>
		</dict>
		<key>builtin-functions</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>\{(:)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.preserve</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.builtin.preserve</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-functions</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#preserve-content</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(label)\s+</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.label</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\}</string>
					<key>name</key>
					<string>meta.builtin.label</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>[a-zA-Z_]\w*</string>
							<key>name</key>
							<string>entity.name.label</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.break</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\{(br)\}</string>
					<key>name</key>
					<string>meta.builtin.br</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(repeat)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.repeat</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.repeat</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(if)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.conditional.if</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.if</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(for)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.loop.for</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.for</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>\b(in)\b</string>
							<key>name</key>
							<string>keyword.control.loop.in</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(reverse)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.reverse</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.reverse</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#builtin-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>\{(preserve)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.flow.preserve</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*\}</string>
					<key>name</key>
					<string>meta.builtin.preserve</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#preserve-content</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>comments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>//.*$</string>
					<key>name</key>
					<string>comment.line.double-slash</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>/\*</string>
					<key>end</key>
					<string>\*/</string>
					<key>name</key>
					<string>comment.block</string>
				</dict>
			</array>
		</dict>
		<key>identifiers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>\b[a-zA-Z_][a-zA-Z0-9_]*\b</string>
					<key>name</key>
					<string>variable.other.readwrite</string>
				</dict>
			</array>
		</dict>
		<key>macro-arguments</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#numbers</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#identifiers</string>
				</dict>
				<dict>
					<key>match</key>
					<string>,</string>
					<key>name</key>
					<string>punctuation.separator.arguments</string>
				</dict>
			</array>
		</dict>
		<key>macro-definition</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.directive.define</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.preprocessor</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters</string>
						</dict>
						<key>4</key>
						<dict>
							<key>patterns</key>
							<array>
								<dict>
									<key>match</key>
									<string>[a-zA-Z_]\w*</string>
									<key>name</key>
									<string>variable.parameter.function</string>
								</dict>
							</array>
						</dict>
					</dict>
					<key>match</key>
					<string>(#define)\s+([a-zA-Z_]\w*)\s*(\(([^)]*)\))?</string>
				</dict>
			</array>
		</dict>
		<key>macro-invocation</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(@)([a-zA-Z_]\w*)(\()</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.operator.macro</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.preprocessor</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.begin</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.parameters.end</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.function-call.macro</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#macro-arguments</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>@[a-zA-Z_]\w*</string>
					<key>name</key>
					<string>entity.name.function.preprocessor</string>
				</dict>
				<dict>
					<key>match</key>
					<string>#[a-zA-Z_]\w*(?!define)</string>
					<key>name</key>
					<string>entity.name.function.preprocessor</string>
				</dict>
			</array>
		</dict>
		<key>numbers</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>'[^']'</string>
					<key>name</key>
					<string>constant.character.literal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b0[xX][0-9a-fA-F]+\b</string>
					<key>name</key>
					<string>constant.numeric.integer.hexadecimal</string>
				</dict>
				<dict>
					<key>match</key>
					<string>\b\d+\b</string>
					<key>name</key>
					<string>constant.numeric.integer.decimal</string>
				</dict>
			</array>
		</dict>
		<key>preserve-content</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#builtin-functions</string>
				</dict>
				<dict>
					<key>match</key>
					<string>[^{}]+</string>
					<key>name</key>
					<string>string.unquoted</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.bfmacro</string>
	<key>uuid</key>
	<string>B5E5B8C6-6E2E-4E87-9F7A-2A8C3B4D5E6F</string>
</dict>
</plist>
