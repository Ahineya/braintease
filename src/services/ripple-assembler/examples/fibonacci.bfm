// Assembled from ../../src/services/ripple-assembler/examples/fibonacci.asm

@prg(
  // Memory
  @lane(#L_MEM,
    {for(s in {'F','i','b','o','n','a','c','c','i',' ','s','e','q','u','e','n','c','e',' ','(','f','i','r','s','t',' ','2','0',' ','n','u','m','b','e','r','s',')',':',10,0,' ',0,10,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0}, @set(s) @nextword)}
  ),
  
  // Program
  @program_start(@OP_LI    , @R3 , 0   , 0)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_LI    , @R3 , 0   , 0)
  @cmd(@OP_LI    , @R4 , 1   , 0)
  @cmd(@OP_LI    , @R6 , 0   , 0)
  @cmd(@OP_LI    , @R7 , 0   , 0)
  @cmd(@OP_STOR  , @R3 , @R0 , 9)
  @cmd(@OP_ADDI  , @R7 , @R7 , 1)
  @cmd(@OP_STOR  , @R4 , @R0 , 9)
  @cmd(@OP_ADDI  , @R7 , @R7 , 1)
  @cmd(@OP_LI    , @R6 , 2   , 0)
  @cmd(@OP_LI    , @R8 , 20  , 0)
  @cmd(@OP_BEQ   , @R6 , @R8 , 0)
  @cmd(@OP_ADD   , @R5 , @R3 , @R4)
  @cmd(@OP_STOR  , @R5 , @R0 , 9)
  @cmd(@OP_ADDI  , @R7 , @R7 , 1)
  @cmd(@OP_ADD   , @R3 , @R4 , @R0)
  @cmd(@OP_ADD   , @R4 , @R5 , @R0)
  @cmd(@OP_ADDI  , @R6 , @R6 , 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_LI    , @R6 , 0   , 0)
  @cmd(@OP_LI    , @R7 , 0   , 0)
  @cmd(@OP_LI    , @R8 , 20  , 0)
  @cmd(@OP_BEQ   , @R6 , @R8 , 0)
  @cmd(@OP_LOAD  , @R3 , @R0 , @R7)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_LI    , @R3 , 0   , 0)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_LI    , @R8 , 5   , 0)
  @cmd(@OP_ADDI  , @R9 , @R6 , 1)
  @cmd(@OP_ADD   , @R10, @R9 , @R0)
  @cmd(@OP_BLT   , @R10, @R8 , 0)
  @cmd(@OP_SUB   , @R10, @R10, @R8)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_BNE   , @R10, @R0 , 0)
  @cmd(@OP_LI    , @R3 , 0   , 0)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_ADDI  , @R7 , @R7 , 1)
  @cmd(@OP_ADDI  , @R6 , @R6 , 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_LI    , @R3 , 0   , 0)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_HALT  , 0   , 0   , 0)
  @cmd(@OP_ADD   , @R12, @RA , @R0)
  @cmd(@OP_LOAD  , @R13, @R0 , @R3)
  @cmd(@OP_BEQ   , @R13, @R0 , 0)
  @cmd(@OP_STOR  , @R13, @R0 , 0)
  @cmd(@OP_ADDI  , @R3 , @R3 , 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_JALR  , @R0 , @R0 , @R12)
  @cmd(@OP_ADD   , @R12, @RA , @R0)
  @cmd(@OP_BNE   , @R3 , @R0 , 0)
  @cmd(@OP_LI    , @R13, 48  , 0)
  @cmd(@OP_STOR  , @R13, @R0 , 0)
  @cmd(@OP_JALR  , @R0 , @R0 , @R12)
  @cmd(@OP_LI    , @R14, 0   , 0)
  @cmd(@OP_ADD   , @R15, @R3 , @R0)
  @cmd(@OP_LI    , @R10, 1000, 0)
  @cmd(@OP_LI    , @R11, 0   , 0)
  @cmd(@OP_BLT   , @R15, @R10, 0)
  @cmd(@OP_SUB   , @R15, @R15, @R10)
  @cmd(@OP_ADDI  , @R11, @R11, 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_BEQ   , @R11, @R0 , 0)
  @cmd(@OP_ADDI  , @R11, @R11, 48)
  @cmd(@OP_STOR  , @R11, @R0 , 0)
  @cmd(@OP_LI    , @R14, 1   , 0)
  @cmd(@OP_LI    , @R10, 100 , 0)
  @cmd(@OP_LI    , @R11, 0   , 0)
  @cmd(@OP_BLT   , @R15, @R10, 0)
  @cmd(@OP_SUB   , @R15, @R15, @R10)
  @cmd(@OP_ADDI  , @R11, @R11, 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_BEQ   , @R11, @R0 , 0)
  @cmd(@OP_ADDI  , @R11, @R11, 48)
  @cmd(@OP_STOR  , @R11, @R0 , 0)
  @cmd(@OP_LI    , @R14, 1   , 0)
  @cmd(@OP_LI    , @R10, 10  , 0)
  @cmd(@OP_LI    , @R11, 0   , 0)
  @cmd(@OP_BLT   , @R15, @R10, 0)
  @cmd(@OP_SUB   , @R15, @R15, @R10)
  @cmd(@OP_ADDI  , @R11, @R11, 1)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_BEQ   , @R14, @R0 , 0)
  @cmd(@OP_ADDI  , @R11, @R11, 48)
  @cmd(@OP_STOR  , @R11, @R0 , 0)
  @cmd(@OP_JAL   , 0   , 0   , 0)
  @cmd(@OP_BEQ   , @R11, @R0 , 0)
  @cmd(@OP_ADDI  , @R11, @R11, 48)
  @cmd(@OP_STOR  , @R11, @R0 , 0)
  @cmd(@OP_LI    , @R14, 1   , 0)
  @cmd(@OP_ADDI  , @R15, @R15, 48)
  @cmd(@OP_STOR  , @R15, @R0 , 0)
  @cmd(@OP_JALR  , @R0 , @R0 , @R12)
  @program_end
)