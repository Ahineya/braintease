; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    CALL main
    HALT

; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
; Alloca for t0 at FP+1
    ADDI R5, R15, 1
; GetElementPtr t1 = t0 + offsets
    ADDI R6, R15, 1
;   Base t0 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 72
; Store 72 to [t1]
    STORE R4, R13, R7
; GetElementPtr t2 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 105
; Store 105 to [t2]
    STORE R4, R13, R6
; GetElementPtr t3 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 2
    ADD R6, R5, R3
    LI R4, 33
; Store 33 to [t3]
    STORE R4, R13, R6
; GetElementPtr t4 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 3
    ADD R6, R5, R3
    LI R4, 10
; Store 10 to [t4]
    STORE R4, R13, R6
; GetElementPtr t5 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 4
    ADD R6, R5, R3
    LI R4, 99
; Store 99 to [t5]
    STORE R4, R13, R6
; GetElementPtr t6 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 0
    ADD R6, R5, R3
; Load from [t6] to t7
    LOAD R7, R13, R6
    LI R4, 72
    SLTU R9, R7, R4
    SLTU R10, R4, R7
    OR R8, R9, R10
    LI R10, 1
    SUB R8, R10, R8
    BNE R8, R0, L1
    BEQ R0, R0, L2
L1:
    LI R3, 49
    STORE R3, R0, R0
    BEQ R0, R0, L3
L2:
    LI R3, 88
    STORE R3, R0, R0
    BEQ R0, R0, L3
L3:
; GetElementPtr t9 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 1
    ADD R6, R5, R3
; Load from [t9] to t10
    LOAD R7, R13, R6
    LI R4, 105
    SLTU R9, R7, R4
    SLTU R10, R4, R7
    OR R8, R9, R10
    LI R10, 1
    SUB R8, R10, R8
    BNE R8, R0, L4
    BEQ R0, R0, L5
L4:
    LI R3, 50
    STORE R3, R0, R0
    BEQ R0, R0, L6
L5:
    LI R3, 88
    STORE R3, R0, R0
    BEQ R0, R0, L6
L6:
; GetElementPtr t12 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 4
    ADD R6, R5, R3
; Load from [t12] to t13
    LOAD R7, R13, R6
    LI R4, 99
    SLTU R9, R7, R4
    SLTU R10, R4, R7
    OR R8, R9, R10
    LI R10, 1
    SUB R8, R10, R8
    BNE R8, R0, L7
    BEQ R0, R0, L8
L7:
    LI R3, 51
    STORE R3, R0, R0
    BEQ R0, R0, L9
L8:
    LI R3, 88
    STORE R3, R0, R0
    BEQ R0, R0, L9
L9:
    LI R3, 10
    STORE R3, R0, R0
    LI R3, 0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
