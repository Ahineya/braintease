; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    ; Initialize globals
    CALL _init_globals
    CALL main
    HALT

_init_globals:
; String literal Hello at address 100
    LI R3, 72
    LI R4, 100
    STORE R3, R0, R4
    LI R3, 101
    LI R4, 101
    STORE R3, R0, R4
    LI R3, 108
    LI R4, 102
    STORE R3, R0, R4
    LI R3, 108
    LI R4, 103
    STORE R3, R0, R4
    LI R3, 111
    LI R4, 104
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 105
    STORE R3, R0, R4
    RET
; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
    LI R5, 100
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R3, 33
    STORE R3, R0, R0
    LI R3, 10
    STORE R3, R0, R0
; Alloca for t1 at FP+1
    ADDI R5, R15, 1
    ADDI R6, R15, 1
    LI R3, 65
    LI R4, 5
    ADD R5, R4, R0
    ADD R9, R3, R0
    ADD R3, R6, R0
    ADD R4, R9, R0
    CALL memset
    ADD R7, R3, R0
; GetElementPtr t3 = t1 + offsets
    ADDI R5, R15, 1
;   Base t1 in R5
    LI R3, 5
    ADD R6, R5, R3
    LI R4, 0
; Store 0 to [t3]
    STORE R4, R13, R6
; Alloca for t4 at FP+11
    ADDI R5, R15, 11
    LI R3, 0
    ADDI R6, R15, 11
; Store 0 to [t4]
    STORE R3, R13, R6
    BEQ R0, R0, L1
L1:
; Load from [t4] to t5
    ADDI R6, R15, 11
    LOAD R5, R13, R6
    LI R4, 5
    SLTU R7, R5, R4
    BNE R7, R0, L2
    BEQ R0, R0, L4
L2:
; Load from [t4] to t7
    ADDI R6, R15, 11
    LOAD R5, R13, R6
; GetElementPtr t8 = t1 + offsets
    ADDI R7, R15, 1
;   Base t1 in R7
    ADD R8, R7, R5
; Load from [t8] to t9
    LOAD R9, R13, R8
    STORE R9, R0, R0
    BEQ R0, R0, L3
L3:
; Load from [t4] to t10
    ADDI R6, R15, 11
    LOAD R5, R13, R6
    LI R4, 1
    ADD R7, R5, R4
    ADDI R8, R15, 11
; Store t11 to [t4]
    STORE R7, R13, R8
    BEQ R0, R0, L1
L4:
    LI R3, 10
    STORE R3, R0, R0
    LI R3, 0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
