; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    ; Initialize globals
    CALL _init_globals
    CALL main
    HALT

_init_globals:
; String literal Test! at address 100
    LI R3, 84
    LI R4, 100
    STORE R3, R0, R4
    LI R3, 101
    LI R4, 101
    STORE R3, R0, R4
    LI R3, 115
    LI R4, 102
    STORE R3, R0, R4
    LI R3, 116
    LI R4, 103
    STORE R3, R0, R4
    LI R3, 33
    LI R4, 104
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 105
    STORE R3, R0, R4
    RET
; Function: puts
puts:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
; Alloca for t1 at FP+1
    ADDI R5, R15, 1
    LI R4, 0
    ADDI R6, R15, 1
; Store 0 to [t1]
    STORE R4, R13, R6
    BEQ R0, R0, L1
L1:
; Load from [t1] to t2
    ADDI R6, R15, 1
    LOAD R5, R13, R6
; GetElementPtr t3 = t0 + offsets
;   Base t0 in R3
    ADD R7, R3, R5
; Load from [t3] to t4
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    LI R4, 0
    SLTU R10, R8, R4
    SLTU R11, R4, R8
    OR R9, R10, R11
    BNE R9, R0, L2
    BEQ R0, R0, L3
L2:
; Load from [t1] to t6
    ADDI R6, R15, 1
    LOAD R5, R13, R6
; GetElementPtr t7 = t0 + offsets
;   Base t0 in R3
    ADD R7, R3, R5
; Load from [t7] to t8
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
; Load from [t1] to t9
    ADDI R6, R15, 1
    LOAD R5, R13, R6
    LI R4, 1
    ADD R7, R5, R4
    ADDI R8, R15, 1
; Store t10 to [t1]
    STORE R7, R13, R8
    BEQ R0, R0, L1
L3:
    LI R4, 10
    STORE R4, R0, R0
; Load from [t1] to t11
    ADDI R6, R15, 1
    LOAD R5, R13, R6
    ADD R3, R5, R0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
L4:
; Alloca for t0 at FP+1
    ADDI R5, R15, 1
; GetElementPtr t1 = t0 + offsets
    ADDI R6, R15, 1
;   Base t0 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 72
; Store 72 to [t1]
    STORE R4, R13, R7
; GetElementPtr t2 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 101
; Store 101 to [t2]
    STORE R4, R13, R6
; GetElementPtr t3 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 2
    ADD R6, R5, R3
    LI R4, 108
; Store 108 to [t3]
    STORE R4, R13, R6
; GetElementPtr t4 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 3
    ADD R6, R5, R3
    LI R4, 108
; Store 108 to [t4]
    STORE R4, R13, R6
; GetElementPtr t5 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 4
    ADD R6, R5, R3
    LI R4, 111
; Store 111 to [t5]
    STORE R4, R13, R6
; GetElementPtr t6 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 5
    ADD R6, R5, R3
    LI R4, 0
; Store 0 to [t6]
    STORE R4, R13, R6
    ADDI R5, R15, 1
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
; Alloca for t8 at FP+7
    ADDI R5, R15, 7
; GetElementPtr t9 = t8 + offsets
    ADDI R6, R15, 7
;   Base t8 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 87
; Store 87 to [t9]
    STORE R4, R13, R7
; GetElementPtr t10 = t8 + offsets
    ADDI R5, R15, 7
;   Base t8 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 111
; Store 111 to [t10]
    STORE R4, R13, R6
; GetElementPtr t11 = t8 + offsets
    ADDI R5, R15, 7
;   Base t8 in R5
    LI R3, 2
    ADD R6, R5, R3
    LI R4, 114
; Store 114 to [t11]
    STORE R4, R13, R6
; GetElementPtr t12 = t8 + offsets
    ADDI R5, R15, 7
;   Base t8 in R5
    LI R3, 3
    ADD R6, R5, R3
    LI R4, 108
; Store 108 to [t12]
    STORE R4, R13, R6
; GetElementPtr t13 = t8 + offsets
    ADDI R5, R15, 7
;   Base t8 in R5
    LI R3, 4
    ADD R6, R5, R3
    LI R4, 100
; Store 100 to [t13]
    STORE R4, R13, R6
; GetElementPtr t14 = t8 + offsets
    ADDI R5, R15, 7
;   Base t8 in R5
    LI R3, 5
    ADD R6, R5, R3
    LI R4, 0
; Store 0 to [t14]
    STORE R4, R13, R6
    ADDI R5, R15, 7
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R5, 100
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
; Alloca for t17 at FP+13
    ADDI R5, R15, 13
; GetElementPtr t18 = t17 + offsets
    ADDI R6, R15, 13
;   Base t17 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 0
; Store 0 to [t18]
    STORE R4, R13, R7
    ADDI R5, R15, 13
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
; Alloca for t20 at FP+14
    ADDI R5, R15, 14
; GetElementPtr t21 = t20 + offsets
    ADDI R6, R15, 14
;   Base t20 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 88
; Store 88 to [t21]
    STORE R4, R13, R7
; GetElementPtr t22 = t20 + offsets
    ADDI R5, R15, 14
;   Base t20 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 0
; Store 0 to [t22]
    STORE R4, R13, R6
    ADDI R5, R15, 14
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R3, 0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
