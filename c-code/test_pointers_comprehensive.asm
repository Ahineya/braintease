; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    ; Initialize globals
    CALL _init_globals
    CALL main
    HALT

_init_globals:
; Global variable: global_val at address 100
    LI R3, 42
    LI R4, 100
    STORE R3, R0, R4
    RET
; Function: main
main:
; Alloca for t0 at FP+1
    ADDI R3, R15, 1
    LI R4, 10
    ADDI R5, R15, 1
; Store 10 to [t0]
    STORE R4, R13, R5
; Alloca for t1 at FP+2
    ADDI R6, R15, 2
    ADDI R7, R15, 1
    ADDI R8, R15, 2
; Store t0 to [t1]
    STORE R7, R13, R8
; Alloca for t2 at FP+3
    ADDI R3, R15, 3
    ADDI R5, R15, 2
; Load from [t1] to t3
    LOAD R4, R13, R5
; Load from [t3] to t4
    LOAD R6, R0, R4
    ADDI R7, R15, 3
; Store t4 to [t2]
    STORE R6, R13, R7
    ADDI R3, R15, 2
; Load from [t1] to t5
    LOAD R8, R13, R3
    LI R4, 20
; Store 20 to [t5]
    STORE R4, R0, R8
    ADDI R6, R15, 1
; Load from [t0] to t6
    LOAD R5, R13, R6
    LI R7, 20
    SLT R9, R5, R7
    SLT R10, R7, R5
    OR R8, R9, R10
    LI R9, 1
    SUB R8, R9, R8
; Branch if t7 to L1 else L3
L1:
    LI R3, 49
    STORE R3, R0, R0
; Jump to label 3
L3:
; Alloca for t8 at FP+4
    ADDI R4, R15, 4
    LI R5, 100
    ADDI R6, R15, 4
; Store @global_val to [t8]
    STORE R5, R13, R6
    ADDI R8, R15, 4
; Load from [t8] to t9
    LOAD R7, R13, R8
; Load from [t9] to t10
    LOAD R3, R0, R7
    LI R4, 42
    SLT R9, R3, R4
    SLT R10, R4, R3
    OR R5, R9, R10
    LI R9, 1
    SUB R5, R9, R5
; Branch if t11 to L4 else L6
L4:
    LI R6, 50
    STORE R6, R0, R0
; Jump to label 6
L6:
    ADDI R8, R15, 4
; Load from [t8] to t12
    LOAD R7, R13, R8
    LI R3, 100
; Store 100 to [t12]
    STORE R3, R0, R7
; Load from @global_val to t13
    LI R9, 100
    LOAD R4, R0, R9
    LI R5, 100
    SLT R9, R4, R5
    SLT R10, R5, R4
    OR R6, R9, R10
    LI R9, 1
    SUB R6, R9, R6
; Branch if t14 to L7 else L9
L7:
    LI R7, 51
    STORE R7, R0, R0
; Jump to label 9
L9:
; Alloca for t15 at FP+5
    ADDI R8, R15, 5
    LI R3, 5
    ADDI R4, R15, 5
; Store 5 to [t15]
    STORE R3, R13, R4
; Alloca for t16 at FP+6
    ADDI R5, R15, 6
    ADDI R6, R15, 5
    ADDI R7, R15, 6
; Store t15 to [t16]
    STORE R6, R13, R7
; Alloca for t17 at FP+7
    ADDI R8, R15, 7
    ADDI R3, R15, 6
    ADDI R4, R15, 7
; Store t16 to [t17]
    STORE R3, R13, R4
    ADDI R6, R15, 7
; Load from [t17] to t18
    LOAD R5, R13, R6
; Load from [t18] to t19
    LOAD R7, R0, R5
    LI R8, 15
; Store 15 to [t19]
    STORE R8, R0, R7
    ADDI R4, R15, 5
; Load from [t15] to t20
    LOAD R3, R13, R4
    LI R5, 15
    SLT R9, R3, R5
    SLT R10, R5, R3
    OR R6, R9, R10
    LI R9, 1
    SUB R6, R9, R6
; Branch if t21 to L10 else L12
L10:
    LI R7, 52
    STORE R7, R0, R0
; Jump to label 12
L12:
; Alloca for t22 at FP+8
    ADDI R8, R15, 8
    LI R3, 1
    ADDI R4, R15, 8
; Store 1 to [t22]
    STORE R3, R13, R4
; Alloca for t23 at FP+9
    ADDI R5, R15, 9
    LI R6, 2
    ADDI R7, R15, 9
; Store 2 to [t23]
    STORE R6, R13, R7
; Alloca for t24 at FP+10
    ADDI R8, R15, 10
    ADDI R3, R15, 8
    ADDI R4, R15, 10
; Store t22 to [t24]
    STORE R3, R13, R4
; Alloca for t25 at FP+11
    ADDI R5, R15, 11
    ADDI R6, R15, 9
    ADDI R7, R15, 11
; Store t23 to [t25]
    STORE R6, R13, R7
; Alloca for t26 at FP+12
    ADDI R8, R15, 12
    ADDI R4, R15, 10
; Load from [t24] to t27
    LOAD R3, R13, R4
; Load from [t27] to t28
    LOAD R5, R0, R3
    ADDI R6, R15, 12
; Store t28 to [t26]
    STORE R5, R13, R6
    ADDI R8, R15, 11
; Load from [t25] to t29
    LOAD R7, R13, R8
; Load from [t29] to t30
    LOAD R3, R0, R7
    ADDI R5, R15, 10
; Load from [t24] to t31
    LOAD R4, R13, R5
; Store t30 to [t31]
    STORE R3, R0, R4
    ADDI R7, R15, 12
; Load from [t26] to t32
    LOAD R6, R13, R7
    ADDI R3, R15, 11
; Load from [t25] to t33
    LOAD R8, R13, R3
; Store t32 to [t33]
    STORE R6, R0, R8
    ADDI R5, R15, 8
; Load from [t22] to t34
    LOAD R4, R13, R5
    LI R6, 2
    SLT R9, R4, R6
    SLT R10, R6, R4
    OR R7, R9, R10
    LI R9, 1
    SUB R7, R9, R7
; Branch if t35 to L13 else L15
L13:
    ADDI R3, R15, 9
; Load from [t23] to t36
    LOAD R8, R13, R3
    LI R4, 1
    SLT R9, R8, R4
    SLT R10, R4, R8
    OR R5, R9, R10
    LI R9, 1
    SUB R5, R9, R5
; Branch if t37 to L16 else L18
L16:
    LI R6, 53
    STORE R6, R0, R0
; Jump to label 18
L18:
; Jump to label 15
L15:
    LI R7, 10
    STORE R7, R0, R0
    LI R8, 0
    ADD R3, R8, R0
    RET
