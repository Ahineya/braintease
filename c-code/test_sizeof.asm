; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    CALL main
    HALT

; Function: print_number
print_number:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    LI R4, 10
    SLT R5, R3, R4
    LI R9, 1
    SUB R5, R9, R5
; Branch if t0 to L1 else L3
L1:
    LI R6, 10
; Unsupported binary op: SDiv
    ADD R3, R7, R0
    CALL print_number
; Jump to label 3
L3:
    LI R8, 10
; Unsupported binary op: SRem
    LI R4, 48
    ADD R5, R4, R3
    STORE R5, R0, R0
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
L4:
; Alloca for t4 at FP+1
    ADDI R3, R15, 1
    LI R4, 1
    ADDI R5, R15, 1
; Store 1 to [t4]
    STORE R4, R13, R5
; Alloca for t5 at FP+2
    ADDI R6, R15, 2
    LI R7, 2
    ADDI R8, R15, 2
; Store 2 to [t5]
    STORE R7, R13, R8
; Alloca for t6 at FP+3
    ADDI R3, R15, 3
    LI R4, 4
    ADDI R5, R15, 3
; Store 4 to [t6]
    STORE R4, R13, R5
; Alloca for t7 at FP+4
    ADDI R6, R15, 4
    LI R7, 2
    ADDI R8, R15, 4
; Store 2 to [t7]
    STORE R7, R13, R8
; Alloca for t8 at FP+5
    ADDI R3, R15, 5
    LI R4, 42
    ADDI R5, R15, 5
; Store 42 to [t8]
    STORE R4, R13, R5
; Alloca for t9 at FP+6
    ADDI R6, R15, 6
; Alloca for t10 at FP+16
    ADDI R7, R15, 16
    LI R8, 2
    ADDI R3, R15, 16
; Store 2 to [t10]
    STORE R8, R13, R3
; Alloca for t11 at FP+17
    ADDI R4, R15, 17
    LI R5, 20
    ADDI R6, R15, 17
; Store 20 to [t11]
    STORE R5, R13, R6
    LI R7, 99
    STORE R7, R0, R0
    LI R8, 104
    STORE R8, R0, R0
    LI R3, 97
    STORE R3, R0, R0
    LI R4, 114
    STORE R4, R0, R0
    LI R5, 58
    STORE R5, R0, R0
    LI R6, 32
    STORE R6, R0, R0
    ADDI R8, R15, 1
; Load from [t4] to t12
    LOAD R7, R13, R8
    ADD R3, R7, R0
    CALL print_number
    LI R3, 10
    STORE R3, R0, R0
    LI R4, 105
    STORE R4, R0, R0
    LI R5, 110
    STORE R5, R0, R0
    LI R6, 116
    STORE R6, R0, R0
    LI R7, 58
    STORE R7, R0, R0
    LI R8, 32
    STORE R8, R0, R0
    ADDI R4, R15, 2
; Load from [t5] to t13
    LOAD R3, R13, R4
    CALL print_number
    LI R5, 10
    STORE R5, R0, R0
    LI R6, 108
    STORE R6, R0, R0
    LI R7, 111
    STORE R7, R0, R0
    LI R8, 110
    STORE R8, R0, R0
    LI R3, 103
    STORE R3, R0, R0
    LI R4, 58
    STORE R4, R0, R0
    LI R5, 32
    STORE R5, R0, R0
    ADDI R7, R15, 3
; Load from [t6] to t14
    LOAD R6, R13, R7
    ADD R3, R6, R0
    CALL print_number
    LI R8, 10
    STORE R8, R0, R0
    LI R3, 112
    STORE R3, R0, R0
    LI R4, 116
    STORE R4, R0, R0
    LI R5, 114
    STORE R5, R0, R0
    LI R6, 58
    STORE R6, R0, R0
    LI R7, 32
    STORE R7, R0, R0
    ADDI R3, R15, 4
; Load from [t7] to t15
    LOAD R8, R13, R3
    ADD R3, R8, R0
    CALL print_number
    LI R4, 10
    STORE R4, R0, R0
    LI R5, 118
    STORE R5, R0, R0
    LI R6, 97
    STORE R6, R0, R0
    LI R7, 114
    STORE R7, R0, R0
    LI R8, 58
    STORE R8, R0, R0
    LI R3, 32
    STORE R3, R0, R0
    ADDI R5, R15, 16
; Load from [t10] to t16
    LOAD R4, R13, R5
    ADD R3, R4, R0
    CALL print_number
    LI R6, 10
    STORE R6, R0, R0
    LI R7, 97
    STORE R7, R0, R0
    LI R8, 114
    STORE R8, R0, R0
    LI R3, 114
    STORE R3, R0, R0
    LI R4, 91
    STORE R4, R0, R0
    LI R5, 49
    STORE R5, R0, R0
    LI R6, 48
    STORE R6, R0, R0
    LI R7, 93
    STORE R7, R0, R0
    LI R8, 58
    STORE R8, R0, R0
    LI R3, 32
    STORE R3, R0, R0
    ADDI R5, R15, 17
; Load from [t11] to t17
    LOAD R4, R13, R5
    ADD R3, R4, R0
    CALL print_number
    LI R6, 10
    STORE R6, R0, R0
    LI R7, 0
    ADD R3, R7, R0
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
