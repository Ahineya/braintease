; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    ; Initialize globals
    CALL _init_globals
    CALL main
    HALT

_init_globals:
; String literal ABC at address 100
    LI R3, 65
    LI R4, 100
    STORE R3, R0, R4
    LI R3, 66
    LI R4, 101
    STORE R3, R0, R4
    LI R3, 67
    LI R4, 102
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 103
    STORE R3, R0, R4
; String literal Hello at address 102
    LI R3, 72
    LI R4, 102
    STORE R3, R0, R4
    LI R3, 101
    LI R4, 103
    STORE R3, R0, R4
    LI R3, 108
    LI R4, 104
    STORE R3, R0, R4
    LI R3, 108
    LI R4, 105
    STORE R3, R0, R4
    LI R3, 111
    LI R4, 106
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 107
    STORE R3, R0, R4
; String literal ! at address 105
    LI R3, 33
    LI R4, 105
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 106
    STORE R3, R0, R4
    RET
; Function: puts
puts:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
; Alloca for t1 at FP+1
    ADDI R5, R15, 1
    LI R4, 0
    ADDI R6, R15, 1
; Store 0 to [t1]
    STORE R4, R13, R6
    BEQ R0, R0, L1
L1:
; Load from [t1] to t2
    ADDI R6, R15, 1
    LOAD R5, R13, R6
; GetElementPtr t3 = t0 + offsets
;   Base t0 in R3
    ADD R7, R3, R5
; Load from [t3] to t4
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    LI R4, 0
    SLTU R10, R8, R4
    SLTU R11, R4, R8
    OR R9, R10, R11
    BNE R9, R0, L2
    BEQ R0, R0, L3
L2:
; Load from [t1] to t6
    ADDI R6, R15, 1
    LOAD R5, R13, R6
; GetElementPtr t7 = t0 + offsets
;   Base t0 in R3
    ADD R7, R3, R5
; Load from [t7] to t8
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
; Load from [t1] to t9
    ADDI R6, R15, 1
    LOAD R5, R13, R6
    LI R4, 1
    ADD R7, R5, R4
    ADDI R8, R15, 1
; Store t10 to [t1]
    STORE R7, R13, R8
    BEQ R0, R0, L1
L3:
    LI R4, 10
    STORE R4, R0, R0
; Load from [t1] to t11
    ADDI R6, R15, 1
    LOAD R5, R13, R6
    ADD R3, R5, R0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
L4:
    LI R5, 100
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R5, 102
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R5, 105
    ADD R3, R5, R0
    CALL puts
    ADD R6, R3, R0
    LI R3, 0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
