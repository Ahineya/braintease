; Generated by Ripple C99 Compiler (rcc)

; Program entry point
_start:
    ; Initialize stack pointer
    LI R13, 0       ; Stack bank = 0
    LI R14, 1000   ; Stack pointer starts at 1000
    LI R15, 1000   ; Frame pointer starts at 1000
    ; Initialize globals
    CALL _init_globals
    CALL main
    HALT

_init_globals:
; Global variable: global_counter at address 100
    LI R3, 5
    LI R4, 100
    STORE R3, R0, R4
; String literal OK! at address 101
    LI R3, 79
    LI R4, 101
    STORE R3, R0, R4
    LI R3, 75
    LI R4, 102
    STORE R3, R0, R4
    LI R3, 33
    LI R4, 103
    STORE R3, R0, R4
    LI R3, 0
    LI R4, 104
    STORE R3, R0, R4
    RET
; Function: main
main:
    STORE RA, R13, R14
    ADDI R14, R14, 1
    STORE R15, R13, R14
    ADDI R14, R14, 1
    ADD R15, R14, R0
; Alloca for t0 at FP+1
    ADDI R5, R15, 1
; GetElementPtr t1 = t0 + offsets
    ADDI R6, R15, 1
;   Base t0 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 77
; Store 77 to [t1]
    STORE R4, R13, R7
; GetElementPtr t2 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 51
; Store 51 to [t2]
    STORE R4, R13, R6
; GetElementPtr t3 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 2
    ADD R6, R5, R3
    LI R4, 58
; Store 58 to [t3]
    STORE R4, R13, R6
; GetElementPtr t4 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 0
    ADD R6, R5, R3
; Load from [t4] to t5
    LOAD R7, R13, R6
    STORE R7, R0, R0
; GetElementPtr t6 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 1
    ADD R6, R5, R3
; Load from [t6] to t7
    LOAD R7, R13, R6
    STORE R7, R0, R0
; GetElementPtr t8 = t0 + offsets
    ADDI R5, R15, 1
;   Base t0 in R5
    LI R3, 2
    ADD R6, R5, R3
; Load from [t8] to t9
    LOAD R7, R13, R6
    STORE R7, R0, R0
    LI R3, 32
    STORE R3, R0, R0
; Alloca for t10 at FP+4
    ADDI R5, R15, 4
    LI R6, 101
    ADDI R7, R15, 4
; Store @__str_0_4f4b21 to [t10]
    STORE R6, R13, R7
; Load from [t10] to t11
    ADDI R6, R15, 4
    LOAD R5, R13, R6
; GetElementPtr t12 = t11 + offsets
;   Base t11 in R5
    LI R3, 0
    ADD R7, R5, R3
; Load from [t12] to t13
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
; Load from [t10] to t14
    ADDI R6, R15, 4
    LOAD R5, R13, R6
; GetElementPtr t15 = t14 + offsets
;   Base t14 in R5
    LI R3, 1
    ADD R7, R5, R3
; Load from [t15] to t16
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
; Load from [t10] to t17
    ADDI R6, R15, 4
    LOAD R5, R13, R6
; GetElementPtr t18 = t17 + offsets
;   Base t17 in R5
    LI R3, 2
    ADD R7, R5, R3
; Load from [t18] to t19
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
    LI R3, 10
    STORE R3, R0, R0
; Alloca for t20 at FP+5
    ADDI R5, R15, 5
    LI R3, 65
    ADDI R6, R15, 5
; Store 65 to [t20]
    STORE R3, R13, R6
; Alloca for t21 at FP+6
    ADDI R5, R15, 6
    ADDI R6, R15, 5
    ADDI R7, R15, 6
; Store t20 to [t21]
    STORE R6, R13, R7
; Load from [t21] to t22
    ADDI R6, R15, 6
    LOAD R5, R13, R6
; Load from [t22] to t23
; WARNING: Assuming unknown pointer points to global memory
    LOAD R7, R0, R5
    STORE R7, R0, R0
; Alloca for t24 at FP+7
    ADDI R5, R15, 7
; GetElementPtr t25 = t24 + offsets
    ADDI R6, R15, 7
;   Base t24 in R6
    LI R3, 0
    ADD R7, R6, R3
    LI R4, 66
; Store 66 to [t25]
    STORE R4, R13, R7
; GetElementPtr t26 = t24 + offsets
    ADDI R5, R15, 7
;   Base t24 in R5
    LI R3, 1
    ADD R6, R5, R3
    LI R4, 67
; Store 67 to [t26]
    STORE R4, R13, R6
; Alloca for t27 at FP+9
    ADDI R5, R15, 9
    ADDI R6, R15, 7
    ADDI R7, R15, 9
; Store t24 to [t27]
    STORE R6, R13, R7
; Load from [t27] to t28
    ADDI R6, R15, 9
    LOAD R5, R13, R6
; Load from [t28] to t29
; WARNING: Assuming unknown pointer points to global memory
    LOAD R7, R0, R5
    STORE R7, R0, R0
; Load from [t27] to t30
    ADDI R6, R15, 9
    LOAD R5, R13, R6
    LI R4, 1
    ADD R7, R5, R4
; Load from [t31] to t32
; WARNING: Assuming unknown pointer points to global memory
    LOAD R8, R0, R7
    STORE R8, R0, R0
    LI R3, 10
    STORE R3, R0, R0
; Load from [@global_counter] to t33
    LI R6, 100
    LOAD R5, R0, R6
    LI R4, 5
    SLTU R8, R5, R4
    SLTU R9, R4, R5
    OR R7, R8, R9
    LI R9, 1
    SUB R7, R9, R7
    BNE R7, R0, L1
    BEQ R0, R0, L3
L1:
    LI R3, 71
    STORE R3, R0, R0
    LI R3, 111
    STORE R3, R0, R0
    LI R3, 111
    STORE R3, R0, R0
    LI R3, 100
    STORE R3, R0, R0
    LI R3, 33
    STORE R3, R0, R0
    LI R3, 10
    STORE R3, R0, R0
    BEQ R0, R0, L3
L3:
    LI R3, 0
    ADD R14, R15, R0
    ADDI R14, R14, -1
    LOAD R15, R13, R14
    ADDI R14, R14, -1
    LOAD RA, R13, R14
    RET
