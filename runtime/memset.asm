; Generated by Ripple C99 Compiler (rcc)

memset:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 13 slots for locals
    ADDI SP, SP, 13
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 2 from A3
    ADD S1, A3, R0
    ADD S0, FP, R0
    STORE S3, SB, S0
    ADDI T7, S0, 1
    STORE A1, SB, T7
    ADD T6, FP, R0
    ADDI T6, T6, 2
    STORE S2, SB, T6
    ADD T5, FP, R0
    ADDI T5, T5, 3
    STORE S1, SB, T5
    ADD T4, FP, R0
    ADDI T4, T4, 4
    LI T3, 0
    STORE T3, SB, T4
    BEQ R0, R0, L_memset_1
; Unconditional branch to L_memset_1
L_memset_1:
    LOAD T2, SB, T4
    LOAD T1, SB, T5
    SLT T2, T2, T1
    BEQ T2, R0, L_memset_4
; Branch to L_memset_4 if condition is false
    BEQ R0, R0, L_memset_2
; Unconditional branch to L_memset_2 (condition was true)
L_memset_2:
    LOAD T0, SB, S0
    ADDI T7, S0, 1
    LOAD T3, SB, T7
    LOAD T1, SB, T4
    ADD T7, T1, R0
    ADD T2, T0, T7
; Runtime bank overflow calculation for dynamic GEP
; Initialize SB as stack bank (1)
    LI SB, 1
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S3, SB, SC
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S2, SB, SC
    LI S2, 4096
    DIV S3, T2, S2
; Spill t4 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE T6, SB, SC
    MOD T6, T2, S2
    ADD T3, T3, S3
    ADD T2, T6, R0
; Reload t4 from slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    LOAD T7, SB, SC
    LOAD S3, SB, T7
    STORE S3, T3, T2
    BEQ R0, R0, L_memset_3
; Unconditional branch to L_memset_3
L_memset_3:
    LOAD S2, SB, T4
    LI T6, 1
    ADD S2, S2, T6
    STORE S2, SB, T4
    BEQ R0, R0, L_memset_1
; Unconditional branch to L_memset_1
L_memset_4:
; Jump to epilogue
    BEQ R0, R0, L_memset_99999
L_memset_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
