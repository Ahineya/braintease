; Generated by Ripple C99 Compiler (rcc)

puts:
; === Function Prologue ===
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 10 slots for locals
    ADDI SP, SP, 10
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADDI S1, S2, 1
    STORE A1, SB, S1
    BEQ R0, R0, L_puts_1
; Unconditional branch to L_puts_1
L_puts_1:
; Recompute alloca t1 at FP+0
    ADD S0, FP, R0
    LOAD T7, SB, S0
    ADDI T6, S0, 1
    LOAD T5, SB, T6
    LOAD T4, T5, T7
    BEQ T4, R0, L_puts_3
; Branch to L_puts_3 if condition is false
    BEQ R0, R0, L_puts_2
; Unconditional branch to L_puts_2 (condition was true)
L_puts_2:
; Recompute alloca t1 at FP+0
    ADD T3, FP, R0
    LOAD T2, SB, T3
    ADDI T1, T3, 1
    LOAD T0, SB, T1
    LOAD S1, T0, T2
; Spill live registers before call
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 10
    STORE S3, SB, SC
; Spill t2 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 11
    STORE T7, SB, SC
; Spill load_f0_op5_t2_bank_val to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 12
    STORE T5, SB, SC
; Spill t4 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 13
    STORE T2, SB, SC
; Spill load_f0_op8_t4_bank_val to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 14
    STORE T0, SB, SC
; Spill t5 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 15
    STORE S1, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Recompute alloca t1 at FP+0
    ADD S2, FP, R0
    LOAD T6, SB, S2
    ADDI T4, S2, 1
    LOAD S0, SB, T4
    ADDI T1, T6, 1
    STORE T1, SB, S2
    ADDI S3, S2, 1
    STORE S0, SB, S3
    BEQ R0, R0, L_puts_1
; Unconditional branch to L_puts_1
L_puts_3:
    LI T7, 10
; Spill live registers before call
; Spill load_f0_op11_t6_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S0, SB, SC
; Spill const_f0_op13_10 to slot 7
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE T7, SB, SC
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T7, R0
; Call function putchar
    CALL putchar
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_puts_99999
L_puts_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
