; Generated by Ripple C99 Compiler (rcc)

puts:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 10 slots for locals
    ADDI SP, SP, 10
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 0 bank from A1
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADDI S1, S2, 1
    STORE A1, SB, S1
    LOAD S0, SB, S2
    ADDI T7, S2, 1
    LOAD T6, SB, T7
    LI T5, 0
    XOR T4, S0, T5
    LI T3, 1
    SLTU S0, T4, T3
    BEQ S0, R0, L_puts_3
; Branch to L_puts_3 if condition is false
    BEQ R0, R0, L_puts_1
; Unconditional branch to L_puts_1 (condition was true)
L_puts_1:
    LI T2, 0
    LI T1, 1
    SUB T2, T2, T1
    MOVE RV0, T2
; Jump to epilogue
    BEQ R0, R0, L_puts_99999
    BEQ R0, R0, L_puts_3
; Unconditional branch to L_puts_3
L_puts_3:
    BEQ R0, R0, L_puts_4
; Unconditional branch to L_puts_4
L_puts_4:
    LOAD T0, SB, S2
    ADDI S1, S2, 1
    LOAD T7, SB, S1
    LOAD T4, T7, T0
    BEQ T4, R0, L_puts_6
; Branch to L_puts_6 if condition is false
    BEQ R0, R0, L_puts_5
; Unconditional branch to L_puts_5 (condition was true)
L_puts_5:
    LOAD T3, SB, S2
    ADDI T5, S2, 1
    LOAD S0, SB, T5
    LOAD T1, S0, T3
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, T1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t9
    LOAD S1, SB, S2
    ADDI T4, S2, 1
    LOAD T5, SB, T4
    ADDI T4, S1, 1
    STORE T4, SB, S2
    ADDI S1, S2, 1
    STORE T5, SB, S1
    BEQ R0, R0, L_puts_4
; Unconditional branch to L_puts_4
L_puts_6:
    LI S1, 10
; Setting up 1 register arguments
; Arg 0 (scalar) to A0
    ADD A0, S1, R0
; Call function putchar
    CALL putchar
; Scalar return value for t12
    LI RV0, 0
; Jump to epilogue
    BEQ R0, R0, L_puts_99999
L_puts_99999:
; Return scalar value
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
