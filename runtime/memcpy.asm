; Generated by Ripple C99 Compiler (rcc)

memcpy:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 16 slots for locals
    ADDI SP, SP, 16
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 1 from A2
    ADD S2, A2, R0
; Load param 2 from FP-7
    ADDI SC, FP, -7
    LOAD S1, SB, SC
; Load param 3 from FP-9
    ADDI SC, FP, -9
    LOAD S0, SB, SC
; Load param 4 from FP-10
    ADDI SC, FP, -10
    LOAD T7, SB, SC
    ADD S2, FP, R0
    STORE S3, SB, S2
    ADD S1, FP, R0
    ADDI S1, S1, 2
    STORE S2, SB, S1
    ADD S0, FP, R0
    ADDI S0, S0, 3
    STORE S1, SB, S0
    ADD T7, FP, R0
    ADDI T7, T7, 5
    STORE S0, SB, T7
    ADD T6, FP, R0
    ADDI T6, T6, 6
    STORE T7, SB, T6
    ADD T5, FP, R0
    ADDI T5, T5, 7
    LI T4, 0
    STORE T4, SB, T5
    BEQ R0, R0, L_memcpy_1
; Unconditional branch to L_memcpy_1
L_memcpy_1:
    LOAD T3, SB, T5
    LOAD T2, SB, T6
    SLT T3, T3, T2
    BEQ T3, R0, L_memcpy_4
; Branch to L_memcpy_4 if condition is false
    BEQ R0, R0, L_memcpy_2
; Unconditional branch to L_memcpy_2 (condition was true)
L_memcpy_2:
    LOAD T1, SB, S2
    ADDI T0, S2, 1
    LOAD T4, SB, T0
    LOAD T2, SB, T5
    ADD T0, T2, R0
    ADD T3, T1, T0
; Runtime bank overflow calculation for dynamic GEP
; Initialize SB as stack bank (1)
    LI SB, 1
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S3, SB, SC
; Spill t2 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S1, SB, SC
    LI S1, 4096
    DIV S3, T3, S1
; Spill t3 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S0, SB, SC
    MOD S0, T3, S1
    ADD T4, T4, S3
    ADD T3, S0, R0
; Reload t3 from slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    LOAD T0, SB, SC
    LOAD S3, SB, T0
    ADDI S1, T0, 1
    LOAD S0, SB, S1
    LOAD T1, SB, T5
; Spill t4 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T7, SB, SC
    ADD T7, T1, R0
    ADD S1, S3, T7
; Runtime bank overflow calculation for dynamic GEP
; Spill t5 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T6, SB, SC
; Spill t1 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE S2, SB, SC
    LI S2, 4096
    DIV T6, S1, S2
; Spill load_f0_op7_t10_bank_val to slot 6
    ADD SC, FP, R0
    ADDI SC, SC, 22
    STORE T4, SB, SC
    MOD T4, S1, S2
    ADD S0, S0, T6
    ADD S1, T4, R0
    LOAD T7, SB, S1
    STORE T7, SB, T3
    BEQ R0, R0, L_memcpy_3
; Unconditional branch to L_memcpy_3
L_memcpy_3:
    LOAD T6, SB, T5
    LI S2, 1
    ADD T6, T6, S2
    STORE T6, SB, T5
    BEQ R0, R0, L_memcpy_1
; Unconditional branch to L_memcpy_1
L_memcpy_4:
; Jump to epilogue
    BEQ R0, R0, L_memcpy_99999
L_memcpy_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
