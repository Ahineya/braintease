; Generated by Ripple C99 Compiler (rcc)

memcpy:
; === Function Prologue ===
; Initialize SB as stack bank (1)
    LI SB, 1
; Save RA at SP
    STORE RA, SB, SP
    ADDI SP, SP, 1
; Save old FP
    STORE FP, SB, SP
    ADDI SP, SP, 1
; Save callee-saved registers S0-S3
    STORE S0, SB, SP
    ADDI SP, SP, 1
    STORE S1, SB, SP
    ADDI SP, SP, 1
    STORE S2, SB, SP
    ADDI SP, SP, 1
    STORE S3, SB, SP
    ADDI SP, SP, 1
; Set FP = SP
    ADD FP, SP, R0
; Allocate 9 slots for locals
    ADDI SP, SP, 9
; Reserve 20 spill slots above locals
    ADDI SP, SP, 20
; Load param 0 from A0
    ADD S3, A0, R0
; Load param 1 from A1
    ADD S2, A1, R0
; Load param 2 from A2
    ADD S1, A2, R0
; Load param 3 from A3
    ADD S0, A3, R0
; Load param 4 from FP-7
    ADDI SC, FP, -7
    LOAD T7, SB, SC
; Load param 5 from FP-8
    ADDI SC, FP, -8
    LOAD T6, SB, SC
; Load param 6 from FP-9
    ADDI SC, FP, -9
    LOAD T5, SB, SC
    ADD T4, FP, R0
    LI T3, 0
    STORE T3, SB, T4
    BEQ R0, R0, L_memcpy_1
; Unconditional branch to L_memcpy_1
L_memcpy_1:
    LOAD T2, SB, T4
    SLT T2, T2, T5
    BEQ T2, R0, L_memcpy_4
; Branch to L_memcpy_4 if condition is false
    BEQ R0, R0, L_memcpy_2
; Unconditional branch to L_memcpy_2 (condition was true)
L_memcpy_2:
    LOAD T1, SB, T4
    ADD T3, T1, R0
    ADD T0, S0, T3
; Runtime bank overflow calculation for dynamic GEP
    LI T2, 4096
    DIV T5, T0, T2
; Initialize SB as stack bank (1)
    LI SB, 1
; Spill t0 to slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    STORE S3, SB, SC
    MOD S3, T0, T2
; Spill t1 to slot 1
    ADD SC, FP, R0
    ADDI SC, SC, 17
    STORE S2, SB, SC
    ADD S2, SB, T5
    ADD T0, S3, R0
    LOAD T3, SB, T0
    LOAD T5, SB, T4
; Reload t0 from slot 0
    ADD SC, FP, R0
    ADDI SC, SC, 16
    LOAD T2, SB, SC
    ADD S0, T5, R0
    ADD S3, T2, S0
; Runtime bank overflow calculation for dynamic GEP
; Spill t2 to slot 2
    ADD SC, FP, R0
    ADDI SC, SC, 18
    STORE S1, SB, SC
; Spill t4 to slot 3
    ADD SC, FP, R0
    ADDI SC, SC, 19
    STORE T7, SB, SC
    LI T7, 4096
    DIV S1, S3, T7
; Spill t5 to slot 4
    ADD SC, FP, R0
    ADDI SC, SC, 20
    STORE T6, SB, SC
    MOD T6, S3, T7
; Spill t10 to slot 5
    ADD SC, FP, R0
    ADDI SC, SC, 21
    STORE T1, SB, SC
    ADD T1, SB, S1
    ADD S3, T6, R0
    STORE T3, SB, S3
    BEQ R0, R0, L_memcpy_3
; Unconditional branch to L_memcpy_3
L_memcpy_3:
    LOAD S0, SB, T4
    LI S1, 1
    ADD S0, S0, S1
    STORE S0, SB, T4
    BEQ R0, R0, L_memcpy_1
; Unconditional branch to L_memcpy_1
L_memcpy_4:
; Jump to epilogue
    BEQ R0, R0, L_memcpy_99999
L_memcpy_99999:
; === Function Epilogue ===
; Restore SP = FP
    ADD SP, FP, R0
; Restore callee-saved registers S3-S0
    ADDI SC, FP, -1
    LOAD S3, SB, SC
    ADDI SC, FP, -2
    LOAD S2, SB, SC
    ADDI SC, FP, -3
    LOAD S1, SB, SC
    ADDI SC, FP, -4
    LOAD S0, SB, SC
; Restore old FP
    ADDI SP, SP, -5
    LOAD FP, SB, SP
; Restore RA
    ADDI SP, SP, -1
    LOAD RA, SB, SP
; Return to caller
    ADD PCB, RAB, R0
    JALR R0, R0, RA
